!function(e,t){if("object"==typeof exports&&"object"==typeof module)module.exports=t();else if("function"==typeof define&&define.amd)define([],t);else{var r=t();for(var a in r)("object"==typeof exports?exports:e)[a]=r[a]}}(window,(function(){return function(e){var t={};function r(a){if(t[a])return t[a].exports;var n=t[a]={i:a,l:!1,exports:{}};return e[a].call(n.exports,n,n.exports,r),n.l=!0,n.exports}return r.m=e,r.c=t,r.d=function(e,t,a){r.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:a})},r.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},r.t=function(e,t){if(1&t&&(e=r(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var a=Object.create(null);if(r.r(a),Object.defineProperty(a,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var n in e)r.d(a,n,function(t){return e[t]}.bind(null,n));return a},r.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return r.d(t,"a",t),t},r.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},r.p="",r(r.s="./src/index.ts")}({"./src/configs.ts":
/*!************************!*\
  !*** ./src/configs.ts ***!
  \************************/
/*! no static exports found */function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.link=t.node=t.linkLimit=t.nodeLimit=t.enablePanZoom=t.backgroundColor=t.height=t.width=void 0,t.width=800,t.height=600,t.backgroundColor={r:1,g:1,b:1,a:1},t.enablePanZoom=!0,t.nodeLimit=100,t.linkLimit=1e3,t.node={style:{shape:"circle",offset:{x:0,y:0},fill:{r:.2,g:.6,b:.2,a:.8},strokeColor:{r:.9,g:.9,b:.9,a:.6},strokeWidth:2,r:5,width:5,height:5,innerWidth:5,innerHeight:5,rotate:0,vertexAlpha:{x:0,y:-4},vertexBeta:{x:-2*Math.sqrt(3),y:2},vertexGamma:{x:2*Math.sqrt(3),y:2}}},t.link={style:{shape:"line",strokeColor:{r:.4,g:.6,b:.8,a:.5},curveness:.2,strokeWidth:2}}},"./src/dataset/index.ts":
/*!******************************!*\
  !*** ./src/dataset/index.ts ***!
  \******************************/
/*! no static exports found */function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.patents=t.miserables=void 0;const a=r(/*! ./miserables */"./src/dataset/miserables.ts");Object.defineProperty(t,"miserables",{enumerable:!0,get:function(){return a.miserables}});const n=r(/*! ./patents */"./src/dataset/patents.ts");Object.defineProperty(t,"patents",{enumerable:!0,get:function(){return n.patents}})},"./src/dataset/miserables.ts":
/*!***********************************!*\
  !*** ./src/dataset/miserables.ts ***!
  \***********************************/
/*! no static exports found */function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.miserables=void 0,t.miserables={nodes:[{id:"Myriel",x:293.47145117553623,y:356.4335718104138,group:1},{id:"Napoleon",x:253.9025088618656,y:374.3058116536445,group:1},{id:"Mlle.Baptistine",x:350.92724989918077,y:332.3325539999943,group:1},{id:"Mme.Magloire",x:356.0916156539997,y:352.7885799116015,group:1},{id:"CountessdeLo",x:254.29291520989335,y:357.3175734076417,group:1},{id:"Geborand",x:257.857293626201,y:335.85427628358957,group:1},{id:"Champtercier",x:259.6255563825028,y:383.83027469832814,group:1},{id:"Cravatte",x:249.8596459829139,y:346.18225516832496,group:1},{id:"Count",x:269.96793951350924,y:390.6800842321571,group:1},{id:"OldMan",x:246.73952311277665,y:364.59357494432066,group:1},{id:"Labarre",x:443.516583315026,y:358.29204789477683,group:2},{id:"Valjean",x:442.16894757641506,y:320.8315532160861,group:2},{id:"Marguerite",x:413.3816851007931,y:240.04091559296504,group:3},{id:"Mme.deR",x:427.2361715950254,y:355.10211589979514,group:2},{id:"Isabeau",x:405.85082858191834,y:330.5201512205085,group:2},{id:"Gervais",x:405.2113121906881,y:316.29125359396136,group:2},{id:"Tholomyes",x:422.4125307781646,y:126.07649449775806,group:3},{id:"Listolier",x:363.1729422677979,y:102.77890368289785,group:3},{id:"Fameuil",x:381.7947103094028,y:66.58133724043948,group:3},{id:"Blacheville",x:383.1792676740261,y:94.80320315500154,group:3},{id:"Favourite",x:361.893731644285,y:70.38696381384074,group:3},{id:"Dahlia",x:398.75350988351653,y:77.09700751527119,group:3},{id:"Zephine",x:349.0495914601376,y:88.80888613372713,group:3},{id:"Fantine",x:398.01411438702473,y:173.76444196945977,group:3},{id:"Mme.Thenardier",x:471.2516533386725,y:262.218701666645,group:4},{id:"Thenardier",x:504.81672085603066,y:283.04638900481723,group:4},{id:"Cosette",x:472.3346941487192,y:228.68779443303478,group:5},{id:"Javert",x:460.05257689332836,y:295.5578154268904,group:4},{id:"Fauchelevent",x:385.43935764589986,y:302.12824588622857,group:0},{id:"Bamatabois",x:393.19041590383597,y:345.4971667690817,group:2},{id:"Perpetue",x:367.53833132893976,y:194.5556482306271,group:3},{id:"Simplice",x:401.3622252354655,y:242.9982847994576,group:2},{id:"Scaufflaire",x:414.67072799627573,y:344.0547720945736,group:2},{id:"Woman1",x:421.4167414392426,y:293.31120219129394,group:2},{id:"Judge",x:420.04392007841335,y:401.03233609152744,group:2},{id:"Champmathieu",x:377.79524254621833,y:383.8105787115102,group:2},{id:"Brevet",x:401.9529844469992,y:388.8684782987411,group:2},{id:"Chenildieu",x:400.6685707133538,y:413.49417790523466,group:2},{id:"Cochepaille",x:379.04969704462354,y:404.26974059233163,group:2},{id:"Pontmercy",x:553.1137401750198,y:244.92830027360765,group:4},{id:"Boulatruelle",x:490.1571086086932,y:249.2101923835803,group:6},{id:"Eponine",x:549.7584267571892,y:302.9031065228431,group:4},{id:"Anzelma",x:515.3807399395134,y:257.0179688983911,group:4},{id:"Woman2",x:433.6608665340514,y:265.8174673886634,group:5},{id:"MotherInnocent",x:403.02536257416523,y:289.03312200121326,group:0},{id:"Gribier",x:341.80973227456775,y:294.212396148023,group:0},{id:"Jondrette",x:565.1965303422186,y:470.65950349375856,group:7},{id:"Mme.Burgon",x:569.1896269242101,y:426.66185053824563,group:7},{id:"Gavroche",x:572.1619393936826,y:364.22606766497563,group:8},{id:"Gillenormand",x:524.5914505208005,y:257.4012214828336,group:5},{id:"Magnon",x:492.548393202341,y:222.5966351328885,group:5},{id:"Mlle.Gillenormand",x:514.3692655023644,y:229.09670062389281,group:5},{id:"Mme.Pontmercy",x:549.3250508171474,y:196.14056833084936,group:5},{id:"Mlle.Vaubois",x:517.8593572394071,y:186.2488309111565,group:5},{id:"Lt.Gillenormand",x:543.274961139455,y:223.68184285180976,group:5},{id:"Marius",x:574.2576699056139,y:283.85211708310334,group:8},{id:"BaronessT",x:573.7140909650625,y:245.59311909245818,group:5},{id:"Mabeuf",x:628.5432532486191,y:314.22078408627164,group:8},{id:"Enjolras",x:588.2395498093626,y:342.0594469923279,group:8},{id:"Combeferre",x:637.7370664614637,y:351.69235762788395,group:8},{id:"Prouvaire",x:650.8833522869903,y:386.83918103509916,group:8},{id:"Feuilly",x:626.8556606438109,y:365.9084164593141,group:8},{id:"Courfeyrac",x:628.3448989975013,y:336.7666454119022,group:8},{id:"Bahorel",x:656.7717772764985,y:362.5885882509189,group:8},{id:"Bossuet",x:599.0185765743107,y:363.8286723407053,group:8},{id:"Joly",x:656.6182923735408,y:343.2375733559165,group:8},{id:"Grantaire",x:638.4375855314988,y:402.4387250378995,group:8},{id:"MotherPlutarch",x:664.556723861883,y:298.0336964526786,group:9},{id:"Gueulemer",x:508.16450525817805,y:330.4502907444367,group:4},{id:"Babet",x:492.56005279882095,y:325.9834092848427,group:4},{id:"Claquesous",x:510.93855506250077,y:309.2869380697328,group:4},{id:"Montparnasse",x:502.7190894173557,y:350.9275183133438,group:4},{id:"Toussaint",x:445.1254802056807,y:266.46242665022004,group:5},{id:"Child1",x:588.0351552386961,y:410.2195555961996,group:10},{id:"Child2",x:559.2777814782705,y:408.3533184893569,group:10},{id:"Brujon",x:537.1787383904656,y:337.86922775917947,group:4},{id:"Mme.Hucheloup",x:626.3775850466164,y:384.35202066894516,group:8}],links:[{source:"Napoleon",target:"Myriel",value:1},{source:"Mlle.Baptistine",target:"Myriel",value:8},{source:"Mme.Magloire",target:"Myriel",value:10},{source:"Mme.Magloire",target:"Mlle.Baptistine",value:6},{source:"CountessdeLo",target:"Myriel",value:1},{source:"Geborand",target:"Myriel",value:1},{source:"Champtercier",target:"Myriel",value:1},{source:"Cravatte",target:"Myriel",value:1},{source:"Count",target:"Myriel",value:2},{source:"OldMan",target:"Myriel",value:1},{source:"Valjean",target:"Labarre",value:1},{source:"Valjean",target:"Mme.Magloire",value:3},{source:"Valjean",target:"Mlle.Baptistine",value:3},{source:"Valjean",target:"Myriel",value:5},{source:"Marguerite",target:"Valjean",value:1},{source:"Mme.deR",target:"Valjean",value:1},{source:"Isabeau",target:"Valjean",value:1},{source:"Gervais",target:"Valjean",value:1},{source:"Listolier",target:"Tholomyes",value:4},{source:"Fameuil",target:"Tholomyes",value:4},{source:"Fameuil",target:"Listolier",value:4},{source:"Blacheville",target:"Tholomyes",value:4},{source:"Blacheville",target:"Listolier",value:4},{source:"Blacheville",target:"Fameuil",value:4},{source:"Favourite",target:"Tholomyes",value:3},{source:"Favourite",target:"Listolier",value:3},{source:"Favourite",target:"Fameuil",value:3},{source:"Favourite",target:"Blacheville",value:4},{source:"Dahlia",target:"Tholomyes",value:3},{source:"Dahlia",target:"Listolier",value:3},{source:"Dahlia",target:"Fameuil",value:3},{source:"Dahlia",target:"Blacheville",value:3},{source:"Dahlia",target:"Favourite",value:5},{source:"Zephine",target:"Tholomyes",value:3},{source:"Zephine",target:"Listolier",value:3},{source:"Zephine",target:"Fameuil",value:3},{source:"Zephine",target:"Blacheville",value:3},{source:"Zephine",target:"Favourite",value:4},{source:"Zephine",target:"Dahlia",value:4},{source:"Fantine",target:"Tholomyes",value:3},{source:"Fantine",target:"Listolier",value:3},{source:"Fantine",target:"Fameuil",value:3},{source:"Fantine",target:"Blacheville",value:3},{source:"Fantine",target:"Favourite",value:4},{source:"Fantine",target:"Dahlia",value:4},{source:"Fantine",target:"Zephine",value:4},{source:"Fantine",target:"Marguerite",value:2},{source:"Fantine",target:"Valjean",value:9},{source:"Mme.Thenardier",target:"Fantine",value:2},{source:"Mme.Thenardier",target:"Valjean",value:7},{source:"Thenardier",target:"Mme.Thenardier",value:13},{source:"Thenardier",target:"Fantine",value:1},{source:"Thenardier",target:"Valjean",value:12},{source:"Cosette",target:"Mme.Thenardier",value:4},{source:"Cosette",target:"Valjean",value:31},{source:"Cosette",target:"Tholomyes",value:1},{source:"Cosette",target:"Thenardier",value:1},{source:"Javert",target:"Valjean",value:17},{source:"Javert",target:"Fantine",value:5},{source:"Javert",target:"Thenardier",value:5},{source:"Javert",target:"Mme.Thenardier",value:1},{source:"Javert",target:"Cosette",value:1},{source:"Fauchelevent",target:"Valjean",value:8},{source:"Fauchelevent",target:"Javert",value:1},{source:"Bamatabois",target:"Fantine",value:1},{source:"Bamatabois",target:"Javert",value:1},{source:"Bamatabois",target:"Valjean",value:2},{source:"Perpetue",target:"Fantine",value:1},{source:"Simplice",target:"Perpetue",value:2},{source:"Simplice",target:"Valjean",value:3},{source:"Simplice",target:"Fantine",value:2},{source:"Simplice",target:"Javert",value:1},{source:"Scaufflaire",target:"Valjean",value:1},{source:"Woman1",target:"Valjean",value:2},{source:"Woman1",target:"Javert",value:1},{source:"Judge",target:"Valjean",value:3},{source:"Judge",target:"Bamatabois",value:2},{source:"Champmathieu",target:"Valjean",value:3},{source:"Champmathieu",target:"Judge",value:3},{source:"Champmathieu",target:"Bamatabois",value:2},{source:"Brevet",target:"Judge",value:2},{source:"Brevet",target:"Champmathieu",value:2},{source:"Brevet",target:"Valjean",value:2},{source:"Brevet",target:"Bamatabois",value:1},{source:"Chenildieu",target:"Judge",value:2},{source:"Chenildieu",target:"Champmathieu",value:2},{source:"Chenildieu",target:"Brevet",value:2},{source:"Chenildieu",target:"Valjean",value:2},{source:"Chenildieu",target:"Bamatabois",value:1},{source:"Cochepaille",target:"Judge",value:2},{source:"Cochepaille",target:"Champmathieu",value:2},{source:"Cochepaille",target:"Brevet",value:2},{source:"Cochepaille",target:"Chenildieu",value:2},{source:"Cochepaille",target:"Valjean",value:2},{source:"Cochepaille",target:"Bamatabois",value:1},{source:"Pontmercy",target:"Thenardier",value:1},{source:"Boulatruelle",target:"Thenardier",value:1},{source:"Eponine",target:"Mme.Thenardier",value:2},{source:"Eponine",target:"Thenardier",value:3},{source:"Anzelma",target:"Eponine",value:2},{source:"Anzelma",target:"Thenardier",value:2},{source:"Anzelma",target:"Mme.Thenardier",value:1},{source:"Woman2",target:"Valjean",value:3},{source:"Woman2",target:"Cosette",value:1},{source:"Woman2",target:"Javert",value:1},{source:"MotherInnocent",target:"Fauchelevent",value:3},{source:"MotherInnocent",target:"Valjean",value:1},{source:"Gribier",target:"Fauchelevent",value:2},{source:"Mme.Burgon",target:"Jondrette",value:1},{source:"Gavroche",target:"Mme.Burgon",value:2},{source:"Gavroche",target:"Thenardier",value:1},{source:"Gavroche",target:"Javert",value:1},{source:"Gavroche",target:"Valjean",value:1},{source:"Gillenormand",target:"Cosette",value:3},{source:"Gillenormand",target:"Valjean",value:2},{source:"Magnon",target:"Gillenormand",value:1},{source:"Magnon",target:"Mme.Thenardier",value:1},{source:"Mlle.Gillenormand",target:"Gillenormand",value:9},{source:"Mlle.Gillenormand",target:"Cosette",value:2},{source:"Mlle.Gillenormand",target:"Valjean",value:2},{source:"Mme.Pontmercy",target:"Mlle.Gillenormand",value:1},{source:"Mme.Pontmercy",target:"Pontmercy",value:1},{source:"Mlle.Vaubois",target:"Mlle.Gillenormand",value:1},{source:"Lt.Gillenormand",target:"Mlle.Gillenormand",value:2},{source:"Lt.Gillenormand",target:"Gillenormand",value:1},{source:"Lt.Gillenormand",target:"Cosette",value:1},{source:"Marius",target:"Mlle.Gillenormand",value:6},{source:"Marius",target:"Gillenormand",value:12},{source:"Marius",target:"Pontmercy",value:1},{source:"Marius",target:"Lt.Gillenormand",value:1},{source:"Marius",target:"Cosette",value:21},{source:"Marius",target:"Valjean",value:19},{source:"Marius",target:"Tholomyes",value:1},{source:"Marius",target:"Thenardier",value:2},{source:"Marius",target:"Eponine",value:5},{source:"Marius",target:"Gavroche",value:4},{source:"BaronessT",target:"Gillenormand",value:1},{source:"BaronessT",target:"Marius",value:1},{source:"Mabeuf",target:"Marius",value:1},{source:"Mabeuf",target:"Eponine",value:1},{source:"Mabeuf",target:"Gavroche",value:1},{source:"Enjolras",target:"Marius",value:7},{source:"Enjolras",target:"Gavroche",value:7},{source:"Enjolras",target:"Javert",value:6},{source:"Enjolras",target:"Mabeuf",value:1},{source:"Enjolras",target:"Valjean",value:4},{source:"Combeferre",target:"Enjolras",value:15},{source:"Combeferre",target:"Marius",value:5},{source:"Combeferre",target:"Gavroche",value:6},{source:"Combeferre",target:"Mabeuf",value:2},{source:"Prouvaire",target:"Gavroche",value:1},{source:"Prouvaire",target:"Enjolras",value:4},{source:"Prouvaire",target:"Combeferre",value:2},{source:"Feuilly",target:"Gavroche",value:2},{source:"Feuilly",target:"Enjolras",value:6},{source:"Feuilly",target:"Prouvaire",value:2},{source:"Feuilly",target:"Combeferre",value:5},{source:"Feuilly",target:"Mabeuf",value:1},{source:"Feuilly",target:"Marius",value:1},{source:"Courfeyrac",target:"Marius",value:9},{source:"Courfeyrac",target:"Enjolras",value:17},{source:"Courfeyrac",target:"Combeferre",value:13},{source:"Courfeyrac",target:"Gavroche",value:7},{source:"Courfeyrac",target:"Mabeuf",value:2},{source:"Courfeyrac",target:"Eponine",value:1},{source:"Courfeyrac",target:"Feuilly",value:6},{source:"Courfeyrac",target:"Prouvaire",value:3},{source:"Bahorel",target:"Combeferre",value:5},{source:"Bahorel",target:"Gavroche",value:5},{source:"Bahorel",target:"Courfeyrac",value:6},{source:"Bahorel",target:"Mabeuf",value:2},{source:"Bahorel",target:"Enjolras",value:4},{source:"Bahorel",target:"Feuilly",value:3},{source:"Bahorel",target:"Prouvaire",value:2},{source:"Bahorel",target:"Marius",value:1},{source:"Bossuet",target:"Marius",value:5},{source:"Bossuet",target:"Courfeyrac",value:12},{source:"Bossuet",target:"Gavroche",value:5},{source:"Bossuet",target:"Bahorel",value:4},{source:"Bossuet",target:"Enjolras",value:10},{source:"Bossuet",target:"Feuilly",value:6},{source:"Bossuet",target:"Prouvaire",value:2},{source:"Bossuet",target:"Combeferre",value:9},{source:"Bossuet",target:"Mabeuf",value:1},{source:"Bossuet",target:"Valjean",value:1},{source:"Joly",target:"Bahorel",value:5},{source:"Joly",target:"Bossuet",value:7},{source:"Joly",target:"Gavroche",value:3},{source:"Joly",target:"Courfeyrac",value:5},{source:"Joly",target:"Enjolras",value:5},{source:"Joly",target:"Feuilly",value:5},{source:"Joly",target:"Prouvaire",value:2},{source:"Joly",target:"Combeferre",value:5},{source:"Joly",target:"Mabeuf",value:1},{source:"Joly",target:"Marius",value:2},{source:"Grantaire",target:"Bossuet",value:3},{source:"Grantaire",target:"Enjolras",value:3},{source:"Grantaire",target:"Combeferre",value:1},{source:"Grantaire",target:"Courfeyrac",value:2},{source:"Grantaire",target:"Joly",value:2},{source:"Grantaire",target:"Gavroche",value:1},{source:"Grantaire",target:"Bahorel",value:1},{source:"Grantaire",target:"Feuilly",value:1},{source:"Grantaire",target:"Prouvaire",value:1},{source:"MotherPlutarch",target:"Mabeuf",value:3},{source:"Gueulemer",target:"Thenardier",value:5},{source:"Gueulemer",target:"Valjean",value:1},{source:"Gueulemer",target:"Mme.Thenardier",value:1},{source:"Gueulemer",target:"Javert",value:1},{source:"Gueulemer",target:"Gavroche",value:1},{source:"Gueulemer",target:"Eponine",value:1},{source:"Babet",target:"Thenardier",value:6},{source:"Babet",target:"Gueulemer",value:6},{source:"Babet",target:"Valjean",value:1},{source:"Babet",target:"Mme.Thenardier",value:1},{source:"Babet",target:"Javert",value:2},{source:"Babet",target:"Gavroche",value:1},{source:"Babet",target:"Eponine",value:1},{source:"Claquesous",target:"Thenardier",value:4},{source:"Claquesous",target:"Babet",value:4},{source:"Claquesous",target:"Gueulemer",value:4},{source:"Claquesous",target:"Valjean",value:1},{source:"Claquesous",target:"Mme.Thenardier",value:1},{source:"Claquesous",target:"Javert",value:1},{source:"Claquesous",target:"Eponine",value:1},{source:"Claquesous",target:"Enjolras",value:1},{source:"Montparnasse",target:"Javert",value:1},{source:"Montparnasse",target:"Babet",value:2},{source:"Montparnasse",target:"Gueulemer",value:2},{source:"Montparnasse",target:"Claquesous",value:2},{source:"Montparnasse",target:"Valjean",value:1},{source:"Montparnasse",target:"Gavroche",value:1},{source:"Montparnasse",target:"Eponine",value:1},{source:"Montparnasse",target:"Thenardier",value:1},{source:"Toussaint",target:"Cosette",value:2},{source:"Toussaint",target:"Javert",value:1},{source:"Toussaint",target:"Valjean",value:1},{source:"Child1",target:"Gavroche",value:2},{source:"Child2",target:"Gavroche",value:2},{source:"Child2",target:"Child1",value:3},{source:"Brujon",target:"Babet",value:3},{source:"Brujon",target:"Gueulemer",value:3},{source:"Brujon",target:"Thenardier",value:3},{source:"Brujon",target:"Gavroche",value:1},{source:"Brujon",target:"Eponine",value:1},{source:"Brujon",target:"Claquesous",value:1},{source:"Brujon",target:"Montparnasse",value:1},{source:"Mme.Hucheloup",target:"Bossuet",value:1},{source:"Mme.Hucheloup",target:"Joly",value:1},{source:"Mme.Hucheloup",target:"Grantaire",value:1},{source:"Mme.Hucheloup",target:"Bahorel",value:1},{source:"Mme.Hucheloup",target:"Courfeyrac",value:1},{source:"Mme.Hucheloup",target:"Gavroche",value:1},{source:"Mme.Hucheloup",target:"Enjolras",value:1}]}},"./src/dataset/patents.ts":
/*!********************************!*\
  !*** ./src/dataset/patents.ts ***!
  \********************************/
/*! no static exports found */function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.patents=void 0,t.patents={nodes:[{type:"patent",id:"6516227",name:"Rechargeable spinal cord stimulator system",numCitations:1363,x:-146.50722772206416,y:237.7898848864182},{type:"patent",id:"6535909",name:"System and method for record and playback of collaborative Web browsing session",numCitations:1438,x:301.0880840740178,y:78.3544919158754},{type:"patent",id:"6549908",name:"Methods and apparatus for interpreting user selections in the context of a relation distributed as a set of orthogonalized sub-relations",numCitations:1268,x:-13.814856590741202,y:-183.5501679350274},{type:"patent",id:"6553563",name:"Development tool, method, and system for client server applications",numCitations:1351,x:-.5224312790142777,y:-247.1495779627279},{type:"patent",id:"6558320",name:"Handheld personal data assistant (PDA) with a medical device and method of using the same",numCitations:1514,x:-204.64071894654788,y:71.57055284512312},{type:"patent",id:"6558351",name:"Closed loop system for controlling insulin infusion",numCitations:1369,x:-212.97816000219387,y:14.71564053417009},{type:"patent",id:"6560461",name:"Authorized location reporting paging system",numCitations:1479,x:-250.43543062905093,y:-191.43720062406038},{type:"patent",id:"6563174",name:"Thin film transistor and matrix display device",numCitations:3284,x:-12.588249503652401,y:-3.606638925074952},{type:"patent",id:"6565509",name:"Analyte monitoring device and methods of use",numCitations:1333,x:-105.25511612362045,y:157.11713360602621},{type:"patent",id:"6571282",name:"Block-based communication in a communication services patterns environment",numCitations:1467,x:139.669746748281,y:253.01406501471942},{type:"patent",id:"6574635",name:"Application instantiation based upon attributes and values stored in a meta data repository, including tiering of application layers objects and components",numCitations:1368,x:11.002027627782116,y:-234.9180529832358},{type:"patent",id:"6577726",name:"Computer telephony integration hotelling method and system",numCitations:1270,x:-87.19153245841262,y:-173.97644755929284},{type:"patent",id:"6587835",name:"Shopping assistance with handheld computing device",numCitations:1471,x:-279.2865813378465,y:110.1587912501507},{type:"patent",id:"6601087",name:"Instant document sharing",numCitations:1397,x:210.94821350137184,y:92.53188786911404},{type:"patent",id:"6602252",name:"Combined dissecting, cauterizing, and stapling device",numCitations:1503,x:147.94977165043258,y:170.08888855631307},{type:"patent",id:"6604117",name:"Method of maintaining a network of partially replicated database system",numCitations:1261,x:-.888555802742035,y:-218.23048820307227},{type:"patent",id:"6604128",name:"Method and system for distributing objects over a network",numCitations:1261,x:-56.73872742120841,y:-243.3483841066443},{type:"patent",id:"6606744",name:"Providing collaborative installation management in a network-based supply chain environment",numCitations:1271,x:153.9948251850397,y:231.46579888120272},{type:"patent",id:"6609150",name:"Web client-server system and method for incompatible page markup and presentation languages",numCitations:1336,x:13.182867607321255,y:-184.8342643188157},{type:"patent",id:"6621834",name:"System and method for voice transmission over network protocols",numCitations:1265,x:85.08228149344369,y:105.43464571232896},{type:"patent",id:"6641533",name:"Handheld personal data assistant (PDA) with a medical device and method of using the same",numCitations:1431,x:-218.09766118001224,y:39.85760035797989},{type:"patent",id:"6644532",name:"Surgical stapling apparatus",numCitations:1267,x:304.6630925316294,y:-29.709611573491397},{type:"patent",id:"6654032",name:"Instant sharing of documents on a remote server",numCitations:1413,x:159.30050355296015,y:108.98389585627005},{type:"patent",id:"6656193",name:"Device for attachment of buttress material to a surgical fastening device",numCitations:1279,x:116.90914153158597,y:-78.76626936858557},{type:"patent",id:"6665648",name:"State models for monitoring process",numCitations:1288,x:-19.75185273935374,y:-126.65338912269928},{type:"patent",id:"6665655",name:"Implicit rating of retrieved information in an information search system",numCitations:1294,x:-205.5103612199467,y:-62.615175772923976},{type:"patent",id:"6684438",name:"Method of using cache to determine the visibility to a remote database client of a plurality of database transactions",numCitations:1265,x:-70.89621190805329,y:-211.65898126469475},{type:"patent",id:"6690387",name:"Touch-screen image scrolling system and method",numCitations:1361,x:-96.0833335861014,y:257.188666044209},{type:"patent",id:"6693232",name:"Inbred corn line LH295",numCitations:1585,x:225.21362396634333,y:-181.7023120873901},{type:"patent",id:"6698643",name:"Expanding parallel jaw device for use with an electromechanical driver device",numCitations:1355,x:116.93380088200308,y:220.21419705439607},{type:"patent",id:"6711565",name:"Method, apparatus, and system for previewing search results",numCitations:1388,x:-37.50448129076735,y:-273.41169584791356},{type:"patent",id:"6716233",name:"Electromechanical driver and remote surgical instrument attachment having computer assisted control capabilities",numCitations:1244,x:99.98744927740107,y:212.59527229962606},{type:"patent",id:"6718361",name:"Method and apparatus for reliable and scalable distribution of data files in distributed networks",numCitations:1349,x:-214.4706454200155,y:179.76445383311545},{type:"patent",id:"6724399",name:"Methods and apparatus for enabling keyboard accelerators in applications implemented via a browser",numCitations:1271,x:-3.865437098036597,y:-168.04665075977616},{type:"patent",id:"6727522",name:"Transistor and semiconductor device",numCitations:3301,x:45.493009086533476,y:-18.399336761865555},{type:"patent",id:"6728702",name:"System and method to implement an integrated search center supporting a full-text search and query on a database",numCitations:1290,x:-50.77651269647964,y:-265.6439416642619},{type:"patent",id:"6728960",name:"Techniques for managing multiple threads in a browser environment",numCitations:1287,x:-31.86098260027274,y:-177.09627925166075},{type:"patent",id:"6732095",name:"Method and apparatus for mapping between XML and relational representations",numCitations:1318,x:-45.17430826877544,y:-152.23938355298804},{type:"patent",id:"6732100",name:"Database access method and system for user role defined access",numCitations:1347,x:-59.210136806292674,y:-174.83877990849572},{type:"patent",id:"6732111",name:"Method, apparatus, system, and program product for attaching files and other objects to a partially replicated database",numCitations:1294,x:-90.7397050479451,y:-244.71990328774314},{type:"patent",id:"6754681",name:"Partially replicated distributed database with multiple levels of remote clients",numCitations:1269,x:-79.58083870312655,y:-228.1724054173842},{type:"patent",id:"6763351",name:"Method, apparatus, and system for attaching search results",numCitations:1487,x:-25.243474733492743,y:-263.25740794021067},{type:"patent",id:"6763501",name:"Remote document serving",numCitations:1319,x:158.3253837620942,y:93.49546231516919},{type:"patent",id:"6768904",name:"Data communication method using mobile terminal",numCitations:1256,x:-307.97606158133414,y:18.769756679797396},{type:"patent",id:"6782383",name:"System and method to implement a persistent and dismissible search center frame",numCitations:1282,x:-12.976177557835852,y:-272.9194404073791},{type:"patent",id:"6783524",name:"Robotic surgical tool with ultrasound cauterizing and cutting instrument",numCitations:1505,x:43.38231098694066,y:279.08217801147714},{type:"patent",id:"6786382",name:"Surgical stapling instrument incorporating an articulation joint for a firing bar track",numCitations:1371,x:134.94078164502835,y:-65.10082373566381},{type:"patent",id:"6804330",name:"Method and system for accessing CRM data via voice",numCitations:1348,x:41.445251723842865,y:-236.9915648109865},{type:"patent",id:"6809653",name:"Telemetered characteristic monitor system and method of using the same",numCitations:1250,x:-192.3665947756808,y:85.20039713859154},{type:"patent",id:"6826565",name:"Method and apparatus for serving files to browsing clients",numCitations:1253,x:-187.202078612142,y:-205.8028067140975},{type:"patent",id:"6826582",name:"Method and system for using file systems for content management",numCitations:1262,x:-173.39071713434592,y:-84.74810645391052},{type:"patent",id:"6826745",name:"System and method for smart scripting call centers and configuration thereof",numCitations:1290,x:-76.78126433121005,y:-189.22148175125054},{type:"patent",id:"6829655",name:"Method and system for server synchronization with a computing device via a companion device",numCitations:1292,x:54.15067210701869,y:-193.55954311545358},{type:"patent",id:"6830174",name:"Medical instrument",numCitations:1345,x:241.6836563040002,y:178.8101554942473},{type:"patent",id:"6842748",name:"Usage based strength between related information in an information retrieval system",numCitations:1273,x:-255.7671401763918,y:-89.30941490160309},{type:"patent",id:"6843403",name:"Surgical clamping, cutting and stapling device",numCitations:1278,x:80.62267888317515,y:204.67249292957572},{type:"patent",id:"6850252",name:"Intelligent electronic appliance system and method",numCitations:1784,x:-269.0939625716982,y:80.79152540917103},{type:"patent",id:"6850895",name:"Assignment manager",numCitations:1429,x:-104.71523172899978,y:-237.67489051495383},{type:"patent",id:"6850949",name:"System and method for generating a dynamic interface via a communications network",numCitations:1276,x:170.8948478666423,y:-157.1623996387279},{type:"patent",id:"6852915",name:"Inbred corn line LH283BtMON810",numCitations:1584,x:214.2878252666797,y:-221.65064590625735},{type:"patent",id:"6905057",name:"Surgical stapling instrument incorporating a firing mechanism having a linked rack transmission",numCitations:1398,x:204.244314091743,y:-78.10023672232607},{type:"patent",id:"6959852",name:"Surgical stapling instrument with multistroke firing incorporating an anti-backup mechanism",numCitations:1279,x:214.47741140236582,y:-56.291587636591125},{type:"patent",id:"6964363",name:"Surgical stapling instrument having articulation joint support plates for supporting a firing bar",numCitations:1330,x:171.89247270898028,y:-97.41002462550293},{type:"patent",id:"6978921",name:"Surgical stapling instrument incorporating an E-beam firing mechanism",numCitations:1271,x:220.9998003804044,y:-71.42078135636545},{type:"patent",id:"6981628",name:"Surgical instrument with a lateral-moving articulation control",numCitations:1588,x:155.12209667738722,y:-93.69628751460294},{type:"patent",id:"7000818",name:"Surgical stapling instrument having separate distinct closing and firing systems",numCitations:1422,x:227.01768845379692,y:7.024056611463051},{type:"patent",id:"7025743",name:"External infusion device with remote programming, bolus estimator and/or vibration alarm capabilities",numCitations:1348,x:-139.33487275744275,y:46.52061115334398},{type:"patent",id:"7049190",name:"Method for forming ZnO film, method for forming ZnO semiconductor layer, method for fabricating semiconductor device, and semiconductor device",numCitations:3234,x:-289.10918833611,y:-97.96776938549537},{type:"patent",id:"7055731",name:"Surgical stapling instrument incorporating a tapered firing bar for increased flexibility around the articulation joint",numCitations:1325,x:230.49518386439988,y:-59.64224567858248},{type:"patent",id:"7061014",name:"Natural-superlattice homologous single crystal thin film, method for preparation thereof, and device using said single crystal thin film",numCitations:3339,x:-5.800882044901439,y:68.52641595031525},{type:"patent",id:"7064346",name:"Transistor and semiconductor device",numCitations:3268,x:-3.4003031519913716,y:25.981356836043688},{type:"patent",id:"7105868",name:"High-electron mobility transistor with zinc oxide",numCitations:3233,x:-17.835785749785817,y:199.91883720210305},{type:"patent",id:"7111769",name:"Surgical instrument incorporating an articulation mechanism having rotation about the longitudinal axis",numCitations:1278,x:151.22579832524045,y:-37.17099074749013},{type:"patent",id:"7147138",name:"Surgical stapling instrument having an electroactive polymer actuated buttress deployment mechanism",numCitations:1428,x:189.086143238575,y:-73.69130392683924},{type:"patent",id:"7159750",name:"Surgical stapling device",numCitations:1258,x:-41.29995186519443,y:292.8462674537822},{type:"patent",id:"7211825",name:"Indium oxide-based thin film transistors and circuits",numCitations:3245,x:-312.3839057221477,y:-5.614541567133007},{type:"patent",id:"7246734",name:"Rotary hydraulic pump actuated multi-stroke surgical instrument",numCitations:1288,x:200.44563380086515,y:-63.18865588076886},{type:"patent",id:"7282782",name:"Combined binary oxide semiconductor device",numCitations:3273,x:-125.8309041477986,y:-31.277877893580488},{type:"patent",id:"7297977",name:"Semiconductor device",numCitations:3318,x:-128.28288629696726,y:-55.26147557803329},{type:"patent",id:"7323356",name:"LnCuO(S,Se,Te)monocrystalline thin film, its manufacturing method, and optical device or electronic device using the monocrystalline thin film",numCitations:3251,x:-18.59755305395574,y:88.95531610838968},{type:"patent",id:"7340411",name:"System and method for generating, capturing, and managing customer lead information over a computer network",numCitations:1282,x:171.1408315591698,y:-202.24883708044808},{type:"patent",id:"7380695",name:"Surgical stapling instrument having a single lockout mechanism for prevention of firing",numCitations:1386,x:186.25833530110194,y:-21.66321873245209},{type:"patent",id:"7380696",name:"Articulating surgical stapling instrument incorporating a two-piece E-beam firing mechanism",numCitations:1388,x:207.9029593903179,y:-8.531533737621885},{type:"patent",id:"7385224",name:"Thin film transistor having an etching protection film and manufacturing method thereof",numCitations:3224,x:-209.82230482555335,y:-138.5100409900293},{type:"patent",id:"7402506",name:"Methods of making thin film transistors comprising zinc-oxide-based semiconductor materials and transistors made thereby",numCitations:3258,x:205.02475667447774,y:185.67878066443038},{type:"patent",id:"7404508",name:"Surgical stapling and cutting device",numCitations:1517,x:142.8534886173237,y:1.3325885281748553},{type:"patent",id:"7411209",name:"Field-effect transistor and method for manufacturing the same",numCitations:3255,x:98.46207221183528,y:123.03084775370279},{type:"patent",id:"7453065",name:"Sensor and image pickup device",numCitations:3230,x:-.16573743942671854,y:141.28922935299022},{type:"patent",id:"7453087",name:"Thin-film transistor and thin-film diode having amorphous-oxide semiconductor layer",numCitations:3242,x:64.92619908272222,y:181.84593665090443},{type:"patent",id:"7462862",name:"Transistor using an isovalent semiconductor oxide as the active channel layer",numCitations:3244,x:-69.61679142848251,y:-17.951431766711924},{type:"patent",id:"7464846",name:"Surgical instrument having a removable battery",numCitations:1287,x:181.84194955991686,y:-6.130356644541759},{type:"patent",id:"7468304",name:"Method of fabricating oxide semiconductor device",numCitations:3240,x:43.14447422876499,y:84.30857449883901},{type:"patent",id:"7501293",name:"Semiconductor device in which zinc oxide is used as a semiconductor material and method for manufacturing the semiconductor device",numCitations:3216,x:100.75984495619763,y:263.93928117765387},{type:"patent",id:"7506791",name:"Surgical stapling instrument with mechanical mechanism for limiting maximum tissue compression",numCitations:1257,x:162.8994374938383,y:-13.50766436461125},{type:"patent",id:"7620655",name:"Method, device and computer program product for identifying visitors of websites",numCitations:1243,x:273.7453257058471,y:-134.11969716806783},{type:"patent",id:"7632985",name:"Soybean event MON89788 and methods for detection thereof",numCitations:1477,x:25.156412731130995,y:232.6383745363165},{type:"patent",id:"7663607",name:"Multipoint touchscreen",numCitations:2217,x:148.31729075714412,y:-252.1205411729562},{type:"patent",id:"7674650",name:"Semiconductor device and manufacturing method thereof",numCitations:3439,x:265.20775273511885,y:97.08753175649879},{type:"patent",id:"7732819",name:"Semiconductor device and manufacturing method thereof",numCitations:3288,x:241.27432475696145,y:92.57917159661595},{type:"patent",id:"8053184",name:"Soybean event MON89788 and methods for detection thereof",numCitations:1249,x:12.74173927451986,y:223.33050946853854},{type:"inventor",id:"4082602-2",name:"Adam Heller",numPatents:278,x:-78.97918367878395,y:175.83458551945697},{type:"inventor",id:"6551276-11",name:"Adrian Gut",numPatents:14,x:-126.49163896882082,y:77.05392542894437},{type:"inventor",id:"6551276-3",name:"Alan Haubach",numPatents:15,x:-133.54480618517556,y:13.73644337954243},{type:"inventor",id:"6732095-1",name:"Alex Warshavsky",numPatents:38,x:-41.43006091014681,y:-115.69468137064817},{type:"inventor",id:"4082097-1",name:"Alfred E. Mann",numPatents:73,x:-166.25127823417688,y:64.21424556623339},{type:"inventor",id:"7402506-2",name:"Andrea C. Scuderi",numPatents:2,x:232.021013564944,y:201.54360553214553},{type:"inventor",id:"6295530-1",name:"Andrew M. Ritchie",numPatents:3,x:-180.13270109380883,y:-175.89335875039285},{type:"inventor",id:"5944791-1",name:"Andrew W. Scherpbier",numPatents:8,x:89.03596788702271,y:73.41966601562058},{type:"inventor",id:"6665648-4",name:"Andrzej P. Mazur",numPatents:1,x:-17.75957738133269,y:-90.04327884141138},{type:"inventor",id:"6577726-4",name:"Anil K. Annadata",numPatents:19,x:-90.27237726758581,y:-142.1198155312784},{type:"inventor",id:"6336137-3",name:"Anil Mukundan",numPatents:24,x:44.97570003882059,y:-173.1912630521635},{type:"inventor",id:"6829655-3",name:"Anupam Singhal",numPatents:12,x:68.03341497080808,y:-159.6164090183031},{type:"inventor",id:"5276262-2",name:"Arthur L. Johnson",numPatents:9,x:185.5095664352228,y:-228.8419915898405},{type:"inventor",id:"7082832-4",name:"Ayanori Endo",numPatents:5,x:116.09261573010951,y:149.17176081875573},{type:"inventor",id:"6370584-1",name:"Azer Bestavros",numPatents:8,x:-240.41292415194087,y:197.40201072984638},{type:"inventor",id:"5722997-2",name:"Behrad Aria",numPatents:75,x:-76.88639579899268,y:140.59743480285144},{type:"inventor",id:"4972224-1",name:"Bennie Thompson",numPatents:46,x:129.80735052389812,y:-4.481972559839983},{type:"inventor",id:"7620655-2",name:"Björn Sperling",numPatents:1,x:265.69802466021343,y:-163.1748759268247},{type:"inventor",id:"6551276-12",name:"Bob Murtfeldt",numPatents:14,x:-104.57602641605023,y:43.21929386017491},{type:"inventor",id:"6809653-9",name:"Brad T. Hite",numPatents:4,x:-178.740694429597,y:114.56430107100311},{type:"inventor",id:"6665648-5",name:"Brian Groves",numPatents:3,x:-4.063703727593559,y:-93.24666021615177},{type:"inventor",id:"7000818-3",name:"Brian J. Hemmelgarn",numPatents:2,x:251.87825271692208,y:28.28980319526008},{type:"inventor",id:"6658577-1",name:"Brian Q. Huppi",numPatents:94,x:123.19631987835258,y:-269.5549552777111},{type:"inventor",id:"5465895-1",name:"Bryan D. Knodel",numPatents:147,x:249.27159352509696,y:149.8942269653444},{type:"inventor",id:"5948006-1",name:"Carla M. Mann",numPatents:30,x:-148.41153476987805,y:268.2102368533701},{type:"inventor",id:"6558351-8",name:"Cary D. Talbot",numPatents:51,x:-242.1201373960085,y:1.0809105861722483},{type:"inventor",id:"5176644-1",name:"Chad Srisathapat",numPatents:28,x:-106.59780325645289,y:56.72415996247363},{type:"inventor",id:"6732095-2",name:"Chandrakant Ramkrishna Bhavsar",numPatents:7,x:-56.44692423602858,y:-114.38936355952521},{type:"inventor",id:"6804330-5",name:"Chris Haven",numPatents:8,x:76.58996926607027,y:-233.59376421774968},{type:"inventor",id:"5859916-3",name:"Christopher A. Julian",numPatents:35,x:32.49529202915526,y:307.85587157329917},{type:"inventor",id:"5963953-3",name:"Christopher Stauber",numPatents:3,x:38.876499177308936,y:-254.6853371485407},{type:"inventor",id:"6593834-2",name:"Chunong Qiu",numPatents:30,x:-299.51357073275767,y:28.693586133179505},{type:"inventor",id:"5703357-3",name:"Cindy Xing Qiu",numPatents:37,x:-307.60494602088494,y:-36.09974297692554},{type:"inventor",id:"5382232-1",name:"Cliff Hague",numPatents:25,x:-158.94889170792217,y:75.57366125967091},{type:"inventor",id:"6535909-1",name:"David Bradley Rust",numPatents:10,x:293.89378266881215,y:108.24045592690449},{type:"inventor",id:"5713911-1",name:"David C. Racenet",numPatents:117,x:-70.73199996729076,y:283.6884502132661},{type:"inventor",id:"5512426-1",name:"David H. Levy",numPatents:97,x:175.62273346829593,y:195.03348092042785},{type:"inventor",id:"5755737-3",name:"David Karl Lee Peterson",numPatents:10,x:-116.19997593920681,y:235.42317467768706},{type:"inventor",id:"6004276-13",name:"David L. Rabbers",numPatents:9,x:90.05455138839467,y:-199.76724302660992},{type:"inventor",id:"4127227-1",name:"David T. Green",numPatents:253,x:320.0538956493474,y:-2.5674406983783777},{type:"inventor",id:"5329655-1",name:"Dean L. Garner",numPatents:9,x:82.9868378665844,y:-75.01472155002138},{type:"inventor",id:"6551276-9",name:"Deborah Ruppert",numPatents:22,x:-118.26552937451507,y:20.131481189101695},{type:"inventor",id:"6551276-10",name:"Dennis P. Bishop",numPatents:16,x:-113.04138432659943,y:68.5347918156229},{type:"inventor",id:"5918159-2",name:"Denzil Willoughby Chesney",numPatents:8,x:-221.3438163197732,y:-180.31258868435725},{type:"inventor",id:"6912839-2",name:"Derek Dee Deville",numPatents:127,x:124.00562369714609,y:30.303518573213328},{type:"inventor",id:"6718361-8",name:"Domenic J. LaRosa",numPatents:7,x:-185.1634027151588,y:191.49880558090896},{type:"inventor",id:"6850949-1",name:"Doug Warner",numPatents:1,x:197.4109586624888,y:-141.51137425901277},{type:"inventor",id:"6530932-2",name:"Douglas B. Hoffman",numPatents:41,x:112.65902202678886,y:-41.95179419340801},{type:"inventor",id:"6434550-1",name:"Douglas K. Warner",numPatents:11,x:-240.213051803147,y:-58.38534522176044},{type:"inventor",id:"6850895-5",name:"Duane Wandless",numPatents:3,x:-141.77120370957505,y:-235.84945888555336},{type:"inventor",id:"7632985-4",name:"Ellen Dickinson",numPatents:5,x:-6.650712953659232,y:243.85922494977996},{type:"inventor",id:"5616532-3",name:"Ephraim Heller",numPatents:125,x:-136.66276931786788,y:148.50833287306844},{type:"inventor",id:"6724399-1",name:"Ernst Katchour",numPatents:2,x:20.460705177816816,y:-138.6316174346047},{type:"inventor",id:"4403687-2",name:"Eugene L. Timperman",numPatents:69,x:167.81405976240322,y:23.653794348670516},{type:"inventor",id:"6905057-2",name:"Frederick E. Shelton, IV",numPatents:1047,x:206.94055601161958,y:-33.63794401922105},{type:"inventor",id:"5041086-4",name:"Fredric C. Colman",numPatents:119,x:-93.07141522233565,y:187.61382791214774},{type:"inventor",id:"6433921-2",name:"G. Victor Treyz",numPatents:19,x:-250.2141922087249,y:117.70936188128789},{type:"inventor",id:"6558351-1",name:"Garry M. Steil",numPatents:21,x:-197.55033843707088,y:-14.969054157255261},{type:"inventor",id:"5707369-2",name:"Geoffrey C. Hueil",numPatents:37,x:88.77732129975968,y:-59.34294469090431},{type:"inventor",id:"6826582-2",name:"George Ericsson",numPatents:1,x:-158.02070855249937,y:-111.41355666075413},{type:"inventor",id:"RE28932-2",name:"Graham W. Bryan",numPatents:17,x:302.15197174981995,y:2.971153301217186},{type:"inventor",id:"6144679-1",name:"Gregory S Herman",numPatents:70,x:-107.08721212438253,y:-22.999325980475344},{type:"inventor",id:"6601087-2",name:"Guanghong Yang",numPatents:8,x:181.9400868080221,y:77.6677862338119},{type:"inventor",id:"6577726-3",name:"Henry D. Jay",numPatents:7,x:-122.02320476982499,y:-157.95566732418285},{type:"inventor",id:"4283024-1",name:"Henry R. Sienkiewicz",numPatents:35,x:274.60415603712727,y:-27.27330962584567},{type:"inventor",id:"7323356-5",name:"Hidenori Hiramatsu",numPatents:4,x:-36.605424251950446,y:115.850089319988},{type:"inventor",id:"4703019-2",name:"Hideo Hosono",numPatents:68,x:-9.859457094237333,y:112.18374696348913},{type:"inventor",id:"4253061-3",name:"Hideo Ohno",numPatents:55,x:16.424397835913993,y:1.5981290321141162},{type:"inventor",id:"5272069-6",name:"Hiromichi Ota",numPatents:19,x:-42.930231233299565,y:72.03081578296118},{type:"inventor",id:"5041200-1",name:"Hiromitsu Ishii",numPatents:40,x:-240.4509629339296,y:-150.27601265988352},{type:"inventor",id:"6863363-1",name:"Hisato Yabuta",numPatents:40,x:60.4372147665455,y:56.49664921881387},{type:"inventor",id:"7385224-2",name:"Hitoshi Hokari",numPatents:3,x:-241.8310333799511,y:-133.54049779295428},{type:"inventor",id:"5041200-4",name:"Ikuhiro Yamaguchi",numPatents:10,x:-228.78086701719153,y:-162.3667158856017},{type:"inventor",id:"4997262-1",name:"Ikuo Sakono",numPatents:9,x:-22.451556652393943,y:-34.04750168418211},{type:"inventor",id:"5081422-1",name:"Ishiang Shih",numPatents:28,x:-286.3270775940396,y:-23.733105119458497},{type:"inventor",id:"6281898-2",name:"Jacquelyn A. Martino",numPatents:43,x:-77.40426674630258,y:233.14366209397406},{type:"inventor",id:"6665648-3",name:"Jai-Jein Yu",numPatents:3,x:-31.84005286492673,y:-91.62375747364119},{type:"inventor",id:"4809697-1",name:"James D. Causey, III",numPatents:108,x:-178.265216120422,y:51.755680930746685},{type:"inventor",id:"4863425-2",name:"James L. Henke",numPatents:25,x:-229.82632326693144,y:81.1483918350451},{type:"inventor",id:"5533238-1",name:"James Say",numPatents:115,x:-110.26514650550313,y:189.73841907261374},{type:"inventor",id:"6711565-2",name:"Jason Zoss",numPatents:14,x:-36.79763583041338,y:-303.3606293140057},{type:"inventor",id:"6551276-8",name:"Jay Yonemoto",numPatents:26,x:-108.39060115065696,y:30.667530964984817},{type:"inventor",id:"5863326-1",name:"Jeffrey E. Nause",numPatents:7,x:-34.97468782651399,y:225.53781276672427},{type:"inventor",id:"4951278-2",name:"Jeffrey I. Cohen",numPatents:45,x:-106.67729256003422,y:-275.96655765182123},{type:"inventor",id:"6393605-1",name:"Jeffrey Loomans",numPatents:4,x:-12.089523280862164,y:-146.87295689250564},{type:"inventor",id:"5243622-2",name:"Jeffrey M. Fischer",numPatents:23,x:-69.11510576403663,y:-121.59596238278911},{type:"inventor",id:"5897563-4",name:"Jeffrey S. Swayze",numPatents:237,x:182.7575218770712,y:-42.652264875397925},{type:"inventor",id:"7608761-4",name:"Jennifer Rinehart",numPatents:9,x:14.603033717644877,y:258.01693807943076},{type:"inventor",id:"7380696-3",name:"Jerry R. Morgan",numPatents:1,x:240.77923512539172,y:.756185655222625},{type:"inventor",id:"5715450-1",name:"Jesse Ambrose",numPatents:19,x:36.180423514508206,y:-271.11815189166657},{type:"inventor",id:"6711565-3",name:"Jian-Jung Ying",numPatents:15,x:-52.40594362916027,y:-298.6209852446577},{type:"inventor",id:"6516227-4",name:"Joey Chen",numPatents:50,x:-154.54667136290993,y:208.95072280734337},{type:"inventor",id:"6233617-2",name:"John Coker",numPatents:29,x:-107.81893815632144,y:-170.9074676231656},{type:"inventor",id:"4561444-1",name:"John H. Livingston",numPatents:31,x:-152.85300444583956,y:85.10940008964967},{type:"inventor",id:"5237178-2",name:"John J. Mastrototaro",numPatents:77,x:-205.49739590958532,y:50.31477970484868},{type:"inventor",id:"6424847-3",name:"John J. Shin",numPatents:6,x:-185.37446355710384,y:-3.2872027106235895},{type:"inventor",id:"5713911-2",name:"John W. Beardsley",numPatents:110,x:-33.81475988638202,y:262.88267211113725},{type:"inventor",id:"6690387-1",name:"John Zimmerman",numPatents:16,x:-103.86436428501,y:287.0324152077035},{type:"inventor",id:"6295530-2",name:"Jonathan Bradshaw",numPatents:7,x:-211.8714260910478,y:-224.50904787445123},{type:"inventor",id:"6964363-2",name:"Joseph Charles Heuil",numPatents:1,x:157.89490960975428,y:-126.44781831975064},{type:"inventor",id:"6804330-4",name:"Joseph Harb",numPatents:16,x:61.12664822458566,y:-268.1908816611899},{type:"inventor",id:"7154477-2",name:"Joshua A. Strickon",numPatents:31,x:143.607727645999,y:-281.669369261142},{type:"inventor",id:"6665648-1",name:"Karen Brodersen",numPatents:2,x:-52.887761617406746,y:-135.25324601212748},{type:"inventor",id:"6914182-1",name:"Katsutoshi Takeda",numPatents:12,x:-301.89433487691184,y:-70.43324650808906},{type:"inventor",id:"5925224-1",name:"Kazuki Kobayashi",numPatents:22,x:-41.900676918096416,y:7.301358596622912},{type:"inventor",id:"7061014-4",name:"Kazushige Ueda",numPatents:8,x:-37.66496363448323,y:59.62475565738286},{type:"inventor",id:"4356455-3",name:"Keishi Saito",numPatents:60,x:10.219140633910085,y:114.60611008460567},{type:"inventor",id:"6175752-9",name:"Keith A. Friedman",numPatents:56,x:-72.76478399432692,y:157.96280246014734},{type:"inventor",id:"D263987-1",name:"Keith L. Milliman",numPatents:148,x:285.27055146309806,y:-4.161607699952845},{type:"inventor",id:"D304234-2",name:"Keith Ratcliff",numPatents:76,x:298.25438655644587,y:-62.037733990730615},{type:"inventor",id:"6838397-3",name:"Kengo Akimoto",numPatents:301,x:233.30591089284124,y:118.12865814744283},{type:"inventor",id:"4072236-1",name:"Kenji Nomura",numPatents:72,x:-18.491573620748454,y:164.3319743882085},{type:"inventor",id:"4890611-3",name:"Kenneth H. Mollenauer",numPatents:139,x:171.12139099125284,y:149.8278932183207},{type:"inventor",id:"5409498-4",name:"Kenneth S. Wales",numPatents:34,x:151.61506500486365,y:-68.1715301096975},{type:"inventor",id:"6558351-2",name:"Kerstin Rebrin",numPatents:8,x:-213.99832648219893,y:-18.21020350970695},{type:"inventor",id:"7083075-3",name:"Kevin R. Doll",numPatents:33,x:195.17161861296412,y:21.82757190718286},{type:"inventor",id:"6826745-3",name:"Kevin R. Nix",numPatents:5,x:-113.52318349679786,y:-186.65850464097767},{type:"inventor",id:"4682596-2",name:"Kevin W. Smith",numPatents:245,x:142.01517052619224,y:35.31713032040018},{type:"inventor",id:"6336137-1",name:"King-Hwa Lee",numPatents:7,x:29.136416821389545,y:-152.83892279100135},{type:"inventor",id:"6553563-3",name:"Klaus W. Strobel",numPatents:3,x:18.502269802896187,y:-277.84229119164485},{type:"inventor",id:"5715675-2",name:"Korey Kline",numPatents:67,x:107.3928086404656,y:.12497168391208881},{type:"inventor",id:"6718361-2",name:"Krishna Mangiapudi",numPatents:2,x:-221.42351181095376,y:210.68462107621696},{type:"inventor",id:"6577726-1",name:"Kuang-Yang Huang",numPatents:7,x:-110.90293474419634,y:-144.1107477274019},{type:"inventor",id:"7159750-5",name:"Lee Ann Olson",numPatents:102,x:-12.291045729816593,y:284.322824027671},{type:"inventor",id:"6718361-4",name:"Leroy R. Karge",numPatents:6,x:-246.56898495901828,y:176.8643082489128},{type:"inventor",id:"6551276-4",name:"Luis J. Malave",numPatents:25,x:-150.46955158412106,y:15.466681355594043},{type:"inventor",id:"6048110-3",name:"Lyn M. Irving",numPatents:50,x:185.89368255203638,y:211.73497316837444},{type:"inventor",id:"6718361-3",name:"Lynne M. Murach",numPatents:6,x:-184.59731612599379,y:168.95459030128404},{type:"inventor",id:"5948789-1",name:"Magnus Larsson",numPatents:32,x:282.3498743492304,y:-105.85390576839409},{type:"inventor",id:"6829655-2",name:"Magnus Vejlstrup",numPatents:5,x:84.57683420505849,y:-211.60546591129122},{type:"inventor",id:"6711565-4",name:"Marc Caltabiano",numPatents:18,x:-21.572503547031765,y:-303.25001204800884},{type:"inventor",id:"7078503-3",name:"Marianne Malven",numPatents:24,x:39.36478912183982,y:204.50761088237962},{type:"inventor",id:"6223205-2",name:"Mark E. Crovella",numPatents:11,x:-239.130673392076,y:159.5386268120703},{type:"inventor",id:"6621834-2",name:"Mark Randle Boyns",numPatents:9,x:92.9515991340844,y:139.72491699418129},{type:"inventor",id:"5534132-1",name:"Mark S. Vreeke",numPatents:99,x:-126.17414240825202,y:182.14886801748534},{type:"inventor",id:"4892244-4",name:"Mark S. Zeiner",numPatents:112,x:87.86551233944792,y:-93.61435949906866},{type:"inventor",id:"6829655-6",name:"Martin Susser",numPatents:8,x:86.5166449716311,y:-176.3680568624842},{type:"inventor",id:"4486720-1",name:"Masahiro Hirano",numPatents:64,x:-26.473941021328834,y:50.583877501287475},{type:"inventor",id:"5622653-1",name:"Masahiro Orita",numPatents:13,x:-43.311943512469504,y:88.05852401092362},{type:"inventor",id:"6080998-3",name:"Masao Isomura",numPatents:3,x:-277.1673968733419,y:-69.16313590358769},{type:"inventor",id:"4902671-3",name:"Masashi Kawasaki",numPatents:44,x:25.499834981751505,y:12.458835962907768},{type:"inventor",id:"5117838-1",name:"Matthew A. Palmer",numPatents:213,x:111.84440719512871,y:17.55352243854731},{type:"inventor",id:"6577726-2",name:"Matthew S. Malden",numPatents:15,x:-89.77281715762112,y:-212.5200099480745},{type:"inventor",id:"6665655-2",name:"Michael A. Myer",numPatents:3,x:-222.1548984266278,y:-91.88370779987125},{type:"inventor",id:"5632432-4",name:"Michael E. Setser",numPatents:46,x:236.1453486905915,y:-29.533043437416676},{type:"inventor",id:"5306623-3",name:"Michael F. Tomasco",numPatents:89,x:-136.35034022301926,y:166.87376786095362},{type:"inventor",id:"6606744-1",name:"Michael G. Mikurak",numPatents:14,x:143.06107123828787,y:203.68650030864686},{type:"inventor",id:"6264087-1",name:"Michael P. Whitman",numPatents:134,x:88.31330790988822,y:237.10476528058422},{type:"inventor",id:"6665648-2",name:"Michael Tsunghsi Yu",numPatents:2,x:7.3045597411881005,y:-101.62893346986323},{type:"inventor",id:"6081518-1",name:"Michel K. Bowman-Amuah",numPatents:56,x:153.55805703292674,y:278.7584163590403},{type:"inventor",id:"4224725-1",name:"Michio Kadota",numPatents:173,x:70.25249110067011,y:260.17630684500784},{type:"inventor",id:"6850949-2",name:"Mike Myer",numPatents:1,x:200.98410027290677,y:-165.1800994159187},{type:"inventor",id:"5261037-2",name:"Min Zhu",numPatents:119,x:187.21787990519445,y:119.18052322241124},{type:"inventor",id:"6732100-4",name:"Mingte J. Chen",numPatents:1,x:-74.89396821135054,y:-144.48151011840986},{type:"inventor",id:"5176502-3",name:"Mitchell J. Palmer",numPatents:40,x:315.79092621337537,y:-58.79666939419763},{type:"inventor",id:"7385224-3",name:"Motohiko Yoshida",numPatents:5,x:-231.18768324847443,y:-116.45107756791272},{type:"inventor",id:"5918159-1",name:"Mundi Fomukong",numPatents:12,x:-221.62526815353186,y:-201.75317388265475},{type:"inventor",id:"7632985-3",name:"Nancy Taylor",numPatents:5,x:50.015886492956845,y:227.2759540780497},{type:"inventor",id:"7468304-1",name:"Nobuyuki Kaji",numPatents:16,x:41.822376082161696,y:52.514246752854255},{type:"inventor",id:"7205716-5",name:"Norihito Sone",numPatents:19,x:269.115065567314,y:70.01224836249358},{type:"inventor",id:"5358514-3",name:"Paul M. Meadows",numPatents:70,x:-171.2697553163847,y:256.54794390887173},{type:"inventor",id:"6558351-3",name:"Paul V. Goode",numPatents:154,x:-230.16114196390936,y:-13.410314845001913},{type:"inventor",id:"6711565-1",name:"Pavitra Subramaniam",numPatents:20,x:-6.372748347947338,y:-297.9670264909068},{type:"inventor",id:"D423761-3",name:"Peter Hong",numPatents:25,x:-207.02913444458756,y:113.2044477207746},{type:"inventor",id:"6152987-2",name:"Peter Mardilovich",numPatents:110,x:-113.70541462763414,y:-71.63866878448928},{type:"inventor",id:"5873096-1",name:"Peter S. Lim",numPatents:19,x:-41.4971575994779,y:-229.8634738486308},{type:"inventor",id:"6732111-4",name:"Peter Siam Sy Lim III",numPatents:1,x:-119.68776087181291,y:-264.7441153149242},{type:"inventor",id:"6850895-3",name:"Peter Siam Sy Lim, III",numPatents:3,x:-137.51327861868992,y:-253.05015263416013},{type:"inventor",id:"7159750-4",name:"Philip Roy",numPatents:45,x:-55.915331837334584,y:265.4527399859059},{type:"inventor",id:"6103033-7",name:"Phillip John Plante",numPatents:76,x:-89.56172634273938,y:128.49359954020937},{type:"inventor",id:"5978829-1",name:"Pi-Yu Chung",numPatents:15,x:79.03330309768333,y:-166.89620301402695},{type:"inventor",id:"6092083-2",name:"Prashant Chatterjee",numPatents:12,x:-127.98166248978045,y:-226.09590322983067},{type:"inventor",id:"7340411-1",name:"Rachael L. Cook",numPatents:1,x:145.5816434953685,y:-185.9115227848251},{type:"inventor",id:"4872603-1",name:"Ralph Stearns",numPatents:82,x:-17.638261139740077,y:311.87440096016235},{type:"inventor",id:"6836540-6",name:"Randy Hoffman",numPatents:66,x:-96.67915062271523,y:-18.863267642338357},{type:"inventor",id:"4798594-1",name:"Richard A. Hillstead",numPatents:56,x:220.9404304325887,y:155.9212493217171},{type:"inventor",id:"5097122-2",name:"Richard E. Purvis",numPatents:22,x:-231.6221173485312,y:58.532788593406465},{type:"inventor",id:"6268803-3",name:"Richard Gorman",numPatents:10,x:76.71667439228202,y:-247.40756847543366},{type:"inventor",id:"5271543-1",name:"Richard L. Grant",numPatents:22,x:108.37790261638156,y:-109.53429774011205},{type:"inventor",id:"6092083-1",name:"Robert A. Brodersen",numPatents:21,x:-116.78677329380332,y:-211.74312172754898},{type:"inventor",id:"5873096-2",name:"Robert Broderson",numPatents:3,x:32.470564362710334,y:-212.3565037616904},{type:"inventor",id:"5963953-1",name:"Robert Cram",numPatents:3,x:39.731656228036044,y:-159.70117419662853},{type:"inventor",id:"4362387-1",name:"Roy Clark",numPatents:23,x:-143.38065467805583,y:-83.18646932332894},{type:"inventor",id:"5417770-8",name:"Ryo Hayashi",numPatents:71,x:109.56900270181322,y:94.2690776193339},{type:"inventor",id:"6081875-2",name:"Sanjoy Chatterjee",numPatents:2,x:-168.55351719373274,y:-55.00391327710072},{type:"inventor",id:"5416255-1",name:"Scott A. Bergemann",numPatents:106,x:236.9843658437831,y:-154.5385328936314},{type:"inventor",id:"6724399-2",name:"Shankar S. Nathan",numPatents:1,x:8.017651326713803,y:-132.67439205632664},{type:"inventor",id:"6804330-1",name:"Shannon Jones",numPatents:5,x:71.13206981844631,y:-258.49934239941376},{type:"inventor",id:"6887736-4",name:"Shanthi Ganesan",numPatents:4,x:-36.994882107564074,y:176.4435210395316},{type:"inventor",id:"6183589-1",name:"Shin Kim",numPatents:47,x:-287.672664666798,y:45.812611641390674},{type:"inventor",id:"6654032-4",name:"Songxiang Wei",numPatents:7,x:132.3199171044082,y:86.33369201811875},{type:"inventor",id:"6783524-1",name:"Stephen C. Anderson",numPatents:1,x:62.6200720139505,y:302.49618857083027},{type:"inventor",id:"5774357-1",name:"Steven M. Hoffberg",numPatents:106,x:-298.14981578939944,y:88.5680351045039},{type:"inventor",id:"5594169-2",name:"Steven P. Hotelling",numPatents:306,x:178.31356224420756,y:-255.43042507480578},{type:"inventor",id:"6526335-2",name:"Susan M. Treyz",numPatents:15,x:-279.2338471304183,y:139.99257336727945},{type:"inventor",id:"6639246-1",name:"Tatsuya Honda",numPatents:109,x:250.0602077201684,y:66.33401322268637},{type:"inventor",id:"5345639-6",name:"Tatsuya Iwasaki",numPatents:116,x:86.3336134471773,y:157.82593462060743},{type:"inventor",id:"6324568-1",name:"Thanh Diec",numPatents:3,x:-78.03147469125184,y:-272.5886606861718},{type:"inventor",id:"5715450-2",name:"Thomas M. Rothwein",numPatents:13,x:-19.165101013241493,y:-208.1804640840619},{type:"inventor",id:"RE39841-4",name:"Todd Phillip Omaits",numPatents:7,x:129.99306854625007,y:-22.049901615038408},{type:"inventor",id:"6850949-3",name:"Tom Abshire",numPatents:1,x:140.26566902715228,y:-153.3917294843958},{type:"inventor",id:"7061014-6",name:"Toshio Kamiya",numPatents:25,x:9.126271276254377,y:101.82298630556326},{type:"inventor",id:"6718361-1",name:"Vijay R. Basani",numPatents:9,x:-201.38227173205027,y:208.74327049926328},{type:"inventor",id:"6718361-5",name:"Vitaly S. Revsin",numPatents:13,x:-198.70473078024983,y:152.4052211665943},{type:"inventor",id:"6978921-3",name:"William B. Weisenburgh, II",numPatents:152,x:248.24393906293733,y:-90.29342524369324},{type:"inventor",id:"5257971-2",name:"William P. Van Antwerp",numPatents:69,x:-243.520991916779,y:23.417679977911327},{type:"inventor",id:"6829655-1",name:"Xiaofei Huang",numPatents:5,x:89.9887416103856,y:-187.79413998163483},{type:"inventor",id:"5283452-1",name:"Yi-Chi Shih",numPatents:33,x:-323.71359641871163,y:23.908936586494086},{type:"inventor",id:"5901896-1",name:"Yoram Gal",numPatents:76,x:-107.23225510620489,y:124.73541739026112},{type:"inventor",id:"4573472-1",name:"Yoshihiro Ito",numPatents:189,x:118.20250938383892,y:287.9615326434283},{type:"inventor",id:"5855957-1",name:"Zheng Yuan",numPatents:58,x:138.0920695217319,y:124.0644011797693},{type:"assignee",id:"org_Z59aUBGtZ9P5QzdFiKmZ",name:"Ablaise Limited",numPatents:2,x:-190.4821130010742,y:-236.53619698539487},{type:"assignee",id:"org_4zO2Bc08x56XjDq5TeBp",name:"Accenture LLP",numPatents:210,x:172.86602300833957,y:253.70330815416585},{type:"assignee",id:"org_bwq83jbccKqF4jJrPcaR",name:"Advanced Bionics AG",numPatents:633,x:-176.91468472981555,y:233.6338835259619},{type:"assignee",id:"org_IDUbS09ZR0JhJ8jFEptT",name:"Apple Inc.",numPatents:21023,x:151.68246641578867,y:-222.1248748814489},{type:"assignee",id:"org_EhYFPIJEmYQYRoYvsnpy",name:"Canon Kabushiki Kaisha",numPatents:74596,x:49.48223920573296,y:134.09228873115592},{type:"assignee",id:"org_Imeg9W6P1TE6I2QutS4y",name:"Casio Computer Co., Ltd.",numPatents:4521,x:-179.8175934120515,y:-142.71828852921044},{type:"assignee",id:"org_8csMgtgnN0mREZpNP1Ji",name:"Cerebral Vascular Applications, Inc.",numPatents:4,x:268.8004541444387,y:164.52369478315683},{type:"assignee",id:"org_0eTr3XIBjAKpXkC6823r",name:"Cermet, Inc.",numPatents:7,x:-48.40372768955156,y:205.44025883826066},{type:"assignee",id:"org_107WKNPbvDDKrZBlmw8U",name:"Contigo Software, Inc.",numPatents:2,x:299.3174359095953,y:48.03492469800833},{type:"assignee",id:"org_ppElkEtQvFtG6A4754UI",name:"Eastman Kodak Company",numPatents:21539,x:211.37525941352786,y:217.58287786532108},{type:"assignee",id:"org_0jPWM7YqhtXm0lm3fm1Y",name:"EMC Corporation",numPatents:4976,x:-189.70156274838973,y:-110.01559890437628},{type:"assignee",id:"org_Wh2cnOIzKlhzjuqVmOqY",name:"Enecto AB",numPatents:1,x:243.6765412246258,y:-131.2090311866099},{type:"assignee",id:"org_Xu6gXSsltDBZTAhMFBWD",name:"Ethicon Endo-Surger, Inc.",numPatents:3,x:224.71243580316477,y:39.60984252547865},{type:"assignee",id:"org_NfKBB9TWF4As8TSasJ5n",name:"Ethicon Endo-Surgery, Inc.",numPatents:2194,x:171.0743702247664,y:-55.03680709894609},{type:"assignee",id:"org_vS6rcKyc2qN3rFdX0P2K",name:"Hewlett-Packard Development Company, L.P.",numPatents:35118,x:-90.3103968526694,y:-50.0521628929454},{type:"assignee",id:"per_tX2e2yVLgyNgobEpzWKT",name:"Hideo Ohno",numPatents:4,x:-39.53612842704436,y:-20.270273354977252},{type:"assignee",id:"org_MKvbnCcyPudXexUvsSwF",name:"Holden's Foundation Seeds, Inc.",numPatents:83,x:240.0999059851908,y:-206.02637614806125},{type:"assignee",id:"org_fA0azqoBGEzoPoy85Jyv",name:"INTUITIVE SURGICAL OPERATIONS, INC.",numPatents:1202,x:15.378862865447624,y:290.2178222875223},{type:"assignee",id:"org_DttZMvkyvW3fV6oCUMTF",name:"Japan Science and Technology Agency",numPatents:1157,x:13.173450731061086,y:56.48614099577767},{type:"assignee",id:"org_c5vyBzK7iikkU4DjQFHT",name:"Japan Science and Technology Corporation",numPatents:418,x:63.56317058275,y:6.273673519090753},{type:"assignee",id:"org_FvgvGFe8JZ0iYlZ80weF",name:"Koninklijke Philips Electronics N.V.",numPatents:17138,x:-123.24179123790191,y:270.99746548441016},{type:"assignee",id:"org_XcqCjtT8pi8Mk3UjQlDt",name:"LG Electronics Inc.",numPatents:32725,x:-277.3460229984558,y:7.13369822254301},{type:"assignee",id:"per_DIjUTM7lHhDsAz2u8jiO",name:"Masashi Kawasaki",numPatents:3,x:19.895436596662908,y:-10.717178250900918},{type:"assignee",id:"org_GVMlLVbwCDSiqP9Og8Tn",name:"Medtronic MiniMed, Inc.",numPatents:800,x:-183.74023419057417,y:37.687218769839085},{type:"assignee",id:"org_Qw8EsrN0M52nVQUM6vsV",name:"Monsanto Technology LLC",numPatents:8689,x:19.763901488352673,y:196.62236862589774},{type:"assignee",id:"org_j5U5IEa1FIbgtr7iNsQM",name:"Murata Manufacturing Co., Ltd.",numPatents:7342,x:87.64878197108817,y:291.1023195872352},{type:"assignee",id:"org_1p4FWEoItjyKbwTpCJol",name:"Network Appliance, Inc.",numPatents:530,x:-222.2920372118052,y:149.08372155272062},{type:"assignee",id:"org_ATOWHd4GGaoh14zutXq7",name:"Power Medical Interventions, Inc.",numPatents:30,x:108.88110399749706,y:186.8533878262659},{type:"assignee",id:"org_k8V7c5gnmC7SVmup5Vu7",name:"Raindance Communications, Inc.",numPatents:3,x:65.15717694264417,y:83.41943637820401},{type:"assignee",id:"org_242hJegwfQCeP9hsfwpW",name:"Right Now Technologies, Inc.",numPatents:2,x:186.81965281602268,y:-183.4017025145853},{type:"assignee",id:"org_6r9t7ZA6YT031Od4kMPg",name:"Rightnow Technologies, Inc.",numPatents:10,x:-231.73615880122236,y:-74.09916970934252},{type:"assignee",id:"org_2IF97zVymSuraSnUAXmq",name:"Sanyo Electric Co., Ltd.",numPatents:8383,x:-283.9028253608946,y:-127.87253381969171},{type:"assignee",id:"org_plZbLxiysESbaI9pOeym",name:"SEMICONDUCTOR ENERGY LABORATORY CO., LTD.",numPatents:13885,x:256.2283987637905,y:124.46141696066522},{type:"assignee",id:"org_CMWcoCJWPOfisLWrKvyd",name:"Sharp Kabushiki Kaisha",numPatents:22540,x:4.095560406482671,y:-32.13618482579938},{type:"assignee",id:"org_83NNgJrP5lkIN876kNeG",name:"Siebel Systems, Inc.",numPatents:298,x:-33.91994752314842,y:-212.5994288988811},{type:"assignee",id:"org_J8VnAzFqEjWgxq4ev71z",name:"Starion Instruments Corporation",numPatents:20,x:178.98416654116346,y:169.54821211190276},{type:"assignee",id:"org_m2tNPJkA2g1AWOc7uzS1",name:"TheraSense, Inc.",numPatents:53,x:-125.9145998460851,y:132.41739054516117},{type:"assignee",id:"org_JjrM6UmeOY0Q5MmoNiP8",name:"TOKYO INSTITUTE OF TECHNOLOGY",numPatents:395,x:18.61413008116646,y:165.21253699554214},{type:"assignee",id:"org_ewVsCutpRzD9pT07kBoE",name:"Tyco Healtcare Group LP",numPatents:5,x:-67.25430526742107,y:308.6149282041579},{type:"assignee",id:"org_5wNNrJ4zFQ5KQ8OWnzRC",name:"United States Surtical Corporation",numPatents:1,x:282.781009224431,y:-52.981590115087144},{type:"assignee",id:"org_3vI2Z5kC1SaSlbUBoOBT",name:"WebEx Communications, Inc.",numPatents:22,x:187.36763951128714,y:101.20849847080181}],links:[{source:"6516227",target:"5358514-3"},{source:"6516227",target:"5755737-3"},{source:"6516227",target:"5948006-1"},{source:"6516227",target:"6516227-4"},{source:"6516227",target:"org_bwq83jbccKqF4jJrPcaR"},{source:"6535909",target:"6535909-1"},{source:"6535909",target:"org_107WKNPbvDDKrZBlmw8U"},{source:"6549908",target:"6393605-1"},{source:"6549908",target:"org_83NNgJrP5lkIN876kNeG"},{source:"6553563",target:"5715450-1"},{source:"6553563",target:"5715450-2"},{source:"6553563",target:"6553563-3"},{source:"6553563",target:"org_83NNgJrP5lkIN876kNeG"},{source:"6558320",target:"4809697-1"},{source:"6558320",target:"4863425-2"},{source:"6558320",target:"5097122-2"},{source:"6558320",target:"org_GVMlLVbwCDSiqP9Og8Tn"},{source:"6558351",target:"5097122-2"},{source:"6558351",target:"5237178-2"},{source:"6558351",target:"5257971-2"},{source:"6558351",target:"6424847-3"},{source:"6558351",target:"6558351-1"},{source:"6558351",target:"6558351-2"},{source:"6558351",target:"6558351-3"},{source:"6558351",target:"6558351-8"},{source:"6558351",target:"org_GVMlLVbwCDSiqP9Og8Tn"},{source:"6560461",target:"5918159-1"},{source:"6560461",target:"5918159-2"},{source:"6563174",target:"4253061-3"},{source:"6563174",target:"4902671-3"},{source:"6563174",target:"4997262-1"},{source:"6563174",target:"5925224-1"},{source:"6563174",target:"org_CMWcoCJWPOfisLWrKvyd"},{source:"6563174",target:"per_DIjUTM7lHhDsAz2u8jiO"},{source:"6563174",target:"per_tX2e2yVLgyNgobEpzWKT"},{source:"6565509",target:"4082602-2"},{source:"6565509",target:"5041086-4"},{source:"6565509",target:"5306623-3"},{source:"6565509",target:"5533238-1"},{source:"6565509",target:"5534132-1"},{source:"6565509",target:"5616532-3"},{source:"6565509",target:"5722997-2"},{source:"6565509",target:"5901896-1"},{source:"6565509",target:"6103033-7"},{source:"6565509",target:"6175752-9"},{source:"6565509",target:"org_m2tNPJkA2g1AWOc7uzS1"},{source:"6571282",target:"6081518-1"},{source:"6571282",target:"org_4zO2Bc08x56XjDq5TeBp"},{source:"6574635",target:"5715450-1"},{source:"6574635",target:"5715450-2"},{source:"6574635",target:"5963953-3"},{source:"6574635",target:"org_83NNgJrP5lkIN876kNeG"},{source:"6577726",target:"6577726-1"},{source:"6577726",target:"6577726-2"},{source:"6577726",target:"6577726-3"},{source:"6577726",target:"6577726-4"},{source:"6577726",target:"org_83NNgJrP5lkIN876kNeG"},{source:"6587835",target:"6433921-2"},{source:"6587835",target:"6526335-2"},{source:"6601087",target:"5261037-2"},{source:"6601087",target:"6601087-2"},{source:"6601087",target:"org_3vI2Z5kC1SaSlbUBoOBT"},{source:"6602252",target:"4890611-3"},{source:"6602252",target:"org_J8VnAzFqEjWgxq4ev71z"},{source:"6604117",target:"5873096-1"},{source:"6604117",target:"5873096-2"},{source:"6604117",target:"org_83NNgJrP5lkIN876kNeG"},{source:"6604128",target:"6324568-1"},{source:"6604128",target:"org_83NNgJrP5lkIN876kNeG"},{source:"6606744",target:"6606744-1"},{source:"6606744",target:"org_4zO2Bc08x56XjDq5TeBp"},{source:"6609150",target:"5963953-1"},{source:"6609150",target:"6336137-1"},{source:"6609150",target:"6336137-3"},{source:"6609150",target:"org_83NNgJrP5lkIN876kNeG"},{source:"6621834",target:"5944791-1"},{source:"6621834",target:"6621834-2"},{source:"6621834",target:"org_k8V7c5gnmC7SVmup5Vu7"},{source:"6641533",target:"4809697-1"},{source:"6641533",target:"4863425-2"},{source:"6641533",target:"5097122-2"},{source:"6641533",target:"org_GVMlLVbwCDSiqP9Og8Tn"},{source:"6644532",target:"4127227-1"},{source:"6644532",target:"4283024-1"},{source:"6644532",target:"5176502-3"},{source:"6644532",target:"D263987-1"},{source:"6644532",target:"D304234-2"},{source:"6644532",target:"RE28932-2"},{source:"6644532",target:"org_5wNNrJ4zFQ5KQ8OWnzRC"},{source:"6654032",target:"5261037-2"},{source:"6654032",target:"5855957-1"},{source:"6654032",target:"6601087-2"},{source:"6654032",target:"6654032-4"},{source:"6654032",target:"org_3vI2Z5kC1SaSlbUBoOBT"},{source:"6656193",target:"4892244-4"},{source:"6656193",target:"5271543-1"},{source:"6656193",target:"5329655-1"},{source:"6656193",target:"5409498-4"},{source:"6656193",target:"5707369-2"},{source:"6656193",target:"org_NfKBB9TWF4As8TSasJ5n"},{source:"6665648",target:"6665648-1"},{source:"6665648",target:"6665648-2"},{source:"6665648",target:"6665648-3"},{source:"6665648",target:"6665648-4"},{source:"6665648",target:"6665648-5"},{source:"6665648",target:"org_83NNgJrP5lkIN876kNeG"},{source:"6665655",target:"6434550-1"},{source:"6665655",target:"6665655-2"},{source:"6665655",target:"org_6r9t7ZA6YT031Od4kMPg"},{source:"6684438",target:"5873096-1"},{source:"6684438",target:"6092083-1"},{source:"6684438",target:"org_83NNgJrP5lkIN876kNeG"},{source:"6690387",target:"6281898-2"},{source:"6690387",target:"6690387-1"},{source:"6690387",target:"org_FvgvGFe8JZ0iYlZ80weF"},{source:"6693232",target:"5416255-1"},{source:"6693232",target:"org_MKvbnCcyPudXexUvsSwF"},{source:"6698643",target:"6264087-1"},{source:"6698643",target:"org_ATOWHd4GGaoh14zutXq7"},{source:"6711565",target:"6711565-1"},{source:"6711565",target:"6711565-2"},{source:"6711565",target:"6711565-3"},{source:"6711565",target:"6711565-4"},{source:"6711565",target:"org_83NNgJrP5lkIN876kNeG"},{source:"6716233",target:"6264087-1"},{source:"6716233",target:"org_ATOWHd4GGaoh14zutXq7"},{source:"6718361",target:"6223205-2"},{source:"6718361",target:"6370584-1"},{source:"6718361",target:"6718361-1"},{source:"6718361",target:"6718361-2"},{source:"6718361",target:"6718361-3"},{source:"6718361",target:"6718361-4"},{source:"6718361",target:"6718361-5"},{source:"6718361",target:"6718361-8"},{source:"6718361",target:"org_1p4FWEoItjyKbwTpCJol"},{source:"6724399",target:"6724399-1"},{source:"6724399",target:"6724399-2"},{source:"6724399",target:"org_83NNgJrP5lkIN876kNeG"},{source:"6727522",target:"4253061-3"},{source:"6727522",target:"4902671-3"},{source:"6727522",target:"org_c5vyBzK7iikkU4DjQFHT"},{source:"6728702",target:"6577726-2"},{source:"6728702",target:"6711565-1"},{source:"6728702",target:"6711565-2"},{source:"6728702",target:"6711565-3"},{source:"6728702",target:"6711565-4"},{source:"6728702",target:"org_83NNgJrP5lkIN876kNeG"},{source:"6728960",target:"6393605-1"},{source:"6728960",target:"org_83NNgJrP5lkIN876kNeG"},{source:"6732095",target:"5243622-2"},{source:"6732095",target:"6732095-1"},{source:"6732095",target:"6732095-2"},{source:"6732095",target:"org_83NNgJrP5lkIN876kNeG"},{source:"6732100",target:"5715450-2"},{source:"6732100",target:"6577726-2"},{source:"6732100",target:"6577726-4"},{source:"6732100",target:"6665648-1"},{source:"6732100",target:"6732100-4"},{source:"6732100",target:"org_83NNgJrP5lkIN876kNeG"},{source:"6732111",target:"4951278-2"},{source:"6732111",target:"6092083-1"},{source:"6732111",target:"6092083-2"},{source:"6732111",target:"6732111-4"},{source:"6732111",target:"org_83NNgJrP5lkIN876kNeG"},{source:"6754681",target:"5873096-1"},{source:"6754681",target:"6092083-1"},{source:"6754681",target:"6092083-2"},{source:"6754681",target:"org_83NNgJrP5lkIN876kNeG"},{source:"6763351",target:"6711565-1"},{source:"6763351",target:"6711565-2"},{source:"6763351",target:"6711565-3"},{source:"6763351",target:"6711565-4"},{source:"6763351",target:"org_83NNgJrP5lkIN876kNeG"},{source:"6763501",target:"5261037-2"},{source:"6763501",target:"5855957-1"},{source:"6763501",target:"6601087-2"},{source:"6763501",target:"6654032-4"},{source:"6763501",target:"org_3vI2Z5kC1SaSlbUBoOBT"},{source:"6768904",target:"6183589-1"},{source:"6768904",target:"org_XcqCjtT8pi8Mk3UjQlDt"},{source:"6782383",target:"6711565-1"},{source:"6782383",target:"6711565-2"},{source:"6782383",target:"6711565-3"},{source:"6782383",target:"6711565-4"},{source:"6782383",target:"org_83NNgJrP5lkIN876kNeG"},{source:"6783524",target:"5859916-3"},{source:"6783524",target:"6783524-1"},{source:"6783524",target:"org_fA0azqoBGEzoPoy85Jyv"},{source:"6786382",target:"6530932-2"},{source:"6786382",target:"org_NfKBB9TWF4As8TSasJ5n"},{source:"6804330",target:"5715450-1"},{source:"6804330",target:"6268803-3"},{source:"6804330",target:"6804330-1"},{source:"6804330",target:"6804330-4"},{source:"6804330",target:"6804330-5"},{source:"6804330",target:"org_83NNgJrP5lkIN876kNeG"},{source:"6809653",target:"4082097-1"},{source:"6809653",target:"4561444-1"},{source:"6809653",target:"4809697-1"},{source:"6809653",target:"4863425-2"},{source:"6809653",target:"5097122-2"},{source:"6809653",target:"5237178-2"},{source:"6809653",target:"5382232-1"},{source:"6809653",target:"6809653-9"},{source:"6809653",target:"D423761-3"},{source:"6809653",target:"org_GVMlLVbwCDSiqP9Og8Tn"},{source:"6826565",target:"6295530-1"},{source:"6826565",target:"6295530-2"},{source:"6826565",target:"org_Z59aUBGtZ9P5QzdFiKmZ"},{source:"6826582",target:"4362387-1"},{source:"6826582",target:"6081875-2"},{source:"6826582",target:"6826582-2"},{source:"6826582",target:"org_0jPWM7YqhtXm0lm3fm1Y"},{source:"6826745",target:"6233617-2"},{source:"6826745",target:"6577726-2"},{source:"6826745",target:"6826745-3"},{source:"6826745",target:"org_83NNgJrP5lkIN876kNeG"},{source:"6829655",target:"5978829-1"},{source:"6829655",target:"6004276-13"},{source:"6829655",target:"6829655-1"},{source:"6829655",target:"6829655-2"},{source:"6829655",target:"6829655-3"},{source:"6829655",target:"6829655-6"},{source:"6829655",target:"org_83NNgJrP5lkIN876kNeG"},{source:"6830174",target:"4798594-1"},{source:"6830174",target:"5465895-1"},{source:"6830174",target:"org_8csMgtgnN0mREZpNP1Ji"},{source:"6842748",target:"6434550-1"},{source:"6842748",target:"6665655-2"},{source:"6842748",target:"org_6r9t7ZA6YT031Od4kMPg"},{source:"6843403",target:"6264087-1"},{source:"6843403",target:"org_ATOWHd4GGaoh14zutXq7"},{source:"6850252",target:"5774357-1"},{source:"6850895",target:"6092083-1"},{source:"6850895",target:"6092083-2"},{source:"6850895",target:"6577726-2"},{source:"6850895",target:"6850895-3"},{source:"6850895",target:"6850895-5"},{source:"6850895",target:"org_83NNgJrP5lkIN876kNeG"},{source:"6850949",target:"6850949-1"},{source:"6850949",target:"6850949-2"},{source:"6850949",target:"6850949-3"},{source:"6850949",target:"org_242hJegwfQCeP9hsfwpW"},{source:"6852915",target:"5276262-2"},{source:"6852915",target:"org_MKvbnCcyPudXexUvsSwF"},{source:"6905057",target:"5897563-4"},{source:"6905057",target:"6905057-2"},{source:"6905057",target:"org_NfKBB9TWF4As8TSasJ5n"},{source:"6959852",target:"5632432-4"},{source:"6959852",target:"6905057-2"},{source:"6959852",target:"org_NfKBB9TWF4As8TSasJ5n"},{source:"6964363",target:"5409498-4"},{source:"6964363",target:"6964363-2"},{source:"6964363",target:"org_NfKBB9TWF4As8TSasJ5n"},{source:"6978921",target:"5632432-4"},{source:"6978921",target:"6905057-2"},{source:"6978921",target:"6978921-3"},{source:"6978921",target:"org_NfKBB9TWF4As8TSasJ5n"},{source:"6981628",target:"5409498-4"},{source:"6981628",target:"org_NfKBB9TWF4As8TSasJ5n"},{source:"7000818",target:"5632432-4"},{source:"7000818",target:"6905057-2"},{source:"7000818",target:"7000818-3"},{source:"7000818",target:"org_Xu6gXSsltDBZTAhMFBWD"},{source:"7025743",target:"4082097-1"},{source:"7025743",target:"4561444-1"},{source:"7025743",target:"4809697-1"},{source:"7025743",target:"5176644-1"},{source:"7025743",target:"5382232-1"},{source:"7025743",target:"6551276-10"},{source:"7025743",target:"6551276-11"},{source:"7025743",target:"6551276-12"},{source:"7025743",target:"6551276-3"},{source:"7025743",target:"6551276-4"},{source:"7025743",target:"6551276-8"},{source:"7025743",target:"6551276-9"},{source:"7025743",target:"org_GVMlLVbwCDSiqP9Og8Tn"},{source:"7049190",target:"6080998-3"},{source:"7049190",target:"6914182-1"},{source:"7049190",target:"org_2IF97zVymSuraSnUAXmq"},{source:"7055731",target:"5632432-4"},{source:"7055731",target:"6905057-2"},{source:"7055731",target:"6978921-3"},{source:"7055731",target:"org_NfKBB9TWF4As8TSasJ5n"},{source:"7061014",target:"4486720-1"},{source:"7061014",target:"4703019-2"},{source:"7061014",target:"5272069-6"},{source:"7061014",target:"5622653-1"},{source:"7061014",target:"7061014-4"},{source:"7061014",target:"7061014-6"},{source:"7061014",target:"org_DttZMvkyvW3fV6oCUMTF"},{source:"7064346",target:"4253061-3"},{source:"7064346",target:"4902671-3"},{source:"7064346",target:"org_DttZMvkyvW3fV6oCUMTF"},{source:"7105868",target:"5863326-1"},{source:"7105868",target:"6887736-4"},{source:"7105868",target:"org_0eTr3XIBjAKpXkC6823r"},{source:"7111769",target:"5409498-4"},{source:"7111769",target:"5897563-4"},{source:"7111769",target:"6530932-2"},{source:"7111769",target:"6905057-2"},{source:"7111769",target:"org_NfKBB9TWF4As8TSasJ5n"},{source:"7147138",target:"6905057-2"},{source:"7147138",target:"org_NfKBB9TWF4As8TSasJ5n"},{source:"7159750",target:"4872603-1"},{source:"7159750",target:"5713911-1"},{source:"7159750",target:"5713911-2"},{source:"7159750",target:"7159750-4"},{source:"7159750",target:"7159750-5"},{source:"7159750",target:"org_ewVsCutpRzD9pT07kBoE"},{source:"7211825",target:"5081422-1"},{source:"7211825",target:"5283452-1"},{source:"7211825",target:"5703357-3"},{source:"7211825",target:"6593834-2"},{source:"7246734",target:"6905057-2"},{source:"7246734",target:"org_NfKBB9TWF4As8TSasJ5n"},{source:"7282782",target:"6144679-1"},{source:"7282782",target:"6152987-2"},{source:"7282782",target:"6836540-6"},{source:"7282782",target:"org_vS6rcKyc2qN3rFdX0P2K"},{source:"7297977",target:"6144679-1"},{source:"7297977",target:"6152987-2"},{source:"7297977",target:"6836540-6"},{source:"7297977",target:"org_vS6rcKyc2qN3rFdX0P2K"},{source:"7323356",target:"4486720-1"},{source:"7323356",target:"4703019-2"},{source:"7323356",target:"5272069-6"},{source:"7323356",target:"5622653-1"},{source:"7323356",target:"7061014-4"},{source:"7323356",target:"7323356-5"},{source:"7323356",target:"org_DttZMvkyvW3fV6oCUMTF"},{source:"7340411",target:"7340411-1"},{source:"7380695",target:"5409498-4"},{source:"7380695",target:"5632432-4"},{source:"7380695",target:"6905057-2"},{source:"7380695",target:"7083075-3"},{source:"7380695",target:"org_NfKBB9TWF4As8TSasJ5n"},{source:"7380696",target:"5632432-4"},{source:"7380696",target:"6905057-2"},{source:"7380696",target:"7083075-3"},{source:"7380696",target:"7380696-3"},{source:"7380696",target:"org_NfKBB9TWF4As8TSasJ5n"},{source:"7385224",target:"5041200-1"},{source:"7385224",target:"5041200-4"},{source:"7385224",target:"7385224-2"},{source:"7385224",target:"7385224-3"},{source:"7385224",target:"org_Imeg9W6P1TE6I2QutS4y"},{source:"7402506",target:"5512426-1"},{source:"7402506",target:"6048110-3"},{source:"7402506",target:"7402506-2"},{source:"7402506",target:"org_ppElkEtQvFtG6A4754UI"},{source:"7404508",target:"4682596-2"},{source:"7404508",target:"5117838-1"},{source:"7404508",target:"5715675-2"},{source:"7404508",target:"6912839-2"},{source:"7404508",target:"org_NfKBB9TWF4As8TSasJ5n"},{source:"7411209",target:"5345639-6"},{source:"7411209",target:"5417770-8"},{source:"7411209",target:"7082832-4"},{source:"7411209",target:"org_EhYFPIJEmYQYRoYvsnpy"},{source:"7453065",target:"4072236-1"},{source:"7453065",target:"4356455-3"},{source:"7453065",target:"4703019-2"},{source:"7453065",target:"7061014-6"},{source:"7453065",target:"org_EhYFPIJEmYQYRoYvsnpy"},{source:"7453065",target:"org_JjrM6UmeOY0Q5MmoNiP8"},{source:"7453087",target:"5345639-6"},{source:"7453087",target:"org_EhYFPIJEmYQYRoYvsnpy"},{source:"7462862",target:"6144679-1"},{source:"7462862",target:"6836540-6"},{source:"7462862",target:"org_vS6rcKyc2qN3rFdX0P2K"},{source:"7464846",target:"4403687-2"},{source:"7464846",target:"5897563-4"},{source:"7464846",target:"6905057-2"},{source:"7464846",target:"7083075-3"},{source:"7464846",target:"org_NfKBB9TWF4As8TSasJ5n"},{source:"7468304",target:"6863363-1"},{source:"7468304",target:"7468304-1"},{source:"7468304",target:"org_EhYFPIJEmYQYRoYvsnpy"},{source:"7501293",target:"4224725-1"},{source:"7501293",target:"4573472-1"},{source:"7501293",target:"org_j5U5IEa1FIbgtr7iNsQM"},{source:"7506791",target:"4403687-2"},{source:"7506791",target:"4972224-1"},{source:"7506791",target:"6905057-2"},{source:"7506791",target:"RE39841-4"},{source:"7506791",target:"org_NfKBB9TWF4As8TSasJ5n"},{source:"7620655",target:"5948789-1"},{source:"7620655",target:"7620655-2"},{source:"7620655",target:"org_Wh2cnOIzKlhzjuqVmOqY"},{source:"7632985",target:"7078503-3"},{source:"7632985",target:"7608761-4"},{source:"7632985",target:"7632985-3"},{source:"7632985",target:"7632985-4"},{source:"7632985",target:"org_Qw8EsrN0M52nVQUM6vsV"},{source:"7663607",target:"5594169-2"},{source:"7663607",target:"6658577-1"},{source:"7663607",target:"7154477-2"},{source:"7663607",target:"org_IDUbS09ZR0JhJ8jFEptT"},{source:"7674650",target:"6639246-1"},{source:"7674650",target:"6838397-3"},{source:"7674650",target:"7205716-5"},{source:"7674650",target:"org_plZbLxiysESbaI9pOeym"},{source:"7732819",target:"6639246-1"},{source:"7732819",target:"6838397-3"},{source:"7732819",target:"7205716-5"},{source:"7732819",target:"org_plZbLxiysESbaI9pOeym"},{source:"8053184",target:"7078503-3"},{source:"8053184",target:"7608761-4"},{source:"8053184",target:"7632985-3"},{source:"8053184",target:"7632985-4"},{source:"8053184",target:"org_Qw8EsrN0M52nVQUM6vsV"}]}},"./src/elements/element.ts":
/*!*********************************!*\
  !*** ./src/elements/element.ts ***!
  \*********************************/
/*! no static exports found */function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const a=r(/*! ../utils/utils */"./src/utils/utils.ts"),n=r(/*! ../utils/const */"./src/utils/const.js");t.default=class{constructor(e,t,r){this.$_style={},this.$_mousedownCallbackSet=new Set,this.$_mouseupCallbackSet=new Set,this.$_mouseoverCallbackSet=new Set,this.$_mouseoutCallbackSet=new Set,this.$_mousemoveCallbackSet=new Set,this.$_clickCallbackSet=new Set,this.$_attributes={},this.$_core=e,this.type=r;const a=this.$_core.$_configs;this.$_style=JSON.parse(JSON.stringify(a[this.type.toLowerCase()].style)),"style"in t&&Object.entries(t.style).forEach(([e,t])=>{const r=t,a=e;r!==Object(r)?this.$_style[a]=r:this.$_style[a]=Object.assign(Object.assign({},this.$_style[a]),r)});const n=this.$_core.$_renderer[this.type.toLowerCase()+"Manager"];this.$_changeRenderAttribute=n.changeAttribute.bind(n);const i=new Set(["innerWidth","innerHeight"]);Object.keys(this.$_style).forEach(e=>{i.has(e)||(this[e]=this.generateElementStyleGetterSetter(e))})}on(e,t){var r;if("drag"!==e.slice(0,4)||"drag"===e.slice(0,4)&&"Node"===this.type){const a=`$_${e}CallbackSet`;null===(r=this[a])||void 0===r||r.add(t||n.EMPTY_FUNCTION),this[a]&&this.$_core.$_interactionManager.increaseMouseEventCallbackCountBy(1)}}off(e,t){var r;if("drag"!==e.slice(0,4)||"drag"===e.slice(0,4)&&"Node"===this.type){const a=`$_${e}CallbackSet`;null===(r=this[a])||void 0===r||r.delete(t||n.EMPTY_FUNCTION),this[a]&&this.$_core.$_interactionManager.decreaseMouseEventCallbackCountBy(1)}}attr(e,t){if(2===arguments.length)this.$_attributes[e]=t;else{if(1===arguments.length)return this.$_attributes[e];if(0===arguments.length)return JSON.parse(JSON.stringify(this.$_attributes))}}generateElementStyleGetterSetter(e){return t=>(void 0!==t&&(t===Object(t)?this.$_style[e]=a.override(this.$_style[e],t):this.$_style[e]=t,this.$_changeRenderAttribute(this,e)),this.$_style[e])}}},"./src/elements/link.ts":
/*!******************************!*\
  !*** ./src/elements/link.ts ***!
  \******************************/
/*! no static exports found */function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const a=r(/*! ./element */"./src/elements/element.ts");class n extends a.default{constructor(e,t){super(e,t,"Link"),this.$_elementReservedKeys=new Set(["source","target","style"]);for(const e in t)this.$_elementReservedKeys.has(e)||(this.$_attributes[e]=t[e]);const r=this.$_core.getNodeById(t.source),a=this.$_core.getNodeById(t.target);this.sourceTarget({source:r,target:a})}source(e){return 1===arguments.length&&this.sourceTarget({source:e,target:this.$_target}),this.$_source}target(e){return 1===arguments.length&&this.sourceTarget({source:this.$_source,target:e}),this.$_target}sourceTarget(e){var t,r;if(arguments.length>0){const a=this.$_source,n=this.$_target,i=e.source,o=e.target,s=i.id(),u=o.id();if(i===o)throw new Error(`Self loop (${s} <=> ${u}) is not allowed.`);if(this.$_core.$_ends2link.has([s,u]))throw new Error(`Multiple link (${s} <=> ${u}) is not allowd.`);a&&n&&(this.$_core.$_ends2link.delete([a.id(),n.id()]),null===(t=this.$_core.$_sourceId2links.get(a.id()))||void 0===t||t.delete(this),null===(r=this.$_core.$_targetId2links.get(n.id()))||void 0===r||r.delete(this)),this.$_source=i,this.$_target=o,this.$_core.$_ends2link.set([s,u],this),this.$_core.$_sourceId2links.has(s)?this.$_core.$_sourceId2links.get(s).add(this):this.$_core.$_sourceId2links.set(s,new Set([this])),this.$_core.$_targetId2links.has(u)?this.$_core.$_targetId2links.get(u).add(this):this.$_core.$_targetId2links.set(u,new Set([this]))}return{source:this.$_source,target:this.$_target}}}t.default=n},"./src/elements/node.ts":
/*!******************************!*\
  !*** ./src/elements/node.ts ***!
  \******************************/
/*! no static exports found */function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const a=r(/*! ../utils/is */"./src/utils/is.ts"),n=r(/*! ./element */"./src/elements/element.ts");class i extends n.default{constructor(e,t){super(e,t,"Node"),this.$_dragstartCallbackSet=new Set,this.$_draggingCallbackSet=new Set,this.$_dragendCallbackSet=new Set,this.$_position={x:0,y:0},this.$_elementReservedKeys=new Set(["id","x","y","style"]);for(const e in t)this.$_elementReservedKeys.has(e)||(this.$_attributes[e]=t[e]);const r=Object.assign({x:this.$_position.x,y:this.$_position.y},t);this.$_setId(r.id),this.$_position={x:r.x,y:r.y}}id(){return this.$_id}neighborNodes(){let e=this.$_core.$_sourceId2links.get(this.$_id);e||(e=new Set);let t=this.$_core.$_targetId2links.get(this.$_id);t||(t=new Set);const r=new Set([...[...e].map(e=>e.$_target),...[...t].map(e=>e.$_source)]);return Array.from(r)}neighborLinks(){let e=this.$_core.$_sourceId2links.get(this.$_id);e||(e=new Set);let t=this.$_core.$_targetId2links.get(this.$_id);t||(t=new Set);const r=new Set([...e,...t]);return Array.from(r)}x(e){return arguments.length>0&&this.position({x:e}),this.$_position.x}y(e){return arguments.length>0&&this.position({y:e}),this.$_position.y}innerWidth(e){return void 0!==e&&(this.$_style.innerWidth=e,this.$_changeRenderAttribute(this,"innerSize")),this.$_style.innerWidth}innerHeight(e){return void 0!==e&&(this.$_style.innerHeight=e,this.$_changeRenderAttribute(this,"innerSize")),this.$_style.innerHeight}position(e){let t={};if(arguments.length>0&&("x"in e||"y"in e)){if("x"in e&&(this.$_position.x=e.x),"y"in e&&(this.$_position.y=e.y),this.$_core.$_renderer.shouldLazyUpdate)return this.$_position;t={source:this.$_core.$_sourceId2links.get(this.$_id),target:this.$_core.$_targetId2links.get(this.$_id)},Object.entries(t).forEach(e=>{const t=e[0],r=e[1];if(r){this.$_core.$_renderer.increaseModifiedElementsCountBy(r.size);for(const e of r)this.$_core.$_renderer.linkManager.changeAttribute(e,t)}}),this.$_core.$_renderer.increaseModifiedElementsCountBy(1),this.$_core.$_renderer.nodeManager.changeAttribute(this,"position")}return this.$_position}$_setId(e){if(!a.isValidId(e))throw new Error("Invalid ID "+e);if(this.$_core.$_id2node.has(e))throw new Error(`Duplicate node (${e}) is not allowed.`);if(a.isValidId(this.$_id))throw new Error("Can not change the id of an exist node.");this.$_core.$_id2node.set(e,this),this.$_id=e}}t.default=i},"./src/index.ts":
/*!**********************!*\
  !*** ./src/index.ts ***!
  \**********************/
/*! no static exports found */function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const a=r(/*! ./utils/map2 */"./src/utils/map2.ts"),n=r(/*! ./elements/node */"./src/elements/node.ts"),i=r(/*! ./elements/link */"./src/elements/link.ts"),o=r(/*! ./configs */"./src/configs.ts"),s=r(/*! ./dataset */"./src/dataset/index.ts"),u=r(/*! ./renderer */"./src/renderer/index.ts"),l=r(/*! ./interaction/interaction */"./src/interaction/interaction.ts"),c=r(/*! ./utils/utils */"./src/utils/utils.ts"),d=r(/*! ./utils/const */"./src/utils/const.js");class g{constructor(e){if(this.$_id2node=new Map,this.$_ends2link=new a.default,this.$_sourceId2links=new Map,this.$_targetId2links=new Map,this.$_configs=JSON.parse(JSON.stringify(o)),this.$_transform={x:0,y:0,k:1},this.$_lazyUpdate=!1,this.$_data={nodes:[],links:[]},!("container"in e)||"DIV"!==e.container.tagName)throw Error("Container should be specified as a div element!");this.$_container=e.container,this.$_configs=c.override(this.$_configs,e),delete this.$_configs.container;const t=document.createElement("canvas"),r=window.devicePixelRatio||1;t.style.width=this.$_configs.width+"px",t.style.height=this.$_configs.height+"px",t.setAttribute("width",String(this.$_configs.width*r)),t.setAttribute("height",String(this.$_configs.height*r)),this.$_container.appendChild(t),this.$_canvas=t,this.$_renderer=new u.Renderer({canvas:t,width:this.$_configs.width,height:this.$_configs.height,backgroundColor:this.$_configs.backgroundColor,nodeLimit:this.$_configs.nodeLimit,linkLimit:this.$_configs.linkLimit,getAllNodes:this.nodes.bind(this),getAllLinks:this.links.bind(this)}),this.$_interactionManager=new l.InteractionManager(this)}backgroundColor(e){return e&&(this.$_configs.backgroundColor=e,this.$_renderer.setBackgroundColor(e)),this.$_configs.backgroundColor}data(e){if(void 0===e)return this.$_data;this.$_data=Object.assign(Object.assign({},this.$_data),e),this.$_id2node=new Map,this.$_ends2link=new a.default,this.$_sourceId2links=new Map,this.$_targetId2links=new Map,this.$_renderer.clearData(),this.addNodes(this.$_data.nodes),this.addLinks(this.$_data.links)}addNode(e){return this.addNodes([e])[0]}addLink(e){return this.addLinks([e])[0]}addNodes(e){const t=e.map(e=>{e.id=e.id.toString();return new n.default(this,e)});return this.$_renderer.addNodes(t),t}addLinks(e){const t=new Array(e.length);for(let r=0;r<e.length;r++){const a=e[r];a.source=a.source.toString(),a.target=a.target.toString();const n=new i.default(this,a);t[r]=n}return this.$_renderer.addLinks([...this.$_ends2link.values()]),t}getNodeById(e){return this.$_id2node.get(e)}getLinkByEnds(e,t){return this.$_ends2link.get([e,t])}nodes(){return[...this.$_id2node.values()]}links(){return[...this.$_ends2link.values()]}wipe(){this.$_data=void 0,this.$_id2node=new Map,this.$_ends2link=new a.default,this.$_sourceId2links=new Map,this.$_targetId2links=new Map,this.$_renderer.clearData()}dispose(){this.wipe(),this.$_renderer.dispose(),this.$_canvas.remove()}loadDataset(e){return e in s?s[e]:(console.error("NetV does not have build-in dataset: "+e),{nodes:[],links:[]})}getElementByPosition(e){const t=this.$_renderer.getIdByPosition(e);if(t){if("string"==typeof t){return{type:"node",element:this.getNodeById(t)}}if(Array.isArray(t)){return{type:"link",element:this.getLinkByEnds(t[0],t[1])}}}}draw(){this.$_renderer.draw()}transition(e,t,r){const a=n=>{if(n>=e.length-1)return;const i=Math.max(.06*t[n],1),o=Object.assign({},e[n]),s=e[n+1].x-e[n].x,u=e[n+1].y-e[n].y,l=e[n+1].k-e[n].k,c=e[n].x,d=e[n].y,g=e[n].k,m=e=>e*e;let h=1;const p=setInterval(()=>{o.x=c+s*m(h/i),o.y=d+u*m(h/i),o.k=g+l*m(h/i),this.transform(o),this.draw(),r&&r({transform:o}),h+=1,h>=i&&(clearInterval(p),a(n+1))},1/.06)};a(0)}centerOn(e){const t=e.position();return this.$_interactionManager.centerPosition(t)}panBy(e,t){return this.$_interactionManager.panBy(e,t)}zoomBy(e,t){return this.$_interactionManager.zoomBy(e,t)}transform(e){return void 0===e||(this.$_transform=e,this.$_renderer.setTransform(this.$_transform)),this.$_transform}on(e,t){"zoom"===e.toLowerCase()?this.$_interactionManager.onZoom(t||d.EMPTY_FUNCTION):"pan"===e.toLowerCase()?this.$_interactionManager.onPan(t||d.EMPTY_FUNCTION):"mousedown"===e.toLowerCase()?this.$_interactionManager.onMousedown(t||d.EMPTY_FUNCTION):"mouseup"===e.toLowerCase()?this.$_interactionManager.onMouseup(t||d.EMPTY_FUNCTION):"click"===e.toLowerCase()&&this.$_interactionManager.onClick(t||d.EMPTY_FUNCTION)}off(e,t){"zoom"===e.toLowerCase()?this.$_interactionManager.offZoom(t||d.EMPTY_FUNCTION):"pan"===e.toLowerCase()?this.$_interactionManager.offPan(t||d.EMPTY_FUNCTION):"mousedown"===e.toLowerCase()?this.$_interactionManager.offMousedown(t||d.EMPTY_FUNCTION):"mouseup"===e.toLowerCase()?this.$_interactionManager.offMouseup(t||d.EMPTY_FUNCTION):"click"===e.toLowerCase()&&this.$_interactionManager.offClick(t||d.EMPTY_FUNCTION)}}t.default=g,g.Utils=c,window.NetV=g},"./src/interaction/interaction.ts":
/*!****************************************!*\
  !*** ./src/interaction/interaction.ts ***!
  \****************************************/
<<<<<<< HEAD
/*! no static exports found */function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.InteractionManager=void 0;t.InteractionManager=class{constructor(e){this.isZoomListened=!1,this.isMouseListened=!1,this.mouseEventCallbackCount=0,this.isMouseDown=!1,this.isMouseMove=!1,this.netv=e,this.canvas=this.netv.$_container.querySelector("canvas"),this.zoomCallbackSet=new Set,this.panCallbackSet=new Set,this.clickCallbackSet=new Set,this.mousedownCallbackSet=new Set,this.mouseupCallbackSet=new Set}panBy(e,t){const r=Object.assign({},this.netv.$_transform);return r.x+=e,r.y+=t,this.netv.transform(r)}zoomBy(e,t){const r=Object.assign({},this.netv.$_transform);let a=t;a||(a={x:this.netv.$_configs.width/2,y:this.netv.$_configs.height/2});const{x:n,y:i}=a;return r.x=(1-e)*n+e*r.x,r.y=(1-e)*i+e*r.y,r.k*=e,this.netv.transform(r)}centerPosition(e){const t=Object.assign({},this.netv.$_transform),r=e.x*t.k+t.x,a=e.y*t.k+t.y,n=this.netv.$_configs.width/2,i=this.netv.$_configs.height/2;return t.x+=n-r,t.y+=i-a,this.netv.transform(t),t}onZoom(e){this.zoomCallbackSet.add(e),this.isZoomListened||(this.addWheelListeners(),this.isZoomListened=!0)}offZoom(e){this.zoomCallbackSet.delete(e),this.zoomCallbackSet.size||(this.removeWheelListeners(),this.isZoomListened=!1)}onClick(e){this.clickCallbackSet.add(e),this.increaseMouseEventCallbackCountBy(1)}offClick(e){this.clickCallbackSet.delete(e),this.decreaseMouseEventCallbackCountBy(1)}onMousedown(e){this.mousedownCallbackSet.add(e),this.increaseMouseEventCallbackCountBy(1)}offMousedown(e){this.mousedownCallbackSet.delete(e),this.decreaseMouseEventCallbackCountBy(1)}onMouseup(e){this.mouseupCallbackSet.add(e),this.increaseMouseEventCallbackCountBy(1)}offMouseup(e){this.mouseupCallbackSet.delete(e),this.decreaseMouseEventCallbackCountBy(1)}onPan(e){this.panCallbackSet.add(e),this.increaseMouseEventCallbackCountBy(1)}offPan(e){this.panCallbackSet.delete(e),this.decreaseMouseEventCallbackCountBy(1)}increaseMouseEventCallbackCountBy(e){this.mouseEventCallbackCount+=e,!this.isMouseListened&&this.mouseEventCallbackCount>0&&(this.addMouseListeners(),this.isMouseListened=!0)}decreaseMouseEventCallbackCountBy(e){this.mouseEventCallbackCount-=e,this.mouseEventCallbackCount<=0&&!this.panCallbackSet.size&&(this.removeMouseListeners(),this.isMouseListened=!1)}handleZoom(e){const t=Object.assign({},this.netv.$_transform),r=e.offsetX||e.pageX-this.canvas.offsetLeft,a=e.offsetY||e.pageY-this.canvas.offsetTop,n=e.deltaY?e.deltaY/40:e.detail?-e.detail:0;if(n){const i=Math.pow(1.1,n);t.x=(1-i)*r+i*t.x,t.y=(1-i)*a+i*t.y,t.k*=i,this.netv.transform(t),this.netv.draw(),this.zoomCallbackSet.forEach(r=>r({event:e,name:"zoom",transform:t}))}e.preventDefault()}handleMouseDown(e){var t;const r=e.offsetX||e.pageX-this.canvas.offsetLeft,a=e.offsetY||e.pageY-this.canvas.offsetTop,n=this.netv.$_configs.height-a,i=Object.assign({},this.netv.$_transform);if(this.isMouseDown=!0,this.mouseDownPos={x:r,y:a},this.dragStartTransform=JSON.parse(JSON.stringify(i)),this.mouseDownElement=this.netv.getElementByPosition({x:r,y:n}),null===(t=this.mouseDownElement)||void 0===t?void 0:t.element){const t=this.mouseDownElement.element;"Node"===(null==t?void 0:t.type)&&(this.mouseDownElementOriginPos=Object.assign({},t.position())),t.$_mousedownCallbackSet.forEach(r=>{r({event:e,name:"mousedown",element:t})})}else this.mousedownCallbackSet.forEach(t=>{t({event:e,name:"mousedown"})})}handleMouseMove(e){var t,r;let a=Object.assign({},this.netv.$_transform);const n=e.offsetX||e.pageX-this.canvas.offsetLeft,i=e.offsetY||e.pageY-this.canvas.offsetTop,o=this.isMouseMove,s=this.mouseMoveElement;if(this.isMouseDown){this.isMouseMove=!0;const r=null===(t=this.mouseDownElement)||void 0===t?void 0:t.element;"Node"===(null==r?void 0:r.type)&&r.$_dragstartCallbackSet.size+r.$_draggingCallbackSet.size+r.$_dragendCallbackSet.size?(o||r.$_dragstartCallbackSet.forEach(t=>{t({event:e,name:"dragstart",element:r})}),r.position({x:this.mouseDownElementOriginPos.x+(n-this.mouseDownPos.x)/a.k,y:this.mouseDownElementOriginPos.y+(i-this.mouseDownPos.y)/a.k}),this.netv.draw(),r.$_draggingCallbackSet.forEach(t=>{t({event:e,name:"dragging",element:r})})):(a.x=this.dragStartTransform.x+n-this.mouseDownPos.x,a.y=this.dragStartTransform.y+i-this.mouseDownPos.y,this.panCallbackSet.size&&(this.netv.transform(a),this.netv.draw(),this.panCallbackSet.forEach(t=>t({event:e,name:"pan",transform:a}))))}else{const t=this.netv.$_configs.height-i,a=null===(r=this.netv.getElementByPosition({x:n,y:t}))||void 0===r?void 0:r.element;this.mouseMoveElement=a,s===a?null==a||a.$_mousemoveCallbackSet.forEach(t=>t({event:e,name:"mousemove",element:a})):(null==s||s.$_mouseoutCallbackSet.forEach(t=>t({event:e,name:"mouseout",element:s})),null==a||a.$_mouseoverCallbackSet.forEach(t=>t({event:e,name:"mouseover",element:a})))}}handleMouseUp(e){var t,r;if(this.mouseDownElement){if(this.isMouseMove){if(null===(t=this.mouseDownElement)||void 0===t?void 0:t.element.$_dragendCallbackSet){const t=this.mouseDownElement.element;t.$_dragendCallbackSet.forEach(r=>r({event:e,name:"dragend",element:t}))}}else{const t=this.mouseDownElement.element;t.$_clickCallbackSet.forEach(r=>r({event:e,name:"click",element:t}))}if(null===(r=this.mouseDownElement)||void 0===r?void 0:r.element.$_mouseupCallbackSet){const t=this.mouseDownElement.element;t.$_mouseupCallbackSet.forEach(r=>r({event:e,name:"mouseup",element:t}))}}else this.mouseupCallbackSet.forEach(t=>t({event:e,name:"mouseup"})),this.isMouseMove||this.clickCallbackSet.forEach(t=>t({event:e,name:"click"}));this.isMouseDown=!1,this.isMouseMove=!1,this.mouseDownElement=void 0}addWheelListeners(){this.canvas.addEventListener("DOMMouseScroll",this.handleZoom.bind(this),!1),this.canvas.addEventListener("mousewheel",this.handleZoom.bind(this),!1)}removeWheelListeners(){this.canvas.removeEventListener("DOMMouseScroll",this.handleZoom.bind(this)),this.canvas.removeEventListener("mousewheel",this.handleZoom.bind(this))}addMouseListeners(){const e=this.canvas;e.addEventListener("mousedown",this.handleMouseDown.bind(this)),e.addEventListener("mousemove",this.handleMouseMove.bind(this)),e.addEventListener("mouseup",this.handleMouseUp.bind(this))}removeMouseListeners(){const e=this.canvas;e.removeEventListener("mousedown",this.handleMouseDown.bind(this)),e.removeEventListener("mousemove",this.handleMouseMove.bind(this)),e.removeEventListener("mouseup",this.handleMouseUp.bind(this))}}},"./src/renderer/elements/render-element.ts":
/*!*************************************************!*\
  !*** ./src/renderer/elements/render-element.ts ***!
  \*************************************************/
/*! no static exports found */function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.RenderElementManager=void 0;const a=r(/*! ../utils */"./src/renderer/utils.ts");t.RenderElementManager=class{constructor(e,t,r,n){this.count=0,this.elementToRenderId=new Map;const{limit:i,width:o,height:s,instanceVerteces:u}=t;this.gl=e,this.capacity=i,this.width=o,this.height=s,this.pixelRatio=window.devicePixelRatio||1,this.attributes=a.extractAttributesFromShader(r.vertex),this.program=a.createProgram(this.gl,r.vertex,r.fragment,this.attributes),this.idAttributes=a.extractAttributesFromShader(r.idVertex),this.idProgram=a.createProgram(this.gl,r.idVertex,r.idFragment,this.idAttributes),this.idTexture=n,this.attributes.forEach(e=>{e.isBuildIn?e.array=new Float32Array(u):e.array=new Float32Array(e.size*this.capacity),e.buffer=a.createArrayBuffer(this.gl,e.array)}),this.idAttributes.forEach((e,t)=>{"in_id"===t?(e.isBuildIn||(e.array=new Float32Array(e.size*this.capacity)),e.buffer=a.createArrayBuffer(this.gl,e.array)):this.idAttributes.set(t,this.attributes.get(t))}),this.gl.useProgram(this.program);const l=this.gl.getUniformLocation(this.program,"projection"),c=this.gl.getUniformLocation(this.program,"scale"),d=this.gl.getUniformLocation(this.program,"translate"),g=this.gl.getUniformLocation(this.program,"viewport"),m=this.gl.getUniformLocation(this.program,"pixelRatio"),h=new Float32Array([2/this.width,0,0,0,-2/this.height,0,-1,1,1]);null!==l&&this.gl.uniformMatrix3fv(l,!1,h);const p=new Float32Array([1,1]);null!==c&&this.gl.uniform2fv(c,p);const y=new Float32Array([0,0]);null!==d&&this.gl.uniform2fv(d,y);const v=new Float32Array([this.width,this.height]);null!==g&&this.gl.uniform2fv(g,v),null!==m&&this.gl.uniform1f(m,this.pixelRatio),this.gl.useProgram(this.idProgram);const f=this.gl.getUniformLocation(this.idProgram,"projection"),_=this.gl.getUniformLocation(this.idProgram,"scale"),x=this.gl.getUniformLocation(this.idProgram,"translate"),b=this.gl.getUniformLocation(this.idProgram,"viewport"),C=this.gl.getUniformLocation(this.idProgram,"pixelRatio");null!==f&&this.gl.uniformMatrix3fv(f,!1,h),null!==_&&this.gl.uniform2fv(_,p),null!==x&&this.gl.uniform2fv(x,y),null!==b&&this.gl.uniform2fv(b,v),null!==C&&this.gl.uniform1f(C,this.pixelRatio)}setRenderIdOf(e,t){this.renderIdToElement[t]=e,this.elementToRenderId.set(e,t)}getRenderIdOf(e){return this.elementToRenderId.get(e)}getElementByRenderId(e){return this.renderIdToElement[e]}setTransform(e){this.gl.useProgram(this.program);const t=this.gl.getUniformLocation(this.program,"scale"),r=this.gl.getUniformLocation(this.program,"translate"),a=new Float32Array([e.k,e.k]);this.gl.uniform2fv(t,a);const n=new Float32Array([e.x,e.y]);this.gl.uniform2fv(r,n),this.gl.useProgram(this.idProgram);const i=this.gl.getUniformLocation(this.idProgram,"scale"),o=this.gl.getUniformLocation(this.idProgram,"translate");this.gl.uniform2fv(i,a),this.gl.uniform2fv(o,n)}draw(){this.count>0&&(this.gl.enable(this.gl.BLEND),this.gl.blendFunc(this.gl.ONE,this.gl.ONE_MINUS_SRC_ALPHA),this.gl.useProgram(this.program),this.attributes.forEach(e=>{this.gl.enableVertexAttribArray(e.location)}),this.attributes.forEach((e,t)=>{this.gl.bindBuffer(this.gl.ARRAY_BUFFER,e.buffer),this.gl.vertexAttribPointer(e.location,e.size,this.gl.FLOAT,!1,e.size*e.array.BYTES_PER_ELEMENT,0),e.isBuildIn||this.gl.vertexAttribDivisor(e.location,1)})),this.gl.drawArraysInstanced(this.gl.TRIANGLE_STRIP,0,4,this.count),this.gl.blendFunc(this.gl.ONE,this.gl.ZERO),this.gl.useProgram(this.idProgram),this.gl.bindFramebuffer(this.gl.FRAMEBUFFER,this.idTexture),this.idAttributes.forEach(e=>{this.gl.enableVertexAttribArray(e.location)});const e=this.idAttributes.get("in_id");this.gl.bindBuffer(this.gl.ARRAY_BUFFER,e.buffer),this.gl.vertexAttribPointer(e.location,e.size,this.gl.FLOAT,!1,e.size*e.array.BYTES_PER_ELEMENT,0),this.gl.vertexAttribDivisor(e.location,1),this.gl.drawArraysInstanced(this.gl.TRIANGLE_STRIP,0,4,this.count),this.gl.bindFramebuffer(this.gl.FRAMEBUFFER,null),this.gl.enable(this.gl.BLEND),this.gl.blendFunc(this.gl.ONE,this.gl.ONE_MINUS_SRC_ALPHA)}addData(e){e.forEach((e,t)=>{const r=this.count+t;this.attributes.forEach(t=>{if(!t.isBuildIn){t.extractAttributeValueFrom(e).forEach((e,a)=>{t.array[t.size*r+a]=e})}});const n="Node"===e.type?0:1,i=2*r+n,o=a.encodeRenderId(i);this.idAttributes.get("in_id").array[4*r]=o.r,this.idAttributes.get("in_id").array[4*r+1]=o.g,this.idAttributes.get("in_id").array[4*r+2]=o.b,this.idAttributes.get("in_id").array[4*r+3]=o.a,this.setRenderIdOf(e,i)}),this.attributes.forEach(t=>{t.isBuildIn||(this.gl.bindBuffer(this.gl.ARRAY_BUFFER,t.buffer),this.gl.bufferSubData(this.gl.ARRAY_BUFFER,t.size*this.count*t.array.BYTES_PER_ELEMENT,t.array,t.size*this.count,t.size*e.length))});const t=this.idAttributes.get("in_id");this.gl.bindBuffer(this.gl.ARRAY_BUFFER,t.buffer),this.gl.bufferSubData(this.gl.ARRAY_BUFFER,t.size*this.count*t.array.BYTES_PER_ELEMENT,t.array,t.size*this.count,t.size*e.length),this.count+=e.length}changeAttribute(e,t){const r=this.getRenderIdOf(e),a=Math.floor(r/2),n=this.attributes.get("in_"+t);void 0===n&&console.error(`Attribute: ${t} is not supported in a ${e.type} instance.`);const i=n.extractAttributeValueFrom(e);n.array.set(i,n.size*a),this.gl.bindBuffer(this.gl.ARRAY_BUFFER,n.buffer),this.gl.bufferSubData(this.gl.ARRAY_BUFFER,n.size*a*n.array.BYTES_PER_ELEMENT,n.array,n.size*a,n.size)}clearData(){this.count=0}}},"./src/renderer/elements/render-link.ts":
/*!**********************************************!*\
  !*** ./src/renderer/elements/render-link.ts ***!
  \**********************************************/
/*! no static exports found */function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.RenderLinkManager=void 0;const a=r(/*! ./render-element */"./src/renderer/elements/render-element.ts");class n extends a.RenderElementManager{constructor(e,t,r,a){super(e,Object.assign(Object.assign({},t),{instanceVerteces:[-.5,.5,1,-.5,-.5,1,.5,.5,1,.5,-.5,1]}),Object.assign({},r),a),this.renderIdToElement={},this.attributes.forEach(e=>{"in_source"===e.name?e.extractAttributeValueFrom=e=>{const t=e.source().position();return[t.x,t.y]}:"in_target"===e.name?e.extractAttributeValueFrom=e=>{const t=e.target().position();return[t.x,t.y]}:"in_strokeWidth"===e.name?e.extractAttributeValueFrom=e=>[e.strokeWidth()*this.pixelRatio]:"in_strokeColor"===e.name?e.extractAttributeValueFrom=e=>{const t=e.strokeColor();return[t.r,t.g,t.b,t.a]}:"in_curveness"===e.name?e.extractAttributeValueFrom=e=>[e.curveness()]:"in_shape"===e.name&&(e.extractAttributeValueFrom=e=>"curve"===e.shape()?[1]:[0])})}refreshPosition(e){e.forEach((e,t)=>{const r=e.source().position();this.attributes.get("in_source").array[2*(0+t)]=r.x,this.attributes.get("in_source").array[2*(0+t)+1]=r.y;const a=e.target().position();this.attributes.get("in_target").array[2*(0+t)]=a.x,this.attributes.get("in_target").array[2*(0+t)+1]=a.y});[this.attributes.get("in_source"),this.attributes.get("in_target")].forEach(t=>{t.isBuildIn||(this.gl.bindBuffer(this.gl.ARRAY_BUFFER,t.buffer),this.gl.bufferSubData(this.gl.ARRAY_BUFFER,0*t.size*t.array.BYTES_PER_ELEMENT,t.array,0*t.size,t.size*e.length))})}}t.RenderLinkManager=n},"./src/renderer/elements/render-node.ts":
/*!**********************************************!*\
  !*** ./src/renderer/elements/render-node.ts ***!
  \**********************************************/
/*! no static exports found */function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.RenderNodeManager=void 0;const a=r(/*! ./render-element */"./src/renderer/elements/render-element.ts");class n extends a.RenderElementManager{constructor(e,t,r,a){super(e,Object.assign(Object.assign({},t),{instanceVerteces:[-.5,.5,1,-.5,-.5,1,.5,.5,1,.5,-.5,1]}),Object.assign({},r),a),this.renderIdToElement={},this.attributes.forEach(e=>{"in_position"===e.name?e.extractAttributeValueFrom=e=>{const t=e.position();return[t.x,t.y]}:"in_r"===e.name?e.extractAttributeValueFrom=e=>[e.r()*this.pixelRatio]:"in_width"===e.name?e.extractAttributeValueFrom=e=>[e.width()*this.pixelRatio]:"in_height"===e.name?e.extractAttributeValueFrom=e=>[e.height()*this.pixelRatio]:"in_innerSize"===e.name?e.extractAttributeValueFrom=e=>[e.innerWidth()*this.pixelRatio,e.innerHeight()*this.pixelRatio]:"in_rotate"===e.name?e.extractAttributeValueFrom=e=>[e.rotate()]:"in_fill"===e.name?e.extractAttributeValueFrom=e=>{const t=e.fill();return[t.r,t.g,t.b,t.a]}:"in_strokeWidth"===e.name?e.extractAttributeValueFrom=e=>[e.strokeWidth()*this.pixelRatio]:"in_strokeColor"===e.name?e.extractAttributeValueFrom=e=>{const t=e.strokeColor();return[t.r,t.g,t.b,t.a]}:"in_shape"===e.name?e.extractAttributeValueFrom=e=>{const t=e.shape();return"rect"===t?[1]:"triangle"===t?[2]:"cross"===t?[3]:[0]}:"in_vertexAlpha"===e.name?e.extractAttributeValueFrom=e=>{const t=e.vertexAlpha();return[t.x,t.y]}:"in_vertexBeta"===e.name?e.extractAttributeValueFrom=e=>{const t=e.vertexBeta();return[t.x,t.y]}:"in_vertexGamma"===e.name&&(e.extractAttributeValueFrom=e=>{const t=e.vertexGamma();return[t.x,t.y]})})}refreshPosition(e){e.forEach((e,t)=>{const r=e.position();this.attributes.get("in_position").array[2*t]=r.x,this.attributes.get("in_position").array[2*t+1]=r.y}),this.attributes.forEach(t=>{t.isBuildIn||(this.gl.bindBuffer(this.gl.ARRAY_BUFFER,t.buffer),this.gl.bufferSubData(this.gl.ARRAY_BUFFER,0,t.array,0,t.size*e.length))})}}t.RenderNodeManager=n},"./src/renderer/index.ts":
=======
/*! no static exports found */function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.InteractionManager=void 0;t.InteractionManager=class{constructor(e){this.isMouseDown=!1,this.isMouseMove=!1,this.netv=e}panBy(e,t){const r=Object.assign({},this.netv.$_transform);r.x+=e,r.y+=t,this.netv.transform(r)}zoomBy(e,t){const r=Object.assign({},this.netv.$_transform);let n=t;n||(n={x:this.netv.$_configs.width/2,y:this.netv.$_configs.height/2});const{x:a,y:i}=n;r.x=(1-e)*a+e*r.x,r.y=(1-e)*i+e*r.y,r.k*=e,this.netv.transform(r)}centerPosition(e){const t=Object.assign({},this.netv.$_transform),r=e.x*t.k+t.x,n=e.y*t.k+t.y,a=this.netv.$_configs.width/2,i=this.netv.$_configs.height/2,o=a-r,s=i-n,u=t.x,l=t.y,c=e=>e*e;let g=1;const d=setInterval(()=>{t.x=u+o*c(g/20),t.y=l+s*c(g/20),this.netv.transform(t),g+=1,g>20&&clearInterval(d)},25)}initZoom(){const e=this.netv.$_container.querySelector("canvas"),t=t=>{const r=Object.assign({},this.netv.$_transform),n=t.offsetX||t.pageX-e.offsetLeft,a=t.offsetY||t.pageY-e.offsetTop,i=t.deltaY?t.deltaY/40:t.detail?-t.detail:0;if(i){const e=Math.pow(1.1,i);r.x=(1-e)*n+e*r.x,r.y=(1-e)*a+e*r.y,r.k*=e,this.netv.transform(r)}t.preventDefault()};e.addEventListener("DOMMouseScroll",t,!1),e.addEventListener("mousewheel",t,!1)}initMouse(){let e=Object.assign({},this.netv.$_transform);const t=this.netv.$_container.querySelector("canvas");t.addEventListener("mousedown",r=>{var n;e=Object.assign({},this.netv.$_transform);const a=r.offsetX||r.pageX-t.offsetLeft,i=r.offsetY||r.pageY-t.offsetTop,o=this.netv.$_configs.height-i;this.isMouseDown=!0,this.mouseDownPos={x:a,y:i},this.dragStartTransform=JSON.parse(JSON.stringify(e)),this.mouseDownElement=this.netv.getElementByPosition({x:a,y:o}),(null===(n=this.mouseDownElement)||void 0===n?void 0:n.element.position)&&(this.mouseDownElementOriginPos=Object.assign({},this.mouseDownElement.element.position()))}),t.addEventListener("mousemove",r=>{const n=r.offsetX||r.pageX-t.offsetLeft,a=r.offsetY||r.pageY-t.offsetTop;if(this.isMouseDown)this.isMouseMove=!0,this.mouseDownElement&&this.mouseDownElement.element.position?(this.mouseDownElement.element.position({x:this.mouseDownElementOriginPos.x+(n-this.mouseDownPos.x)/e.k,y:this.mouseDownElementOriginPos.y+(a-this.mouseDownPos.y)/e.k}),this.netv.draw(),this.mouseDownElement.element.showLabel(!1),this.mouseDownElement.element.showLabel(!0)):(e.x=this.dragStartTransform.x+n-this.mouseDownPos.x,e.y=this.dragStartTransform.y+a-this.mouseDownPos.y,this.netv.transform(e));else{const e=this.netv.$_configs.height-a,t=this.netv.getElementByPosition({x:n,y:e});(null==t?void 0:t.element.$_hoverCallback)&&t.element.$_hoverCallback(t.element)}}),t.addEventListener("mouseup",e=>{var t;!this.isMouseMove&&this.mouseDownElement&&(null===(t=this.mouseDownElement)||void 0===t?void 0:t.element.$_clickCallback)&&this.mouseDownElement.element.$_clickCallback(this.mouseDownElement.element),this.isMouseDown=!1,this.isMouseMove=!1,this.mouseDownElement=void 0})}}},"./src/label/label.ts":
/*!****************************!*\
  !*** ./src/label/label.ts ***!
  \****************************/
/*! no static exports found */function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.LabelManager=void 0;t.LabelManager=class{constructor(e){this.$_core=e,this.$_svg=document.createElementNS("http://www.w3.org/2000/svg","svg"),e.$_container.prepend(this.$_svg),this.$_svg.setAttribute("width",e.$_configs.width),this.$_svg.setAttribute("height",e.$_configs.height),e.$_container.style.position="relative",e.$_container.style.overflow="hidden",e.$_container.style.width=e.$_configs.width,e.$_container.style.height=e.$_configs.height,this.$_svg.style.position="absolute",this.$_svg.style.overflow="visible",this.$_svg.style.pointerEvents="none",this.$_offset=this.$_core.$_configs.label.offset,this.$_fontSize=this.$_core.$_configs.label.fontSize,this.$_strokeWidth=this.$_core.$_configs.label.strokeWidth,this.$_svg.setAttribute("transform",`translate(${this.$_offset.x} ${this.$_offset.y})`),this.$_svg.setAttribute("font-size",this.$_fontSize+"px"),this.$_svg.setAttribute("stroke","white"),this.$_svg.setAttribute("stroke-width",this.$_strokeWidth+"px")}dispose(){this.$_svg.remove()}drawLabel(e){const t=e.position(),r=e.text();if(!r)return;const n=document.createElementNS("http://www.w3.org/2000/svg","text");n.setAttribute("id",e.id()),n.setAttribute("x",String(t.x)),n.setAttribute("y",String(t.y)),n.setAttribute("text-anchor","start"),n.setAttribute("alignment-baseline","middle"),n.style.userSelect="none",n.innerHTML=r,this.$_svg.prepend(n)}removeLabel(e){var t;null===(t=this.$_svg.getElementById(e.id()))||void 0===t||t.remove()}setTransform(e){this.$_svg.setAttribute("transform",`translate(${this.$_offset.x+(1-e.k)*(-this.$_core.$_configs.width/2)+e.x}\n             ${this.$_offset.y+(1-e.k)*(-this.$_core.$_configs.height/2)+e.y})\n             scale(${e.k})`),this.$_svg.setAttribute("font-size",this.$_fontSize/e.k+"px"),this.$_svg.setAttribute("stroke-width",this.$_strokeWidth/e.k+"px")}}},"./src/link.ts":
/*!*********************!*\
  !*** ./src/link.ts ***!
  \*********************/
/*! no static exports found */function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});t.default=class{constructor(e,t){this.$_core=e;const r=this.$_core.$_configs,n=Object.assign({strokeWidth:r.link.strokeWidth,strokeColor:r.link.strokeColor,clickCallback:r.link.clickCallback,hoverCallback:r.link.hoverCallback},t),a=this.$_core.getNodeById(n.source),i=this.$_core.getNodeById(n.target);this.sourceTarget({source:a,target:i}),this.$_strokeWidth=n.strokeWidth,this.$_strokeColor=n.strokeColor,this.setClickCallback(n.clickCallback),this.setHoverCallback(n.hoverCallback)}source(e){return 1===arguments.length&&this.sourceTarget({source:e,target:this.$_target}),this.$_source}target(e){return 1===arguments.length&&this.sourceTarget({source:this.$_source,target:e}),this.$_target}sourceTarget(e){var t,r;if(arguments.length>0){const n=this.$_source,a=this.$_target,i=e.source,o=e.target,s=i.id(),u=o.id();if(i===o)throw new Error(`Self loop (${s} <=> ${u}) is not allowed.`);if(this.$_core.$_ends2link.has([s,u]))throw new Error(`Multiple link (${s} <=> ${u}) is not allowd.`);n&&a&&(this.$_core.$_ends2link.delete([n.id(),a.id()]),null===(t=this.$_core.$_sourceId2links.get(n.id()))||void 0===t||t.delete(this),null===(r=this.$_core.$_targetId2links.get(a.id()))||void 0===r||r.delete(this)),this.$_source=i,this.$_target=o,this.$_core.$_ends2link.set([s,u],this),this.$_core.$_sourceId2links.has(s)?this.$_core.$_sourceId2links.get(s).add(this):this.$_core.$_sourceId2links.set(s,new Set([this])),this.$_core.$_targetId2links.has(u)?this.$_core.$_targetId2links.get(u).add(this):this.$_core.$_targetId2links.set(u,new Set([this]))}return{source:this.$_source,target:this.$_target}}strokeWidth(e){return 1===arguments.length&&(this.$_strokeWidth=e,this.$_core.$_renderer.linkManager.changeAttribute(this,"strokeWidth")),this.$_strokeWidth}strokeColor(e){return 1===arguments.length&&(this.$_strokeColor=e,this.$_core.$_renderer.linkManager.changeAttribute(this,"strokeColor")),this.$_strokeColor}setHoverCallback(e){this.$_hoverCallback=e}setClickCallback(e){this.$_clickCallback=e}}},"./src/node.ts":
/*!*********************!*\
  !*** ./src/node.ts ***!
  \*********************/
/*! no static exports found */function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const n=r(/*! ./utils/is */"./src/utils/is.ts");t.default=class{constructor(e,t){this.$_position={x:0,y:0},this.$_core=e;const r=this.$_core.$_configs,n=Object.assign({x:this.$_position.x,y:this.$_position.y,strokeWidth:r.node.strokeWidth,strokeColor:r.node.strokeColor,r:r.node.r,fill:r.node.fill,showLabel:r.node.showLabel,text:r.node.text,clickCallback:r.node.clickCallback,hoverCallback:r.node.hoverCallback},t);this.$_setId(n.id),this.$_position={x:n.x,y:n.y},this.$_strokeWidth=n.strokeWidth,this.$_strokeColor=n.strokeColor,this.$_fill=n.fill,this.$_r=n.r,this.$_showLabel=n.showLabel,this.$_text=n.text,this.$_showLabel&&this.showLabel(!0),this.setClickCallback(n.clickCallback),this.setHoverCallback(n.hoverCallback)}id(){return this.$_id}neighborNodes(){let e=this.$_core.$_sourceId2links.get(this.$_id);e||(e=new Set);let t=this.$_core.$_targetId2links.get(this.$_id);t||(t=new Set);const r=new Set([...[...e].map(e=>e.$_target),...[...t].map(e=>e.$_source)]);return Array.from(r)}neighborLinks(){let e=this.$_core.$_sourceId2links.get(this.$_id);e||(e=new Set);let t=this.$_core.$_targetId2links.get(this.$_id);t||(t=new Set);const r=new Set([...e,...t]);return Array.from(r)}x(e){return arguments.length>0&&this.position({x:e}),this.$_position.x}y(e){return arguments.length>0&&this.position({y:e}),this.$_position.y}position(e){let t={};const r=(e,r)=>{this.$_position[e]=r,Object.entries(t).forEach(e=>{const t=e[0],r=e[1];if(r){this.$_core.$_addModifiedLinkCount(r.size);for(const e of r)this.$_core.$_renderer.linkManager.changeAttribute(e,t)}})};if(arguments.length>0&&("x"in e||"y"in e)){if(this.$_core.$_lazyUpdate)return"x"in e&&(this.$_position.x=e.x),"y"in e&&(this.$_position.y=e.y),this.$_position;t={source:this.$_core.$_sourceId2links.get(this.$_id),target:this.$_core.$_targetId2links.get(this.$_id)},"x"in e&&r("x",e.x),"y"in e&&r("y",e.y),this.$_core.$_renderer.nodeManager.changeAttribute(this,"position")}return this.$_position}strokeWidth(e){return 1===arguments.length&&(this.$_strokeWidth=e,this.$_core.$_renderer.nodeManager.changeAttribute(this,"strokeWidth")),this.$_strokeWidth}strokeColor(e){return 1===arguments.length&&(this.$_strokeColor=e,this.$_core.$_renderer.nodeManager.changeAttribute(this,"strokeColor")),this.$_strokeColor}fill(e){return 1===arguments.length&&(this.$_fill=e,this.$_core.$_renderer.nodeManager.changeAttribute(this,"fill")),this.$_fill}r(e){return 1===arguments.length&&(this.$_r=e,this.$_core.$_renderer.nodeManager.changeAttribute(this,"radius")),this.$_r}showLabel(e){this.$_showLabel=e,e?this.$_core.labelManager.drawLabel(this):this.$_core.labelManager.removeLabel(this)}text(e){return e&&(this.$_text=e),this.$_text}textOffset(e){return e&&(this.$_textOffset=e),this.$_textOffset}$_setId(e){if(!n.isValidId(e))throw new Error("Invalid ID "+e);if(this.$_core.$_id2node.has(e))throw new Error(`Duplicate node (${e}) is not allowed.`);if(n.isValidId(this.$_id))throw new Error("Can not change the id of an exist node.");this.$_core.$_id2node.set(e,this),this.$_id=e}setHoverCallback(e){this.$_hoverCallback=e}setClickCallback(e){this.$_clickCallback=e}}},"./src/renderer/elements/link/fragment.glsl":
/*!**************************************************!*\
  !*** ./src/renderer/elements/link/fragment.glsl ***!
  \**************************************************/
/*! exports provided: default */function(e,t,r){"use strict";r.r(t),t.default="#version 300 es\r\nprecision highp float;\r\nin vec4 color;\r\n\r\nout vec4 fragmentColor;\r\n\r\nvoid main(void) {\r\n    fragmentColor = vec4(color.rgb * color.a, color.a);\r\n}"},"./src/renderer/elements/link/id-fragment.glsl":
/*!*****************************************************!*\
  !*** ./src/renderer/elements/link/id-fragment.glsl ***!
  \*****************************************************/
/*! exports provided: default */function(e,t,r){"use strict";r.r(t),t.default="#version 300 es\r\nprecision highp float;\r\nin vec4 color;\r\n\r\nin vec4 id;\r\n\r\n// TODO: all id related shader need clean up\r\nout vec4 fragmentColor;\r\n\r\nvoid main(void) {\r\n    fragmentColor = id;\r\n}"},"./src/renderer/elements/link/id-vertex.glsl":
/*!***************************************************!*\
  !*** ./src/renderer/elements/link/id-vertex.glsl ***!
  \***************************************************/
/*! exports provided: default */function(e,t,r){"use strict";r.r(t),t.default="#version 300 es\r\nprecision highp float;\r\nin vec3 inVertexPos;\r\nin vec2 inSourcePosition;\r\nin vec2 inTargetPosition;\r\nin float inStrokeWidth;\r\nin vec4 inStrokeColor;\r\n\r\nin vec4 inId;\r\n\r\nout vec4 color;\r\n\r\nout vec4 id;\r\n\r\nuniform mat3 projection;\r\nuniform vec2 scale;\r\nuniform vec2 translate;\r\n\r\nvoid main(void) {\r\n    id = inId;\r\n\r\n    color = inStrokeColor;\r\n\r\n    vec2 source = inSourcePosition * scale + translate;\r\n    vec2 target = inTargetPosition * scale + translate;\r\n    vec2 delta = source - target;\r\n    vec2 center = 0.5 * (source + target);\r\n    float len = length(delta);\r\n    float phi = atan(delta.y / delta.x);\r\n\r\n    mat3 line_scale = mat3(\r\n        len, 0, 0,\r\n        0, inStrokeWidth, 0,\r\n        0, 0, 1\r\n    );\r\n    mat3 line_rotate = mat3(\r\n        cos(phi), sin(phi), 0,\r\n        -sin(phi), cos(phi), 0,\r\n        0, 0, 1\r\n    );\r\n    mat3 line_translate = mat3(\r\n        1, 0, 0,\r\n        0, 1, 0,\r\n        center.x, center.y, 1\r\n    );\r\n    \r\n    mat3 transform = line_translate * line_rotate * line_scale;\r\n\r\n    gl_Position = vec4(projection * transform * inVertexPos, 1.);\r\n}"},"./src/renderer/elements/link/render-link.ts":
/*!***************************************************!*\
  !*** ./src/renderer/elements/link/render-link.ts ***!
  \***************************************************/
/*! no static exports found */function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.RenderLinkManager=void 0;const n=r(/*! ./vertex.glsl */"./src/renderer/elements/link/vertex.glsl"),a=r(/*! ./fragment.glsl */"./src/renderer/elements/link/fragment.glsl"),i=r(/*! ./id-vertex.glsl */"./src/renderer/elements/link/id-vertex.glsl"),o=r(/*! ./id-fragment.glsl */"./src/renderer/elements/link/id-fragment.glsl"),s=r(/*! ../../utils */"./src/renderer/utils.ts"),u=r(/*! ../../../utils/map2 */"./src/utils/map2.ts");var l,c;!function(e){e[e.TEMPLATE=0]="TEMPLATE",e[e.SOURCE=1]="SOURCE",e[e.TARGET=2]="TARGET",e[e.WIDTH=3]="WIDTH",e[e.COLOR=4]="COLOR"}(l||(l={})),function(e){e[e.TEMPLATE=0]="TEMPLATE",e[e.SOURCE=1]="SOURCE",e[e.TARGET=2]="TARGET",e[e.WIDTH=3]="WIDTH",e[e.COLOR=4]="COLOR",e[e.ID=5]="ID"}(c||(c={}));const g={source:l.SOURCE,target:l.TARGET,strokeWidth:l.WIDTH,strokeColor:l.COLOR};t.RenderLinkManager=class{constructor(e,t,r){this.count=0,this.idsToIndex=new u.default;const{limit:c,width:g,height:d}=t;this.gl=e,this.limit=c,this.width=g,this.height=d,this.pixelRatio=window.devicePixelRatio||1,this.attributes=s.extractAttributesFromShader(n.default),this.program=s.createProgram(this.gl,n.default,a.default,this.attributes),this.idAttributes=s.extractAttributesFromShader(i.default),this.idProgram=s.createProgram(this.gl,i.default,o.default,this.idAttributes),this.idTexture=r,this.renderIdToIds={},this.attributes[l.TEMPLATE].array=new Float32Array([-.5,.5,1,-.5,-.5,1,.5,.5,1,.5,-.5,1]),this.attributes.forEach(e=>{e.isBuildIn||(e.array=new Float32Array(e.size*this.limit))}),this.attributes.forEach(e=>{e.buffer=s.createArrayBuffer(this.gl,e.array)}),this.idAttributes.forEach((e,t)=>{t<this.attributes.length?this.idAttributes[t]=this.attributes[t]:(e.isBuildIn||(e.array=new Float32Array(e.size*this.limit)),e.buffer=s.createArrayBuffer(this.gl,e.array))}),this.gl.useProgram(this.program);const m=this.gl.getUniformLocation(this.program,"projection"),h=this.gl.getUniformLocation(this.program,"scale"),y=this.gl.getUniformLocation(this.program,"translate"),p=new Float32Array([2/this.width,0,0,0,-2/this.height,0,-1,1,1]);this.gl.uniformMatrix3fv(m,!1,p);const v=new Float32Array([1,1]);this.gl.uniform2fv(h,v);const f=new Float32Array([0,0]);this.gl.uniform2fv(y,f),this.gl.useProgram(this.idProgram);const x=this.gl.getUniformLocation(this.idProgram,"projection"),_=this.gl.getUniformLocation(this.idProgram,"scale"),b=this.gl.getUniformLocation(this.idProgram,"translate");this.gl.uniformMatrix3fv(x,!1,p),this.gl.uniform2fv(_,v),this.gl.uniform2fv(b,f)}changeAttribute(e,t){const r=g[t],n=this.attributes[r],a=e.sourceTarget(),i=this.idsToIndex.get([a.source.id(),a.target.id()]);let o=null;if("source"===t){const e=a.source.position();o=[e.x,e.y]}else if("target"===t){const e=a.target.position();o=[e.x,e.y]}else if("strokeWidth"===t)o=[e.strokeWidth()*this.pixelRatio];else{if("strokeColor"!==t)return void console.error("Link attribute not supported.");{const t=e.strokeColor();o=[t.r,t.g,t.b,t.a]}}n.array.set(o,n.size*i),this.gl.bindBuffer(this.gl.ARRAY_BUFFER,n.buffer),this.gl.bufferSubData(this.gl.ARRAY_BUFFER,n.size*i*n.array.BYTES_PER_ELEMENT,n.array,n.size*i,n.size)}refreshPosition(e){e.forEach((e,t)=>{const r=e.source().position();this.attributes[l.SOURCE].array[2*(0+t)]=r.x,this.attributes[l.SOURCE].array[2*(0+t)+1]=r.y;const n=e.target().position();this.attributes[l.TARGET].array[2*(0+t)]=n.x,this.attributes[l.TARGET].array[2*(0+t)+1]=n.y});[this.attributes[l.SOURCE],this.attributes[l.TARGET]].forEach(t=>{t.isBuildIn||(this.gl.bindBuffer(this.gl.ARRAY_BUFFER,t.buffer),this.gl.bufferSubData(this.gl.ARRAY_BUFFER,0*t.size*t.array.BYTES_PER_ELEMENT,t.array,0*t.size,t.size*e.length))})}clearData(){this.count=0}addData(e){e.forEach((e,t)=>{const r=e.source().position();this.attributes[l.SOURCE].array[2*(this.count+t)]=r.x,this.attributes[l.SOURCE].array[2*(this.count+t)+1]=r.y;const n=e.target().position();this.attributes[l.TARGET].array[2*(this.count+t)]=n.x,this.attributes[l.TARGET].array[2*(this.count+t)+1]=n.y,this.attributes[l.WIDTH].array[this.count+t]=e.strokeWidth()*this.pixelRatio;const a=e.strokeColor();this.attributes[l.COLOR].array[4*(this.count+t)]=a.r,this.attributes[l.COLOR].array[4*(this.count+t)+1]=a.g,this.attributes[l.COLOR].array[4*(this.count+t)+2]=a.b,this.attributes[l.COLOR].array[4*(this.count+t)+3]=a.a;const i=s.encodeRenderId(2*(this.count+t)+1);this.idAttributes[c.ID].array[4*(this.count+t)]=i.r,this.idAttributes[c.ID].array[4*(this.count+t)+1]=i.g,this.idAttributes[c.ID].array[4*(this.count+t)+2]=i.b,this.idAttributes[c.ID].array[4*(this.count+t)+3]=i.a;const o=e.sourceTarget();this.renderIdToIds[2*(this.count+t)+1]=[o.source.id(),o.target.id()],this.idsToIndex.set([o.source.id(),o.target.id()],this.count+t)}),this.attributes.forEach(t=>{t.isBuildIn||(this.gl.bindBuffer(this.gl.ARRAY_BUFFER,t.buffer),this.gl.bufferSubData(this.gl.ARRAY_BUFFER,t.size*this.count*t.array.BYTES_PER_ELEMENT,t.array,t.size*this.count,t.size*e.length))});const t=this.idAttributes[c.ID];this.gl.bindBuffer(this.gl.ARRAY_BUFFER,t.buffer),this.gl.bufferSubData(this.gl.ARRAY_BUFFER,t.size*this.count*t.array.BYTES_PER_ELEMENT,t.array,t.size*this.count,t.size*e.length),this.count+=e.length}setTransform(e){this.gl.useProgram(this.program);const t=this.gl.getUniformLocation(this.program,"scale"),r=this.gl.getUniformLocation(this.program,"translate"),n=new Float32Array([e.k,e.k]);this.gl.uniform2fv(t,n);const a=new Float32Array([e.x,e.y]);this.gl.uniform2fv(r,a),this.gl.useProgram(this.idProgram);const i=this.gl.getUniformLocation(this.idProgram,"scale"),o=this.gl.getUniformLocation(this.idProgram,"translate");this.gl.uniform2fv(i,n),this.gl.uniform2fv(o,a)}getIdsByRenderId(e){return this.renderIdToIds[e]}draw(){this.count>0&&(this.gl.enable(this.gl.BLEND),this.gl.blendFunc(this.gl.ONE,this.gl.ONE_MINUS_SRC_ALPHA),this.gl.useProgram(this.program),this.attributes.forEach(e=>{this.gl.enableVertexAttribArray(e.index)}),this.attributes.forEach((e,t)=>{this.gl.bindBuffer(this.gl.ARRAY_BUFFER,e.buffer),this.gl.vertexAttribPointer(e.index,e.size,this.gl.FLOAT,!1,e.isBuildIn?0:e.size*e.array.BYTES_PER_ELEMENT,0),e.isBuildIn||this.gl.vertexAttribDivisor(e.index,1)})),this.gl.drawArraysInstanced(this.gl.TRIANGLE_STRIP,0,4,this.count),this.gl.blendFunc(this.gl.ONE,this.gl.ZERO),this.gl.useProgram(this.idProgram),this.gl.bindFramebuffer(this.gl.FRAMEBUFFER,this.idTexture),this.idAttributes.forEach(e=>{this.gl.enableVertexAttribArray(e.index)});const e=this.idAttributes[c.ID];this.gl.bindBuffer(this.gl.ARRAY_BUFFER,e.buffer),this.gl.vertexAttribPointer(e.index,e.size,this.gl.FLOAT,!1,e.size*e.array.BYTES_PER_ELEMENT,0),this.gl.vertexAttribDivisor(e.index,1),this.gl.drawArraysInstanced(this.gl.TRIANGLE_STRIP,0,4,this.count),this.gl.bindFramebuffer(this.gl.FRAMEBUFFER,null),this.gl.enable(this.gl.BLEND),this.gl.blendFunc(this.gl.ONE,this.gl.ONE_MINUS_SRC_ALPHA)}}},"./src/renderer/elements/link/vertex.glsl":
/*!************************************************!*\
  !*** ./src/renderer/elements/link/vertex.glsl ***!
  \************************************************/
/*! exports provided: default */function(e,t,r){"use strict";r.r(t),t.default="#version 300 es\r\nprecision highp float;\r\nin vec3 inVertexPos;\r\nin vec2 inSourcePosition;\r\nin vec2 inTargetPosition;\r\nin float inStrokeWidth;\r\nin vec4 inStrokeColor;\r\n\r\nout vec4 color;\r\n\r\nuniform mat3 projection;\r\nuniform vec2 scale;\r\nuniform vec2 translate;\r\n\r\nvoid main(void) {\r\n    color = inStrokeColor;\r\n\r\n    vec2 source = inSourcePosition * scale + translate;\r\n    vec2 target = inTargetPosition * scale + translate;\r\n    vec2 delta = source - target;\r\n    vec2 center = 0.5 * (source + target);\r\n    float len = length(delta);\r\n    float phi = atan(delta.y / delta.x);\r\n\r\n    mat3 line_scale = mat3(\r\n        len, 0, 0,\r\n        0, inStrokeWidth, 0,\r\n        0, 0, 1\r\n    );\r\n    mat3 line_rotate = mat3(\r\n        cos(phi), sin(phi), 0,\r\n        -sin(phi), cos(phi), 0,\r\n        0, 0, 1\r\n    );\r\n    mat3 line_translate = mat3(\r\n        1, 0, 0,\r\n        0, 1, 0,\r\n        center.x, center.y, 1\r\n    );\r\n    \r\n    mat3 transform = line_translate * line_rotate * line_scale;\r\n\r\n    gl_Position = vec4(projection * transform * inVertexPos, 1.);\r\n}"},"./src/renderer/elements/node/fragment.glsl":
/*!**************************************************!*\
  !*** ./src/renderer/elements/node/fragment.glsl ***!
  \**************************************************/
/*! exports provided: default */function(e,t,r){"use strict";r.r(t),t.default="#version 300 es\r\nprecision highp float;\r\nin vec2 pos;\r\nin float radius;\r\nin vec4 color;\r\nin float strokeWidth;\r\nin vec4 strokeColor;\r\n\r\nout vec4 fragmentColor;\r\n\r\nuniform vec2 viewport;\r\nuniform float pixelRatio;\r\n\r\nfloat inCircle() {\r\n  vec2 flip_pos = pos;\r\n  flip_pos.y = viewport.y - pos.y;\r\n  float r = distance(gl_FragCoord.xy / pixelRatio, flip_pos);\r\n  float draw = 1. - step(radius - strokeWidth / 2., r);\r\n  return draw;\r\n}\r\n\r\nfloat inBorder() {\r\n  if (strokeWidth == 0.) {\r\n    return 0.;\r\n  }\r\n  vec2 flip_pos = pos;\r\n  flip_pos.y = viewport.y - pos.y;\r\n  float r = distance(gl_FragCoord.xy / pixelRatio, flip_pos);\r\n  float drawOuter = 1. - smoothstep((radius + strokeWidth / 2.) * 0.95, (radius + strokeWidth / 2.) * 1.05, r);\r\n  float drawInner = 1. - step(radius - strokeWidth / 2., r);\r\n  return drawOuter * (1. - drawInner);\r\n  // return drawOuter;\r\n}\r\n\r\nvoid main(void) {\r\n    // border check, using 0.5(center of smoothstep)\r\n    if (inCircle() < 1. && (strokeWidth < 0.8 || inBorder() < 0.5)) {\r\n        discard;\r\n    }\r\n    fragmentColor = inBorder() * vec4(strokeColor.rgb * strokeColor.a, strokeColor.a) + inCircle() * vec4(color.rgb * color.a, color.a);\r\n}"},"./src/renderer/elements/node/id-fragment.glsl":
/*!*****************************************************!*\
  !*** ./src/renderer/elements/node/id-fragment.glsl ***!
  \*****************************************************/
/*! exports provided: default */function(e,t,r){"use strict";r.r(t),t.default="#version 300 es\r\nprecision highp float;\r\nin vec2 pos;\r\nin float radius;\r\nin vec4 color;\r\nin float strokeWidth;\r\nin vec4 strokeColor;\r\n\r\nin vec4 id;\r\n\r\nout vec4 fragmentColor;\r\n\r\nuniform vec2 viewport;\r\nuniform float pixelRatio;\r\n\r\nfloat inCircle() {\r\n  vec2 flip_pos = pos;\r\n  flip_pos.y = viewport.y - pos.y;\r\n  float r = distance(gl_FragCoord.xy / pixelRatio, flip_pos);\r\n  float draw = 1. - step(radius - strokeWidth / 2., r);\r\n  return draw;\r\n}\r\n\r\nfloat inBorder() {\r\n  if (strokeWidth == 0.) {\r\n    return 0.;\r\n  }\r\n  vec2 flip_pos = pos;\r\n  flip_pos.y = viewport.y - pos.y;\r\n  float r = distance(gl_FragCoord.xy / pixelRatio, flip_pos);\r\n  float drawOuter = 1. - smoothstep((radius + strokeWidth / 2.) * 0.95, (radius + strokeWidth / 2.) * 1.05, r);\r\n  float drawInner = 1. - step(radius - strokeWidth / 2., r);\r\n  return drawOuter * (1. - drawInner);\r\n  // return drawOuter;\r\n}\r\n\r\nvoid main(void) {\r\n    // border check, using 0.5(center of smoothstep)\r\n    if (inCircle() < 1. && (strokeWidth < 0.8 || inBorder() < 0.5)) {\r\n        discard;\r\n    }\r\n    fragmentColor = id;\r\n}"},"./src/renderer/elements/node/id-vertex.glsl":
/*!***************************************************!*\
  !*** ./src/renderer/elements/node/id-vertex.glsl ***!
  \***************************************************/
/*! exports provided: default */function(e,t,r){"use strict";r.r(t),t.default="#version 300 es\r\nprecision highp float;\r\nin vec3 inVertexPos;\r\nin vec2 inPosition;\r\nin float inRadius;\r\nin vec4 inFill;\r\nin float inStrokeWidth;\r\nin vec4 inStrokeColor;\r\n\r\nin vec4 inId;\r\n\r\nout vec2 pos;\r\nout float radius;\r\nout vec4 color;\r\nout float strokeWidth;\r\nout vec4 strokeColor;\r\n\r\nout vec4 id;\r\n\r\nuniform mat3 projection;\r\nuniform vec2 scale;\r\nuniform vec2 translate;\r\nuniform vec2 viewport;\r\n\r\nvoid main(void) {\r\n    id = inId;\r\n\r\n    float size = inRadius + inStrokeWidth / 2.;\r\n    radius = inRadius;\r\n    color = inFill;\r\n    strokeWidth = inStrokeWidth;\r\n    strokeColor = inStrokeColor;\r\n    float vertexSize = size * (2. * sqrt(2.)) * 1.5; // NOTE: x 1.5 to prevent border factor\r\n    pos = scale * inPosition + translate;\r\n    mat3 transform = mat3(\r\n        vertexSize, 0, 0,\r\n        0, vertexSize, 0,\r\n        pos.x, pos.y, 1\r\n    );\r\n\r\n    gl_Position = vec4(projection * transform * inVertexPos, 1.);\r\n}"},"./src/renderer/elements/node/render-node.ts":
/*!***************************************************!*\
  !*** ./src/renderer/elements/node/render-node.ts ***!
  \***************************************************/
/*! no static exports found */function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.RenderNodeManager=void 0;const n=r(/*! ./vertex.glsl */"./src/renderer/elements/node/vertex.glsl"),a=r(/*! ./fragment.glsl */"./src/renderer/elements/node/fragment.glsl"),i=r(/*! ./id-vertex.glsl */"./src/renderer/elements/node/id-vertex.glsl"),o=r(/*! ./id-fragment.glsl */"./src/renderer/elements/node/id-fragment.glsl"),s=r(/*! ../../utils */"./src/renderer/utils.ts");var u,l;!function(e){e[e.TEMPLATE=0]="TEMPLATE",e[e.POSITION=1]="POSITION",e[e.RADIUS=2]="RADIUS",e[e.COLOR=3]="COLOR",e[e.STROKE_WIDTH=4]="STROKE_WIDTH",e[e.STROKE_COLOR=5]="STROKE_COLOR"}(u||(u={})),function(e){e[e.TEMPLATE=0]="TEMPLATE",e[e.POSITION=1]="POSITION",e[e.RADIUS=2]="RADIUS",e[e.COLOR=3]="COLOR",e[e.STROKE_WIDTH=4]="STROKE_WIDTH",e[e.STROKE_COLOR=5]="STROKE_COLOR",e[e.ID=6]="ID"}(l||(l={}));const c={position:u.POSITION,radius:u.RADIUS,fill:u.COLOR,strokeWidth:u.STROKE_WIDTH,strokeColor:u.STROKE_COLOR};t.RenderNodeManager=class{constructor(e,t,r){this.count=0;const{limit:l,width:c,height:g}=t;this.gl=e,this.limit=l,this.width=c,this.height=g,this.pixelRatio=window.devicePixelRatio||1,this.attributes=s.extractAttributesFromShader(n.default),this.program=s.createProgram(this.gl,n.default,a.default,this.attributes),this.idAttributes=s.extractAttributesFromShader(i.default),this.idProgram=s.createProgram(this.gl,i.default,o.default,this.idAttributes),this.idTexture=r,this.renderIdToId={},this.idToIndex={},this.attributes[u.TEMPLATE].array=new Float32Array([-.5,0,1,0,-.5,1,0,.5,1,.5,0,1]),this.attributes.forEach(e=>{e.isBuildIn||(e.array=new Float32Array(e.size*this.limit))}),this.attributes.forEach(e=>{e.buffer=s.createArrayBuffer(this.gl,e.array)}),this.idAttributes.forEach((e,t)=>{t<this.attributes.length?this.idAttributes[t]=this.attributes[t]:(e.isBuildIn||(e.array=new Float32Array(e.size*this.limit)),e.buffer=s.createArrayBuffer(this.gl,e.array))}),this.gl.useProgram(this.program);const d=this.gl.getUniformLocation(this.program,"projection"),m=this.gl.getUniformLocation(this.program,"scale"),h=this.gl.getUniformLocation(this.program,"translate"),y=this.gl.getUniformLocation(this.program,"viewport"),p=this.gl.getUniformLocation(this.program,"pixelRatio"),v=new Float32Array([2/this.width,0,0,0,-2/this.height,0,-1,1,1]);this.gl.uniformMatrix3fv(d,!1,v);const f=new Float32Array([1,1]);this.gl.uniform2fv(m,f);const x=new Float32Array([0,0]);this.gl.uniform2fv(h,x);const _=new Float32Array([this.width,this.height]);this.gl.uniform2fv(y,_),this.gl.uniform1f(p,this.pixelRatio),this.gl.useProgram(this.idProgram);const b=this.gl.getUniformLocation(this.idProgram,"projection"),P=this.gl.getUniformLocation(this.idProgram,"scale"),C=this.gl.getUniformLocation(this.idProgram,"translate"),E=this.gl.getUniformLocation(this.idProgram,"viewport"),k=this.gl.getUniformLocation(this.idProgram,"pixelRatio");this.gl.uniformMatrix3fv(b,!1,v),this.gl.uniform2fv(P,f),this.gl.uniform2fv(C,x),this.gl.uniform2fv(E,_),this.gl.uniform1f(k,this.pixelRatio)}setTransform(e){this.gl.useProgram(this.program);const t=this.gl.getUniformLocation(this.program,"scale"),r=this.gl.getUniformLocation(this.program,"translate"),n=new Float32Array([e.k,e.k]);this.gl.uniform2fv(t,n);const a=new Float32Array([e.x,e.y]);this.gl.uniform2fv(r,a),this.gl.useProgram(this.idProgram);const i=this.gl.getUniformLocation(this.idProgram,"scale"),o=this.gl.getUniformLocation(this.idProgram,"translate");this.gl.uniform2fv(i,n),this.gl.uniform2fv(o,a)}changeAttribute(e,t){const r=c[t],n=this.attributes[r],a=this.idToIndex[e.id()];let i=null;if("position"===t){const t=e.position();i=[t.x,t.y]}else if("fill"===t){const t=e.fill();i=[t.r,t.g,t.b,t.a]}else if("radius"===t)i=[e.r()*this.pixelRatio];else if("strokeWidth"===t)i=[e.strokeWidth()*this.pixelRatio];else{if("strokeColor"!==t)return void console.error("Not supported Node attribute.");{const t=e.strokeColor();i=[t.r,t.g,t.b,t.a]}}n.array.set(i,n.size*a),this.gl.bindBuffer(this.gl.ARRAY_BUFFER,n.buffer),this.gl.bufferSubData(this.gl.ARRAY_BUFFER,n.size*a*n.array.BYTES_PER_ELEMENT,n.array,n.size*a,n.size)}refreshPosition(e){e.forEach((e,t)=>{const r=e.position();this.attributes[u.POSITION].array[2*t]=r.x,this.attributes[u.POSITION].array[2*t+1]=r.y}),this.attributes.forEach(t=>{t.isBuildIn||(this.gl.bindBuffer(this.gl.ARRAY_BUFFER,t.buffer),this.gl.bufferSubData(this.gl.ARRAY_BUFFER,0,t.array,0,t.size*e.length))})}clearData(){this.count=0}addData(e){e.forEach((e,t)=>{const r=e.position();this.attributes[u.POSITION].array[2*(this.count+t)]=r.x,this.attributes[u.POSITION].array[2*(this.count+t)+1]=r.y,this.attributes[u.RADIUS].array[this.count+t]=e.r()*this.pixelRatio;const n=e.fill();this.attributes[u.COLOR].array[4*(this.count+t)]=n.r,this.attributes[u.COLOR].array[4*(this.count+t)+1]=n.g,this.attributes[u.COLOR].array[4*(this.count+t)+2]=n.b,this.attributes[u.COLOR].array[4*(this.count+t)+3]=n.a,this.attributes[u.STROKE_WIDTH].array[this.count+t]=e.strokeWidth()*this.pixelRatio;const a=e.strokeColor();this.attributes[u.STROKE_COLOR].array[4*(this.count+t)]=a.r,this.attributes[u.STROKE_COLOR].array[4*(this.count+t)+1]=a.g,this.attributes[u.STROKE_COLOR].array[4*(this.count+t)+2]=a.b,this.attributes[u.STROKE_COLOR].array[4*(this.count+t)+3]=a.a;const i=s.encodeRenderId(2*(this.count+t));this.idAttributes[l.ID].array[4*(this.count+t)]=i.r,this.idAttributes[l.ID].array[4*(this.count+t)+1]=i.g,this.idAttributes[l.ID].array[4*(this.count+t)+2]=i.b,this.idAttributes[l.ID].array[4*(this.count+t)+3]=i.a,this.renderIdToId[2*(this.count+t)]=e.id(),this.idToIndex[e.id()]=this.count+t}),this.attributes.forEach(t=>{t.isBuildIn||(this.gl.bindBuffer(this.gl.ARRAY_BUFFER,t.buffer),this.gl.bufferSubData(this.gl.ARRAY_BUFFER,t.size*this.count*t.array.BYTES_PER_ELEMENT,t.array,t.size*this.count,t.size*e.length))});const t=this.idAttributes[l.ID];this.gl.bindBuffer(this.gl.ARRAY_BUFFER,t.buffer),this.gl.bufferSubData(this.gl.ARRAY_BUFFER,t.size*this.count*t.array.BYTES_PER_ELEMENT,t.array,t.size*this.count,t.size*e.length),this.count+=e.length}getIdByRenderId(e){return this.renderIdToId[e]}draw(){this.count>0&&(this.gl.enable(this.gl.BLEND),this.gl.blendFunc(this.gl.ONE,this.gl.ONE_MINUS_SRC_ALPHA),this.gl.useProgram(this.program),this.attributes.forEach(e=>{this.gl.enableVertexAttribArray(e.index)}),this.attributes.forEach((e,t)=>{this.gl.bindBuffer(this.gl.ARRAY_BUFFER,e.buffer),this.gl.vertexAttribPointer(e.index,e.size,this.gl.FLOAT,!1,e.size*e.array.BYTES_PER_ELEMENT,0),e.isBuildIn||this.gl.vertexAttribDivisor(e.index,1)})),this.gl.drawArraysInstanced(this.gl.TRIANGLE_STRIP,0,4,this.count),this.gl.blendFunc(this.gl.ONE,this.gl.ZERO),this.gl.useProgram(this.idProgram),this.gl.bindFramebuffer(this.gl.FRAMEBUFFER,this.idTexture),this.idAttributes.forEach(e=>{this.gl.enableVertexAttribArray(e.index)});const e=this.idAttributes[l.ID];this.gl.bindBuffer(this.gl.ARRAY_BUFFER,e.buffer),this.gl.vertexAttribPointer(e.index,e.size,this.gl.FLOAT,!1,e.size*e.array.BYTES_PER_ELEMENT,0),this.gl.vertexAttribDivisor(e.index,1),this.gl.drawArraysInstanced(this.gl.TRIANGLE_STRIP,0,4,this.count),this.gl.bindFramebuffer(this.gl.FRAMEBUFFER,null),this.gl.enable(this.gl.BLEND),this.gl.blendFunc(this.gl.ONE,this.gl.ONE_MINUS_SRC_ALPHA)}}},"./src/renderer/elements/node/vertex.glsl":
/*!************************************************!*\
  !*** ./src/renderer/elements/node/vertex.glsl ***!
  \************************************************/
/*! exports provided: default */function(e,t,r){"use strict";r.r(t),t.default="#version 300 es\r\nprecision highp float;\r\nin vec3 inVertexPos;\r\nin vec2 inPosition;\r\nin float inRadius;\r\nin vec4 inFill;\r\nin float inStrokeWidth;\r\nin vec4 inStrokeColor;\r\n\r\nout vec2 pos;\r\nout float radius;\r\nout vec4 color;\r\nout float strokeWidth;\r\nout vec4 strokeColor;\r\n\r\nuniform mat3 projection;\r\nuniform vec2 scale;\r\nuniform vec2 translate;\r\nuniform vec2 viewport;\r\n\r\nvoid main(void) {\r\n    float size = inRadius + inStrokeWidth / 2.;\r\n    radius = inRadius;\r\n    color = inFill;\r\n    strokeWidth = inStrokeWidth;\r\n    strokeColor = inStrokeColor;\r\n    float vertexSize = size * (2. * sqrt(2.)) * 1.5; // NOTE: x 1.5 to prevent border factor\r\n    pos = scale * inPosition + translate;\r\n    mat3 transform = mat3(\r\n        vertexSize, 0, 0,\r\n        0, vertexSize, 0,\r\n        pos.x, pos.y, 1\r\n    );\r\n\r\n    gl_Position = vec4(projection * transform * inVertexPos, 1.);\r\n}"},"./src/renderer/index.ts":
>>>>>>> dev
/*!*******************************!*\
  !*** ./src/renderer/index.ts ***!
  \*******************************/
/*! no static exports found */function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.Renderer=void 0;const a=r(/*! ./shaders/node-shader */"./src/renderer/shaders/node-shader.ts"),n=r(/*! ./shaders/link-shader */"./src/renderer/shaders/link-shader.ts"),i=r(/*! ./elements/render-node */"./src/renderer/elements/render-node.ts"),o=r(/*! ./elements/render-link */"./src/renderer/elements/render-link.ts"),s=r(/*! ./utils */"./src/renderer/utils.ts");t.Renderer=class{constructor(e){this.modifiedElementsCount=0,this.shouldLazyUpdate=!1;const{canvas:t,width:r,height:s,backgroundColor:u,nodeLimit:l,linkLimit:c,getAllNodes:d,getAllLinks:g}=e;try{this.gl=t.getContext("webgl2")}catch(e){throw new Error("NetV requires WebGL2 supported by your browser")}this.backgroundColor=u,this.width=r,this.height=s,this.getAllNodes=d,this.getAllLinks=g,this.initIdTexture();const m={vertex:a.vertex.connect(),fragment:a.fragment.connect(),idVertex:a.idVertex.connect(),idFragment:a.idFragment.connect()},h={vertex:n.vertex.connect(),fragment:n.fragment.connect(),idVertex:n.idVertex.connect(),idFragment:n.idFragment.connect()};this.nodeManager=new i.RenderNodeManager(this.gl,{width:r,height:s,limit:l},m,this.idTexture),this.linkManager=new o.RenderLinkManager(this.gl,{width:r,height:s,limit:c},h,this.idTexture)}dispose(){const e=this.gl.getParameter(this.gl.MAX_TEXTURE_IMAGE_UNITS);for(let t=0;t<e;++t)this.gl.activeTexture(this.gl.TEXTURE0+t),this.gl.bindTexture(this.gl.TEXTURE_2D,null),this.gl.bindTexture(this.gl.TEXTURE_CUBE_MAP,null);this.gl.bindBuffer(this.gl.ARRAY_BUFFER,null),this.gl.bindBuffer(this.gl.ELEMENT_ARRAY_BUFFER,null),this.gl.bindRenderbuffer(this.gl.RENDERBUFFER,null),this.gl.bindFramebuffer(this.gl.FRAMEBUFFER,null),this.gl.getExtension("WEBGL_lose_context").loseContext()}setBackgroundColor(e){this.backgroundColor=e}clearData(){this.nodeManager.clearData(),this.linkManager.clearData()}addNodes(e){this.nodeManager.addData(e)}addLinks(e){this.linkManager.addData(e)}setTransform(e){this.nodeManager.setTransform(e),this.linkManager.setTransform(e)}draw(){this.shouldLazyUpdate&&(this.nodeManager.refreshPosition(this.getAllNodes()),this.linkManager.refreshPosition(this.getAllLinks()),this.shouldLazyUpdate=!1,this.modifiedElementsCount=0),this.gl.bindFramebuffer(this.gl.FRAMEBUFFER,this.idTexture),this.gl.clearColor(1,1,1,1),this.gl.clear(this.gl.COLOR_BUFFER_BIT),this.gl.bindFramebuffer(this.gl.FRAMEBUFFER,null),this.gl.clearColor(this.backgroundColor.r,this.backgroundColor.g,this.backgroundColor.b,this.backgroundColor.a),this.gl.clear(this.gl.COLOR_BUFFER_BIT),this.linkManager.draw(),this.nodeManager.draw()}getIdByPosition(e){const t=this.readIdTexture(e);if(t>=0){if(t%2==0){return this.nodeManager.getElementByRenderId(t).id()}{const e=this.linkManager.getElementByRenderId(t).sourceTarget();return[e.source.id(),e.target.id()]}}}readIdTexture(e){const t=window.devicePixelRatio||1;this.gl.bindFramebuffer(this.gl.READ_FRAMEBUFFER,this.idTexture);const r=new Uint8Array([255,255,255,255]);this.gl.readPixels(e.x*t,e.y*t,1,1,this.gl.RGBA,this.gl.UNSIGNED_BYTE,r);return s.decodeRenderId(r)}increaseModifiedElementsCountBy(e){this.modifiedElementsCount+=e,this.modifiedElementsCount>100&&(this.shouldLazyUpdate=!0)}initIdTexture(){const e=this.gl,t=window.devicePixelRatio||1,r=this.width*t,a=this.height*t,n=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,n);const i=e.createTexture();e.bindTexture(e.TEXTURE_2D,i),e.texImage2D(e.TEXTURE_2D,0,e.RGBA,r,a,0,e.RGBA,e.UNSIGNED_BYTE,null),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MIN_FILTER,e.LINEAR),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MAG_FILTER,e.LINEAR),e.bindTexture(e.TEXTURE_2D,null),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,i,0),e.drawBuffers([0].map(t=>t+e.COLOR_ATTACHMENT0));const o=e.createRenderbuffer();if(e.bindRenderbuffer(e.RENDERBUFFER,o),e.clearColor(1,1,1,1),e.renderbufferStorage(e.RENDERBUFFER,e.DEPTH24_STENCIL8,r,a),e.bindRenderbuffer(e.RENDERBUFFER,null),e.framebufferRenderbuffer(e.FRAMEBUFFER,e.DEPTH_STENCIL_ATTACHMENT,e.RENDERBUFFER,o),e.checkFramebufferStatus(e.FRAMEBUFFER)!==e.FRAMEBUFFER_COMPLETE)throw new Error("Framebuffer generate failed");e.bindFramebuffer(e.FRAMEBUFFER,null),this.idTexture=n}}},"./src/renderer/shaders/link-shader.ts":
/*!*********************************************!*\
  !*** ./src/renderer/shaders/link-shader.ts ***!
  \*********************************************/
/*! no static exports found */function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.idFragment=t.fragment=t.idVertex=t.vertex=void 0;const a=r(/*! ../utils */"./src/renderer/utils.ts"),n=new a.Shader;t.vertex=n,n.inputs={inVertexPos:"vec3",in_shape:"float",in_source:"vec2",in_target:"vec2",in_curveness:"float",in_strokeWidth:"float",in_strokeColor:"vec4"},n.outputs={shape:"float",strokeColor:"vec4",strokeWidth:"float",cpA:"vec2",cpB:"vec2",cpC:"vec2",curveness:"float"},n.uniforms={projection:"mat3",scale:"vec2",translate:"vec2"},n.main=["void main(void) {","    strokeColor = in_strokeColor;","    strokeWidth = in_strokeWidth;","    shape = in_shape;","    vec2 source = in_source * scale + translate;","    vec2 target = in_target * scale + translate;","    vec2 delta = target - source;","    vec2 center = 0.5 * (source + target);","    float len = length(delta);","    float phi = atan(delta.y / delta.x);","    float containerWidth = in_strokeWidth;","    if (in_shape == 1.) {","       containerWidth = 2. * (in_curveness * len + in_strokeWidth); // TODO: can optimize to half","    }","    vec2 normal = normalize(vec2(delta.y, -delta.x)); // TODO: link's normal, need control side","    cpA = source;","    cpB = center + normal * len * in_curveness;","    cpC = target;","","    mat3 line_scale = mat3(","        len, 0, 0,","        0, containerWidth, 0,","        0, 0, 1","    );","    mat3 line_rotate = mat3(","        cos(phi), sin(phi), 0,","        -sin(phi), cos(phi), 0,","        0, 0, 1","    );","    mat3 line_translate = mat3(","        1, 0, 0,","        0, 1, 0,","        center.x, center.y, 1","    );","    ","    mat3 transform = line_translate * line_rotate * line_scale;","","    gl_Position = vec4(projection * transform * inVertexPos, 1.);","}"];const i=n.copy();t.idVertex=i,i.inputs.in_id="vec4",i.outputs.id="vec4",i.main.splice(1,0,"id = in_id;");const o=new a.Shader;t.fragment=o,o.inputs=Object.assign({},n.outputs),o.outputs={fragmentColor:"vec4"},o.uniforms={viewport:"vec2",pixelRatio:"float"},o.methods=[["// reference paper: http://hhoppe.com/ravg.pdf","// distance vector to origin(0, 0)","float det(vec2 a, vec2 b) { return a.x * b.y - b.x * a.y; }","","vec2 get_distance_vector(vec2 b0, vec2 b1, vec2 b2) {","  float a = det(b0, b2), b = 2.0 * det(b1, b0), d = 2.0 * det(b2, b1);","  float f = b * d - a * a;","  vec2 d21 = b2 - b1, d10 = b1 - b0, d20 = b2 - b0;","  vec2 gf = 2.0 * (b * d21 + d * d10 + a * d20);","  gf = vec2(gf.y, -gf.x);","  vec2 pp = -f * gf / dot(gf, gf);","  vec2 d0p = b0 - pp;","  float ap = det(d0p, d20), bp = 2.0 * det(d10, d0p);","  float t = clamp((ap + bp) / (2.0 * a + b + d), 0.0, 1.0);","  return mix(mix(b0, b1, t), mix(b1, b2, t), t);","}"],["float distToQuadraticBezierCurve(vec2 p, vec2 b0, vec2 b1, vec2 b2) {","  return length(get_distance_vector(b0 - p, b1 - p, b2 - p));","}"]],o.main=["void main(void) {","  if (shape == 0.) {","    // line","    fragmentColor = vec4(strokeColor.rgb * strokeColor.a, strokeColor.a);","  } else if (shape == 1.) {","    // curve","    vec2 pos = gl_FragCoord.xy / pixelRatio;","    vec2 cpAFlipped = vec2(cpA.x, viewport.y - cpA.y);","    vec2 cpBFlipped = vec2(cpB.x, viewport.y - cpB.y);","    vec2 cpCFlipped = vec2(cpC.x, viewport.y - cpC.y);","    float dist = distToQuadraticBezierCurve(pos, cpAFlipped, cpBFlipped, cpCFlipped);","    float epsilon = fwidth(dist);","    if (dist < strokeWidth / 2. + epsilon) {","      float inCurve = 1. - smoothstep(strokeWidth / 2. - epsilon, strokeWidth / 2. + epsilon, dist);","      fragmentColor = inCurve * vec4(strokeColor.rgb * strokeColor.a, strokeColor.a);","    } else {","      discard;","    }","  }","}"];const s=o.copy();t.idFragment=s,s.inputs.id="vec4",s.main[3]="fragmentColor = id;",s.main[14]="fragmentColor = id;"},"./src/renderer/shaders/node-shader.ts":
/*!*********************************************!*\
  !*** ./src/renderer/shaders/node-shader.ts ***!
  \*********************************************/
/*! no static exports found */function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.idFragment=t.fragment=t.idVertex=t.vertex=void 0;const a=r(/*! ../utils */"./src/renderer/utils.ts"),n=new a.Shader;t.vertex=n,n.inputs={inVertexPos:"vec3",in_shape:"float",in_position:"vec2",in_offset:"vec2",in_width:"float",in_height:"float",in_innerSize:"vec2",in_rotate:"float",in_r:"float",in_vertexAlpha:"vec2",in_vertexBeta:"vec2",in_vertexGamma:"vec2",in_fill:"vec4",in_strokeWidth:"float",in_strokeColor:"vec4"},n.outputs={position:"vec2",shape:"float",width:"float",height:"float",innerSize:"vec2",rotate:"float",r:"float",vertexAlpha:"vec2",vertexBeta:"vec2",vertexGamma:"vec2",fill:"vec4",strokeWidth:"float",strokeColor:"vec4"},n.uniforms={projection:"mat3",scale:"vec2",translate:"vec2",viewport:"vec2",pixelRatio:"float"},n.methods=[["vec2 calculate_inner_point (vec2 p1, vec2 p2, vec2 p3) {","   float inner_p1 = sqrt(dot(p1, p1));","   float inner_p2 = sqrt(dot(p2, p2));","   float inner_p3 = sqrt(dot(p3, p3));","   vec2 inner = (p1 * inner_p1 + p2 * inner_p2 + p3 * inner_p3) / (inner_p1 + inner_p2 + inner_p3);","   return inner;","}"],["float calculate_stroke_scale (vec2 p1, vec2 p2, vec2 p3) {","   vec2 inner = calculate_inner_point(p1, p2, p3);","   float a = distance(p1, inner);","   float b = distance(p2, inner);","   float c = distance(p1, p2);","   float cos_alpha = (pow(b, 2.0) + pow(c, 2.0) - pow(a, 2.0)) / (2.0 * b * c);","   float sin_alpha = sqrt(1.0 - pow(cos_alpha, 2.0));","   float normal_length = sin_alpha * a;","   float stroke_scale = 1.0 + strokeWidth / 2.0 * pixelRatio / normal_length;","   return stroke_scale;","}"]],n.main=["void main(void) {","   r = in_r;","   width = in_width;","   height = in_height;","   innerSize = in_innerSize;","   shape = in_shape;","   fill = in_fill;","   strokeColor = in_strokeColor;","   strokeWidth = in_strokeWidth;","   rotate = in_rotate;","   position = scale * (in_position + in_offset) + translate;","   vertexAlpha = in_vertexAlpha * pixelRatio;","   vertexBeta = in_vertexBeta * pixelRatio;","   vertexGamma = in_vertexGamma * pixelRatio;","   mat3 scale_mat = mat3(","       1, 0, 0,","       0, 1, 0,","       0, 0, 1","   );","   mat3 rotate_mat = mat3(","       1, 0, 0,","       0, 1, 0,","       0, 0, 1","   );","   mat3 translate_mat = mat3(","       1, 0, 0,","       0, 1, 0,","       position.x, position.y, 1","   );","   if (shape == 0.0) {","       float size = (r + strokeWidth / 2.) * 2. * 1.5;","       scale_mat = mat3(","           size, 0, 0,","           0, size, 0,","           0, 0, 1","           );","   } else if (shape == 1.0 || shape == 3.0) {","       scale_mat = mat3(","           width + strokeWidth, 0, 0,","           0, height + strokeWidth, 0,","           0, 0, 1","       );","       rotate_mat = mat3(","           cos(rotate), sin(rotate), 0,","           -sin(rotate), cos(rotate), 0,","           0, 0, 1","       );","   } else if (shape == 2.0) {","       vec2 inner = calculate_inner_point(vertexAlpha, vertexBeta, vertexGamma);","       float stroke_scale = calculate_stroke_scale(vertexAlpha, vertexBeta, vertexGamma);","       vec2 outer_vertexAlpha = (vertexAlpha - inner) * stroke_scale + inner;","       vec2 outer_vertexBeta = (vertexBeta - inner) * stroke_scale + inner;","       vec2 outer_vertexGamma = (vertexGamma - inner) * stroke_scale + inner;","       width = 1.5 * (max(max(outer_vertexAlpha.x, outer_vertexBeta.x), outer_vertexGamma.x) - min(min(outer_vertexAlpha.x, outer_vertexBeta.x), outer_vertexGamma.x));","       height = 1.5 * (max(max(outer_vertexAlpha.y, outer_vertexBeta.y), outer_vertexGamma.y)- min(min(outer_vertexAlpha.y, outer_vertexBeta.y), outer_vertexGamma.y));","       scale_mat = mat3(","           width, 0, 0,","           0, height, 0,","           0, 0, 1","       );","   }","   mat3 transform = translate_mat * rotate_mat * scale_mat;","   gl_Position = vec4(projection * transform * inVertexPos, 1.);","}"];const i=n.copy();t.idVertex=i,i.inputs.in_id="vec4",i.outputs.id="vec4",i.main.splice(1,0,"id = in_id;");const o=new a.Shader;t.fragment=o,o.inputs=Object.assign({},n.outputs),o.outputs={fragmentColor:"vec4"},o.uniforms={viewport:"vec2",pixelRatio:"float"},o.methods=[["vec2 calculate_inner_point (vec2 p1, vec2 p2, vec2 p3) {","    float inner_p1 = sqrt(dot(p1, p1));","    float inner_p2 = sqrt(dot(p2, p2));","    float inner_p3 = sqrt(dot(p3, p3));","    vec2 inner = (p1 * inner_p1 + p2 * inner_p2 + p3 * inner_p3) / (inner_p1 + inner_p2 + inner_p3);","    return inner;","}"],["float calculate_stroke_scale (vec2 p1, vec2 p2, vec2 p3) {","    vec2 inner = calculate_inner_point(p1, p2, p3);","    float a = distance(p1, inner);","    float b = distance(p2, inner);","    float c = distance(p1, p2);","    float cos_alpha = (pow(b, 2.0) + pow(c, 2.0) - pow(a, 2.0)) / (2.0 * b * c);","    float sin_alpha = sqrt(1.0 - pow(cos_alpha, 2.0));","    float normal_length = sin_alpha * a;","    float stroke_scale = 1.0 + strokeWidth / 2.0 * pixelRatio / normal_length;","    return stroke_scale;","}"],["float sign (vec2 p1, vec2 p2, vec2 p3) {","    return (p1.x - p3.x) * (p2.y - p3.y) - (p2.x - p3.x) * (p1.y - p3.y);","}"],["float inTriangle() {","    float stroke_scale = calculate_stroke_scale(vertexAlpha, vertexBeta, vertexGamma);","    vec2 flip_pos = vec2(position.x, viewport.y - position.y);","    vec2 flip_vertexAlpha = vec2(vertexAlpha.x, - vertexAlpha.y) / stroke_scale;","    vec2 flip_vertexBeta = vec2(vertexBeta.x, - vertexBeta.y) / stroke_scale;","    vec2 flip_vertexGamma = vec2(vertexGamma.x, - vertexGamma.y) / stroke_scale;","    float d1 = sign(gl_FragCoord.xy / pixelRatio - flip_pos, flip_vertexAlpha, flip_vertexBeta);","    float d2 = sign(gl_FragCoord.xy / pixelRatio - flip_pos, flip_vertexBeta, flip_vertexGamma);","    float d3 = sign(gl_FragCoord.xy / pixelRatio - flip_pos, flip_vertexGamma, flip_vertexAlpha);","    bool has_neg = (d1 <= 0.0) || (d2 <= 0.0) || (d3 <= 0.0);","    bool has_pos = (d1 >= 0.0) || (d2 >= 0.0) || (d3 >= 0.0);","    if (!(has_neg && has_pos)) {","        return 1.0;","    } else {","        return 0.0;","    }","}"],["float inTriangleBorder() {","    float stroke_scale = calculate_stroke_scale(vertexAlpha, vertexBeta, vertexGamma);","    vec2 flip_pos = vec2(position.x, viewport.y - position.y);","    vec2 flip_vertexAlpha = stroke_scale * vec2(vertexAlpha.x, - vertexAlpha.y);","    vec2 flip_vertexBeta = stroke_scale * vec2(vertexBeta.x, - vertexBeta.y);","    vec2 flip_vertexGamma = stroke_scale * vec2(vertexGamma.x, - vertexGamma.y);","","    float d1 = sign(gl_FragCoord.xy / pixelRatio - flip_pos, flip_vertexAlpha, flip_vertexBeta);","    float d2 = sign(gl_FragCoord.xy / pixelRatio - flip_pos, flip_vertexBeta, flip_vertexGamma);","    float d3 = sign(gl_FragCoord.xy / pixelRatio - flip_pos, flip_vertexGamma, flip_vertexAlpha);","","    bool has_neg = (d1 <= 0.0) || (d2 <= 0.0) || (d3 <= 0.0);","    bool has_pos = (d1 >= 0.0) || (d2 >= 0.0) || (d3 >= 0.0);","","    bool inTriangle = inTriangle() == 1.0;","    bool inTriangleBorder = !(has_neg && has_pos);","","    if (!inTriangle && inTriangleBorder) {","        return 1.0;","    } else {","        return 0.0;","    }","}"],["float inRect() {","    vec2 flip_pos = position;","    flip_pos.y = viewport.y - position.y;","    mat2 rotate_mat = mat2(","        cos(rotate), sin(rotate),","        -sin(rotate), cos(rotate)","    );","    vec2 rotate_related_FragCoord = rotate_mat * (gl_FragCoord.xy / pixelRatio - flip_pos);","    float x_in = step(rotate_related_FragCoord.x, width / 2.0 - strokeWidth / 2.0) * (1.0 - step(rotate_related_FragCoord.x, - width / 2.0 + strokeWidth / 2.0));","    float y_in = step(rotate_related_FragCoord.y, height / 2.0 - strokeWidth / 2.0) * (1.0 - step(rotate_related_FragCoord.y, - height / 2.0 + strokeWidth / 2.0));","    return x_in * y_in;","}"],["float inRectBorder() {","    vec2 flip_pos = position;","    flip_pos.y = viewport.y - position.y;","    mat2 rotate_mat = mat2(","        cos(rotate), sin(rotate),","        -sin(rotate), cos(rotate)","    );","    vec2 rotate_related_FragCoord = rotate_mat * (gl_FragCoord.xy / pixelRatio - flip_pos);","    float x_in_outer = step(rotate_related_FragCoord.x, width / 2.0 + strokeWidth / 2.0) * (1.0 - step(rotate_related_FragCoord.x, - width / 2.0 - strokeWidth / 2.0));","    float y_in_outer = step(rotate_related_FragCoord.y, height / 2.0 + strokeWidth / 2.0) * (1.0 - step(rotate_related_FragCoord.y, - height / 2.0 - strokeWidth / 2.0));","    float x_in_inner = step(rotate_related_FragCoord.x, width / 2.0 - strokeWidth / 2.0) * (1.0 - step(rotate_related_FragCoord.x, - width / 2.0 + strokeWidth / 2.0));","    float y_in_inner = step(rotate_related_FragCoord.y, height / 2.0 - strokeWidth / 2.0) * (1.0 - step(rotate_related_FragCoord.y, - height / 2.0 + strokeWidth / 2.0));","","    return x_in_outer * y_in_outer * (1.0 - x_in_inner * y_in_inner);","}"],["float inCross() {","    vec2 flip_pos = position;","    flip_pos.y = viewport.y - position.y;","    mat2 rotate_mat = mat2(","        cos(rotate), sin(rotate),","        -sin(rotate), cos(rotate)","    );","    vec2 rotate_related_FragCoord = rotate_mat * (gl_FragCoord.xy / pixelRatio - flip_pos);","    float innerWidth = innerSize.x;","    float innerHeight = innerSize.y;","    float x_in1 = step(rotate_related_FragCoord.x, width / 2.0 - strokeWidth / 2.0) * (1.0 - step(rotate_related_FragCoord.x, - width / 2.0 + strokeWidth / 2.0));","    float y_in1 = step(rotate_related_FragCoord.y, innerHeight / 2.0 - strokeWidth / 2.0) * (1.0 - step(rotate_related_FragCoord.y, - innerHeight / 2.0 + strokeWidth / 2.0));","    float x_in2 = step(rotate_related_FragCoord.x, innerWidth / 2.0 - strokeWidth / 2.0) * (1.0 - step(rotate_related_FragCoord.x, - innerWidth / 2.0 + strokeWidth / 2.0));","    float y_in2 = step(rotate_related_FragCoord.y, height / 2.0 - strokeWidth / 2.0) * (1.0 - step(rotate_related_FragCoord.y, - height / 2.0 + strokeWidth / 2.0));","    return min(1., x_in1 * y_in1 + x_in2 * y_in2);","}"],["float inCrossBorder() {","    vec2 flip_pos = position;","    flip_pos.y = viewport.y - position.y;","    mat2 rotate_mat = mat2(","        cos(rotate), sin(rotate),","        -sin(rotate), cos(rotate)","    );","    vec2 rotate_related_FragCoord = rotate_mat * (gl_FragCoord.xy / pixelRatio - flip_pos);","    float innerWidth = innerSize.x;","    float innerHeight = innerSize.y;","    float x_in1 = step(rotate_related_FragCoord.x, width / 2.0 - strokeWidth / 2.0) * (1.0 - step(rotate_related_FragCoord.x, - width / 2.0 + strokeWidth / 2.0));","    float y_in1 = step(rotate_related_FragCoord.y, innerHeight / 2.0 - strokeWidth / 2.0) * (1.0 - step(rotate_related_FragCoord.y, - innerHeight / 2.0 + strokeWidth / 2.0));","    float x_in2 = step(rotate_related_FragCoord.x, innerWidth / 2.0 - strokeWidth / 2.0) * (1.0 - step(rotate_related_FragCoord.x, - innerWidth / 2.0 + strokeWidth / 2.0));","    float y_in2 = step(rotate_related_FragCoord.y, height / 2.0 - strokeWidth / 2.0) * (1.0 - step(rotate_related_FragCoord.y, - height / 2.0 + strokeWidth / 2.0));","    float outCross = 1. - min(1., x_in1 * y_in1 + x_in2 * y_in2);","","    float x_out1 = step(rotate_related_FragCoord.x, width / 2.0 + strokeWidth / 2.0) * (1.0 - step(rotate_related_FragCoord.x, - width / 2.0 - strokeWidth / 2.0));","    float y_out1 = step(rotate_related_FragCoord.y, innerHeight / 2.0 + strokeWidth / 2.0) * (1.0 - step(rotate_related_FragCoord.y, - innerHeight / 2.0 - strokeWidth / 2.0));","    float x_out2 = step(rotate_related_FragCoord.x, innerWidth / 2.0 + strokeWidth / 2.0) * (1.0 - step(rotate_related_FragCoord.x, - innerWidth / 2.0 - strokeWidth / 2.0));","    float y_out2 = step(rotate_related_FragCoord.y, height / 2.0 + strokeWidth / 2.0) * (1.0 - step(rotate_related_FragCoord.y, - height / 2.0 - strokeWidth / 2.0));","    float inCrossBorder = min(1., x_out1 * y_out1 + x_out2 * y_out2);","    return inCrossBorder * outCross;","}"],["float inCircle() {","    vec2 flip_pos = position;","    flip_pos.y = viewport.y - position.y;","    float dist = distance(gl_FragCoord.xy / pixelRatio, flip_pos);","    return 1. - smoothstep((r - strokeWidth / 2.) - 2. * fwidth(dist), (r - strokeWidth / 2.), dist);","}"],["float inCircleBorder() {","    if (strokeWidth == 0.) {","      return 0.;","    }","    vec2 flip_pos = position;","    flip_pos.y = viewport.y - position.y;","","    float dist = distance(gl_FragCoord.xy / pixelRatio, flip_pos);","    float drawOuter = 1. - smoothstep((r + strokeWidth / 2.) - fwidth(dist), (r + strokeWidth / 2.), dist);","    float drawInner = 1. - smoothstep((r - strokeWidth / 2.) - fwidth(dist), (r - strokeWidth / 2.), dist);","    return drawOuter * (1. - drawInner);","}"]],o.main=["void main(void) {","    if (shape == 0.0) {","        // circle shape","        // border check, using 0.5(center of smoothstep)","        if (inCircle() < 0.0001 && (strokeWidth < 0.8 || inCircleBorder() < 0.5)) {","            discard;","        }","        fragmentColor = inCircleBorder() * vec4(strokeColor.rgb * strokeColor.a, strokeColor.a) + inCircle() * vec4(fill.rgb * fill.a, fill.a);","    } else if (shape == 1.0) {","        // rect shape","        fragmentColor = inRectBorder() * vec4(strokeColor.rgb * strokeColor.a, strokeColor.a) + inRect() * vec4(fill.rgb * fill.a, fill.a);","    } else if (shape == 2.0) {","        // triangle shape","        fragmentColor = inTriangleBorder() * vec4(strokeColor.rgb * strokeColor.a, strokeColor.a) + inTriangle() * vec4(fill.rgb * fill.a, fill.a);","    } else if (shape == 3.0) {","        // cross shape","        fragmentColor = inCrossBorder() * vec4(strokeColor.rgb * strokeColor.a, strokeColor.a) + inCross() * vec4(fill.rgb * fill.a, fill.a);","    }","}"];const s=o.copy();t.idFragment=s,s.inputs.id="vec4",s.main.splice(7,1),s.main.splice(9,1),s.main.splice(11,1),s.main.splice(13,1),s.main.splice(-1,0,"fragmentColor = id;")},"./src/renderer/utils.ts":
/*!*******************************!*\
  !*** ./src/renderer/utils.ts ***!
  \*******************************/
/*! no static exports found */function(e,t,r){"use strict";function a(e,t,r){const a=e.createShader(r);if(e.shaderSource(a,t),e.compileShader(a),!e.getShaderParameter(a,e.COMPILE_STATUS))throw new Error("Shader compile failed: "+e.getShaderInfoLog(a));return a}Object.defineProperty(t,"__esModule",{value:!0}),t.Shader=t.decodeRenderId=t.encodeRenderId=t.extractAttributesFromShader=t.createArrayBuffer=t.createProgram=t.compileShader=void 0,t.compileShader=a,t.createProgram=function(e,t,r,n){const i=a(e,t,e.VERTEX_SHADER),o=a(e,r,e.FRAGMENT_SHADER),s=e.createProgram();if(n.forEach(t=>{e.bindAttribLocation(s,t.location,t.name)}),e.attachShader(s,i),e.attachShader(s,o),e.linkProgram(s),!e.getProgramParameter(s,e.LINK_STATUS))throw new Error("Could not link shaders: "+e.getProgramInfoLog(s));return s},t.createArrayBuffer=function(e,t){const r=e.createBuffer();return e.bindBuffer(e.ARRAY_BUFFER,r),e.bufferData(e.ARRAY_BUFFER,t,e.DYNAMIC_DRAW),r},t.extractAttributesFromShader=function(e){const t=e.match(/in\s.*;/g),r=new Map;return t.forEach((e,t)=>{const a=e.split(" ")[2].slice(0,-1),n=e.split(" ")[1];let i=1;"vec"===n.slice(0,3)&&(i=Number(n.slice(-1)));let o=!1;"inVertexPos"===a&&(o=!0),r.set(a,{name:a,size:i,location:t,isBuildIn:o,extractAttributeValueFrom:()=>[]})}),r},t.encodeRenderId=function(e){return{r:(255&e)/255,g:(e>>8&255)/255,b:(e>>16&255)/255,a:(e>>24&255)/255}},t.decodeRenderId=function(e){return e[0]|e[1]<<8|e[2]<<16|e[3]<<24};class n{constructor(){this.inputs={},this.outputs={},this.uniforms={},this.methods=[[]],this.main=[],this.header="#version 300 es\nprecision highp float;\n"}copy(){const e=new n;return e.inputs=Object.assign({},this.inputs),e.outputs=Object.assign({},this.outputs),e.uniforms=Object.assign({},this.uniforms),e.main=this.main.map(e=>e),e.methods=this.methods.map(e=>e.map(e=>e)),e}connect(){const e=[{prefix:"in",variables:this.inputs},{prefix:"out",variables:this.outputs},{prefix:"uniform",variables:this.uniforms}].map(e=>Object.entries(e.variables).map(([t,r])=>`${e.prefix} ${r} ${t};\n`).join("")).join("");return this.header+e+this.methods.map(e=>e.join("\n")).join("\n")+"\n"+this.main.join("\n")}}t.Shader=n},"./src/utils/const.js":
/*!****************************!*\
  !*** ./src/utils/const.js ***!
  \****************************/
/*! exports provided: EMPTY_FUNCTION */function(e,t,r){"use strict";r.r(t),r.d(t,"EMPTY_FUNCTION",(function(){return a}));const a=()=>{}},"./src/utils/is.ts":
/*!*************************!*\
  !*** ./src/utils/is.ts ***!
  \*************************/
/*! no static exports found */function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.isValidId=void 0,t.isValidId=function(e){return void 0!==e&&"string"==typeof e&&e.length>0}},"./src/utils/map2.ts":
/*!***************************!*\
  !*** ./src/utils/map2.ts ***!
  \***************************/
/*! no static exports found */function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const a=String.fromCharCode(7),n=e=>e instanceof Array&&2===e.length&&e.every(e=>null!=e);t.default=class{constructor(e){this.map=new Map,e instanceof Array&&e.forEach(e=>{let[t,r]=e;this.set(t,r)})}get size(){return this.map.size}delete(e){if(n(e)){const t=e.join(a),r=e[1]+a+e[0];let n=this.map;n.delete(t),n.delete(r)}}set(e,t){if(n(e)){const r=e.join(a),n=e[1]+a+e[0];let i=this.map;i.has(n)?i.set(n,t):i.set(r,t)}return this}get(e){if(n(e)){const t=e.join(a),r=e[1]+a+e[0];return this.map.get(t)||this.map.get(r)}}has(e){if(n(e)){const t=e.join(a),r=e[1]+a+e[0];return this.map.has(t)||this.map.has(r)}return!1}forEach(e){this.map.forEach((t,r)=>{let n=r.split(a);e(t,n,this)})}entries(){return[...this.map.entries()].map(e=>[e[0].split(a),e[1]])}keys(){return[...this.map.keys()].map(e=>e.split(a))}values(){return[...this.map.values()]}}},"./src/utils/utils.ts":
/*!****************************!*\
  !*** ./src/utils/utils.ts ***!
  \****************************/
<<<<<<< HEAD
/*! no static exports found */function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.override=t.transformGraphPosition=void 0,t.transformGraphPosition=function(e,t,r,a){const n=JSON.parse(JSON.stringify(e)),i=n.nodes.map(e=>e.x),o=n.nodes.map(e=>e.y),s=Math.min(...i),u=Math.max(...i),l=Math.min(...o),c=Math.max(...o),d=(s+u)/2,g=(l+c)/2;return n.nodes.forEach(e=>{e.x=(e.x-d)/(u-s)*t+r,e.y=(e.y-g)/(c-l)*t+a}),n},t.override=function e(t,r){if(t!==Object(t))return r!==Object(r)?r:JSON.parse(JSON.stringify(r));const a=JSON.parse(JSON.stringify(t));for(const t in r)t in a&&r[t]===Object(r[t])?a[t]=e(a[t],r[t]):a[t]=r[t];return a}}})}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
=======
/*! no static exports found */function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.transformGraphPosition=void 0,t.transformGraphPosition=function(e,t,r,n){const a=JSON.parse(JSON.stringify(e)),i=a.nodes.map(e=>e.x),o=a.nodes.map(e=>e.y),s=Math.min(...i),u=Math.max(...i),l=Math.min(...o),c=Math.max(...o),g=(s+u)/2,d=(l+c)/2;return a.nodes.forEach(e=>{e.x=(e.x-g)/(u-s)*t+r,e.y=(e.y-d)/(c-l)*t+n}),a}}})}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
>>>>>>> dev
