(window.webpackJsonp=window.webpackJsonp||[]).push([[26],{847:function(t,a,s){"use strict";s.r(a);var r=s(113),e=Object(r.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"接口"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#接口"}},[t._v("#")]),t._v(" 接口")]),t._v(" "),s("h2",{attrs:{id:"initializationconfigurations"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#initializationconfigurations"}},[t._v("#")]),t._v(" "),s("code",[t._v("InitializationConfigurations")])]),t._v(" "),s("div",{staticClass:"language-typescript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-typescript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("interface")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("InitializationConfigurations")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    container"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" HTMLDivElement\n    node"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        r"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("number")]),t._v("\n        fill"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Color\n        strokeWidth"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("number")]),t._v("\n        strokeColor"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Color\n        "),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("clickCallback")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("node"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Node"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    link"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        strokeWidth"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("number")]),t._v("\n        strokeColor"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Color\n        "),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("clickCallback")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("link"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Link"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    width"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("number")]),t._v("\n    height"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("number")]),t._v("\n    backgroundColor"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Color\n    nodeLimit"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("number")]),t._v("\n    linkLimit"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("number")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[s("RouterLink",{attrs:{to:"/zh/API/interfaces.html#InitializationConfigurations"}},[t._v("initializationConfigurations")]),t._v(" 是 "),s("code",[t._v("NetV")]),t._v(" 初始化配置的接口.")],1),t._v(" "),s("ul",[s("li",[s("code",[t._v("container")]),t._v(" 用来配置可视化的容器, 它是一个 "),s("code",[t._v("<div>")]),t._v(" 元素. 可视化和交互都需要容器的参与. 它说 "),s("strong",[t._v("必须的")]),t._v(".")]),t._v(" "),s("li",[s("code",[t._v("node")]),t._v(" 用来配置节点的默认属性和表现. 在"),s("em",[t._v("NetV.js")]),t._v("中, 节点被可视化为一个圆.\n"),s("ul",[s("li",[s("code",[t._v("r")]),t._v(" 是一个数字, 用来配置节点的半径. 默认值为 "),s("code",[t._v("5")]),t._v(".")]),t._v(" "),s("li",[s("code",[t._v("fill")]),t._v(" 是一个 "),s("RouterLink",{attrs:{to:"/zh/API/interfaces.html#color"}},[t._v("Color")]),t._v(" 对象, 用来配置节点的颜色. 默认值为 "),s("code",[t._v("{r: 0.2, g: 0.6, b: 0.2, a: 0.8}")]),t._v(".")],1),t._v(" "),s("li",[s("code",[t._v("strokeWidth")]),t._v(" 是一个数字, 用来配置节点的边框宽度. 默认值为 "),s("code",[t._v("2")]),t._v(".")]),t._v(" "),s("li",[s("code",[t._v("strokeColor")]),t._v(" 是一个 "),s("RouterLink",{attrs:{to:"/zh/API/interfaces.html#color"}},[t._v("Color")]),t._v(" 对象, 用来配置节点的边框颜色. 默认值为 "),s("code",[t._v("{ r: 0.9, g: 0.9, b: 0.9, a: 0.6 }")]),t._v(".")],1),t._v(" "),s("li",[s("code",[t._v("clickCallback")]),t._v(" 是一个函数. 当节点发生点击事件的时候可以触发回调函数. 默认为一个空的函数: "),s("code",[t._v("(node: Node)=>{}")]),t._v(".")])])]),t._v(" "),s("li",[s("code",[t._v("link")]),t._v(" 用来配置边的默认属性和表现. 在"),s("em",[t._v("NetV.js")]),t._v("中, 边被可视化为一条直线.\n"),s("ul",[s("li",[s("code",[t._v("strokeWidth")]),t._v(" 是一个数字, 用来配置边的宽度. 默认值为 "),s("code",[t._v("2")]),t._v(".")]),t._v(" "),s("li",[s("code",[t._v("strokeColor")]),t._v(" 是一个 "),s("RouterLink",{attrs:{to:"/zh/API/interfaces.html#color"}},[t._v("Color")]),t._v(" 对象, 用来配置边的颜色. 默认值为 "),s("code",[t._v("{ r: 0.4, g: 0.6, b: 0.8, a: 0.5 }")]),t._v(".")],1),t._v(" "),s("li",[s("code",[t._v("clickCallback")]),t._v(" 是一个函数. 当边发生点击事件的时候可以触发回调函数. 默认为一个空的函数 n: "),s("code",[t._v("(link: Link)=>{}")]),t._v(".")])])]),t._v(" "),s("li",[s("code",[t._v("width")]),t._v(" 是一个数字, 用来配置画布的宽度. 默认值为 "),s("code",[t._v("800")]),t._v(".")]),t._v(" "),s("li",[s("code",[t._v("height")]),t._v(" 是一个数字, 用来配置画布的高度. 默认值为"),s("code",[t._v("600")]),t._v(".")]),t._v(" "),s("li",[s("code",[t._v("backgroundColor")]),t._v(" 是一个 "),s("RouterLink",{attrs:{to:"/zh/API/interfaces.html#color"}},[t._v("Color")]),t._v(" 对象. 用来配置画布的背景颜色. 默认值为 "),s("code",[t._v("{ r: 1, g: 1, b: 1, a: 1 }")]),t._v(" (白色).")],1),t._v(" "),s("li",[s("code",[t._v("nodeLimit")]),t._v(" 是一个数字. 它用于配置在 WebGL 中为渲染节点分配固定空间. 建议将其设置为需要加载的节点数的上限. 默认值为 100. "),s("strong",[t._v("请注意")]),t._v(", 如果要加载 100 个以上的节点, 则需要将其重置.")]),t._v(" "),s("li",[s("code",[t._v("linkLimit")]),t._v(" 是一个数字. 它用于配置在 WebGL 中为渲染边分配固定空间. 建议将其设置为需要加载的边数的上限. 默认值为 1000. "),s("strong",[t._v("请注意")]),t._v(", 如果要加载 1000 个以上的边, 则需要将其重置.")])]),t._v(" "),s("h2",{attrs:{id:"color"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#color"}},[t._v("#")]),t._v(" "),s("code",[t._v("Color")])]),t._v(" "),s("div",{staticClass:"language-typescript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-typescript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("interface")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Color")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    r"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("number")]),t._v("\n    g"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("number")]),t._v("\n    b"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("number")]),t._v("\n    a"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("number")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("ul",[s("li",[s("code",[t._v("r")]),t._v(", "),s("code",[t._v("g")]),t._v(", "),s("code",[t._v("b")]),t._v(", 和 "),s("code",[t._v("a")]),t._v(" 是四个 RGBA 颜色模型的通道, 它们的范围是 "),s("code",[t._v("[0, 1]")]),t._v(".")])]),t._v(" "),s("h2",{attrs:{id:"nodedata"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#nodedata"}},[t._v("#")]),t._v(" "),s("code",[t._v("NodeData")])]),t._v(" "),s("div",{staticClass:"language-typescript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-typescript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("interface")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("NodeData")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    id"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v("\n    x"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("number")]),t._v("\n    y"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("number")]),t._v("\n    r"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("number")]),t._v("\n    fill"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Color\n    strokeWidth"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("number")]),t._v("\n    strokeColor"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Color\n    clickCallback"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("node"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Node"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[s("RouterLink",{attrs:{to:"/zh/API/interfaces.html#nodedata"}},[s("code",[t._v("NodeData")])]),t._v(" 接口定义了输入节点的数据格式.")],1),t._v(" "),s("ul",[s("li",[s("code",[t._v("id")]),t._v(" 是一个字符串. 它应该是唯一的, 用于识别不同的节点, 同时是必须的.")]),t._v(" "),s("li",[s("code",[t._v("x")]),t._v(" 和 "),s("code",[t._v("y")]),t._v(" 是数字. 用来配置节点的位置坐标. 它是可选的.")]),t._v(" "),s("li",[s("code",[t._v("fill")]),t._v(" 是一个 "),s("RouterLink",{attrs:{to:"/zh/API/interfaces.html#color"}},[t._v("Color")]),t._v(" 对象. 用来配置节点的颜色. 它是可选的.")],1),t._v(" "),s("li",[s("code",[t._v("strokeWidth")]),t._v(" 是一个数字. 用来配置节点边框的宽度. 它是可选的.")]),t._v(" "),s("li",[s("code",[t._v("strokeColor")]),t._v(" 是一个 "),s("RouterLink",{attrs:{to:"/zh/API/interfaces.html#color"}},[t._v("Color")]),t._v(" 对象. 用来配置节点边框的颜色. 它是可选的.")],1),t._v(" "),s("li",[s("code",[t._v("clickCallback")]),t._v(" 是一个函数, 当节点发生点击事件的时候可以触发回调函数. 它是可选的.")])]),t._v(" "),s("h2",{attrs:{id:"linkdata"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#linkdata"}},[t._v("#")]),t._v(" "),s("code",[t._v("LinkData")])]),t._v(" "),s("div",{staticClass:"language-typescript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-typescript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("interface")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("LinkData")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    source"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v("\n    target"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v("\n    strokeColor"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Color\n    strokeWidth"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("number")]),t._v("\n    clickCallback"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("link"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Link"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[s("RouterLink",{attrs:{to:"/zh/API/interfaces.html#linkdata"}},[s("code",[t._v("LinkData")])]),t._v(" 接口定义了输入边的数据格式.")],1),t._v(" "),s("ul",[s("li",[s("code",[t._v("source")]),t._v(" 和 "),s("code",[t._v("target")]),t._v(" 是字符串. 它们是这条边的源头节点和目标节点的 "),s("code",[t._v("id")]),t._v(". 它们可以唯一确定一条边. 它们是必须的.")]),t._v(" "),s("li",[s("code",[t._v("strokeWidth")]),t._v(" 是一个数字. 用来配置边的宽度. 它是可选的.")]),t._v(" "),s("li",[s("code",[t._v("strokeColor")]),t._v(" 是一个 "),s("RouterLink",{attrs:{to:"/zh/API/interfaces.html#color"}},[t._v("Color")]),t._v(" 对象. 用来配置边的颜色. 它是可选的.")],1),t._v(" "),s("li",[s("code",[t._v("clickCallback")]),t._v(" 是一个函数, 当边发生点击事件的时候可以触发回调函数. 它是可选的.")])]),t._v(" "),s("h3",{attrs:{id:"nodelinkdata"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#nodelinkdata"}},[t._v("#")]),t._v(" "),s("code",[t._v("NodeLinkData")])]),t._v(" "),s("div",{staticClass:"language-typescript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-typescript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("interface")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("NodeLinkData")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    nodes"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" NodeData"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n    links"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" LinkData"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[s("RouterLink",{attrs:{to:"/zh/API/interfaces.html#nodelinkdata"}},[t._v("NodeLinkData")]),t._v(" 接口定义了输入的数据格式:")],1),t._v(" "),s("ul",[s("li",[s("p",[s("code",[t._v("nodes")]),t._v(" 是一系列 "),s("RouterLink",{attrs:{to:"/zh/API/interfaces.html#nodedata"}},[s("code",[t._v("NodeData")])]),t._v(" 对象.")],1)]),t._v(" "),s("li",[s("p",[s("code",[t._v("links")]),t._v(" 是一系列 "),s("RouterLink",{attrs:{to:"/zh/API/interfaces.html#linkdata"}},[s("code",[t._v("LinkData")])]),t._v(" 对象. "),s("code",[t._v("links")]),t._v(" 可以为空, 此时节点将会被渲染.")],1)])]),t._v(" "),s("h2",{attrs:{id:"position"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#position"}},[t._v("#")]),t._v(" "),s("code",[t._v("Position")])]),t._v(" "),s("div",{staticClass:"language-typescript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-typescript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("interface")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Position")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    x"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("number")]),t._v("\n    y"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("number")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[s("RouterLink",{attrs:{to:"/zh/API/interfaces.html#position"}},[t._v("Position")]),t._v(" 表示一个 2 维平面坐标. 比如，一个节点可以有一个位置："),s("code",[t._v("{x: 10, y: 10}")]),t._v("。")],1),t._v(" "),s("h2",{attrs:{id:"transform"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#transform"}},[t._v("#")]),t._v(" "),s("code",[t._v("Transform")])]),t._v(" "),s("div",{staticClass:"language-typescript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-typescript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("interface")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Transform")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    x"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("number")]),t._v("\n    y"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("number")]),t._v("\n    k"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("number")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[s("RouterLink",{attrs:{to:"/zh/API/interfaces.html#transform"}},[t._v("Transform")]),t._v(" 指定了一次针对针对所有坐标的变换。比如，一个坐标为"),s("code",[t._v("(px, py)")]),t._v("的节点会被变换到"),s("code",[t._v("(px * k + x, py * k + y)")]),t._v("的位置。")],1)])}),[],!1,null,null,null);a.default=e.exports}}]);