(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{836:function(t,a,s){"use strict";s.r(a);var e=s(113),n=Object(e.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"netv"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#netv"}},[t._v("#")]),t._v(" NetV")]),t._v(" "),s("h2",{attrs:{id:"initialization"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#initialization"}},[t._v("#")]),t._v(" Initialization")]),t._v(" "),s("p",[s("code",[t._v("NetV")]),t._v(" is a class, an instance of "),s("code",[t._v("NetV")]),t._v(" can be created as follows:")]),t._v(" "),s("div",{staticClass:"language-typescript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-typescript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" netV "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("NetV")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* Configurations */")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("p",[t._v("A "),s("code",[t._v("NetV")]),t._v(" instance can be initialized without any configuration except "),s("code",[t._v("container")]),t._v(". "),s("code",[t._v("Container")]),t._v(" must be a "),s("code",[t._v("div")]),t._v(" element. For example:")]),t._v(" "),s("div",{staticClass:"language-typescript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-typescript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" netV "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("NetV")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    container"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" document"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("createElement")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"div"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("p",[t._v("The entire initialization configuration interface can be referred in: "),s("a",{attrs:{href:"#InitializationConfigurations"}},[t._v("InitializationConfigurations")])]),t._v(" "),s("h2",{attrs:{id:"manipulation"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#manipulation"}},[t._v("#")]),t._v(" Manipulation")]),t._v(" "),s("h3",{attrs:{id:"netv-backgroundcolor"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#netv-backgroundcolor"}},[t._v("#")]),t._v(" "),s("code",[t._v("netv.backgroundColor()")])]),t._v(" "),s("p",[t._v("Get/Set NetV's background color.")]),t._v(" "),s("ul",[s("li",[s("p",[s("code",[t._v("netv.backgroundColor()")]),t._v(": return NetV's background color in "),s("a",{attrs:{href:"#color"}},[t._v("Color")]),t._v(".")])]),t._v(" "),s("li",[s("p",[s("code",[t._v("netv.backgroundColor(color)")]),t._v(": set NetV's background color in "),s("a",{attrs:{href:"#color"}},[t._v("Color")]),t._v(".")])])]),t._v(" "),s("h3",{attrs:{id:"netv-dispose"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#netv-dispose"}},[t._v("#")]),t._v(" "),s("code",[t._v("netv.dispose()")])]),t._v(" "),s("p",[t._v("Dispose NetV instance. Wipe data and clear all related DOM elements and allocated memory.")]),t._v(" "),s("h3",{attrs:{id:"netv-data"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#netv-data"}},[t._v("#")]),t._v(" "),s("code",[t._v("NetV.data()")])]),t._v(" "),s("p",[t._v("Add data into the "),s("code",[t._v("NetV")]),t._v(" instance or return added data.")]),t._v(" "),s("ul",[s("li",[s("p",[s("code",[t._v("NetV.data()")]),t._v(": return added data (a "),s("a",{attrs:{href:"#nodelinkdata"}},[s("code",[t._v("NodeLinkData")])]),t._v(" object).")])]),t._v(" "),s("li",[s("p",[s("code",[t._v("NetV.data(")]),s("a",{attrs:{href:"#nodelinkdata"}},[s("code",[t._v("NodeLinkData")])]),s("code",[t._v(")")]),t._v(": add data into the "),s("code",[t._v("NetV")]),t._v(" instance, no return value value.")]),t._v(" "),s("div",{staticClass:"language-typescript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-typescript"}},[s("code",[t._v("netV"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("data")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    nodes"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" id"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"0"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" x"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("300")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" y"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" id"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"1"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" x"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("500")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" y"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" id"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"2"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" x"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("400")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" y"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("400")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    links"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" source"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"0"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" target"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"2"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" source"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"1"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" target"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"2"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])])]),t._v(" "),s("h3",{attrs:{id:"netv-nodes"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#netv-nodes"}},[t._v("#")]),t._v(" "),s("code",[t._v("NetV.nodes()")])]),t._v(" "),s("p",[s("code",[t._v("NetV.nodes()")]),t._v(": return a "),s("a",{attrs:{href:"#node"}},[s("code",[t._v("Node")])]),t._v(" array which contains all the nodes in the "),s("code",[t._v("NetV")]),t._v(" instance.")]),t._v(" "),s("h3",{attrs:{id:"netv-links"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#netv-links"}},[t._v("#")]),t._v(" "),s("code",[t._v("NetV.links()")])]),t._v(" "),s("p",[s("code",[t._v("NetV.links()")]),t._v(": return a "),s("a",{attrs:{href:"#link"}},[s("code",[t._v("Link")])]),t._v(" array which contains all the links in the "),s("code",[t._v("NetV")]),t._v(" instance.")]),t._v(" "),s("h3",{attrs:{id:"netv-addnode"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#netv-addnode"}},[t._v("#")]),t._v(" "),s("code",[t._v("NetV.addNode()")])]),t._v(" "),s("p",[s("code",[t._v("NetV.addNode(")]),s("a",{attrs:{href:"#nodedata"}},[s("code",[t._v("NodeData")])]),s("code",[t._v(")")]),t._v(": add a new node with its data (Interface: "),s("a",{attrs:{href:"#nodedata"}},[s("code",[t._v("NodeData")])]),t._v("), return the added "),s("a",{attrs:{href:"#node"}},[s("code",[t._v("Node")])]),t._v(" object.")]),t._v(" "),s("div",{staticClass:"language-typescript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-typescript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" newNode "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" netV"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("addNode")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    id"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"3"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    x"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    y"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    fill"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" r"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" g"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" b"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" a"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    r"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("h3",{attrs:{id:"netv-addlink"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#netv-addlink"}},[t._v("#")]),t._v(" "),s("code",[t._v("NetV.addLink()")])]),t._v(" "),s("p",[s("code",[t._v("NetV.addLink(")]),s("a",{attrs:{href:"#linkdata"}},[s("code",[t._v("LinkData")])]),s("code",[t._v(")")]),t._v(": add a new link with its data (Interface: "),s("a",{attrs:{href:"#linkdata"}},[s("code",[t._v("LinkData")])]),t._v("), return the added "),s("a",{attrs:{href:"#link"}},[s("code",[t._v("Link")])]),t._v(" object.")]),t._v(" "),s("div",{staticClass:"language-typescript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-typescript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" newLink "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" netV"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("addLink")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    source"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"0"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    target"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"3"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    strokeColor"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" r"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" g"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" b"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" a"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("h3",{attrs:{id:"netv-addnodes"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#netv-addnodes"}},[t._v("#")]),t._v(" "),s("code",[t._v("NetV.addNodes()")])]),t._v(" "),s("p",[s("code",[t._v("NetV.addNodes(")]),s("a",{attrs:{href:"#nodedata"}},[s("code",[t._v("NodeData")])]),s("code",[t._v("[] )")]),t._v(": add a list of new nodes with their data, no return value.")]),t._v(" "),s("div",{staticClass:"language-typescript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-typescript"}},[s("code",[t._v("netV"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("addNodes")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" id"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"4"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" x"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("300")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" y"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" id"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"5"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" x"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("500")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" y"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" id"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"6"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" x"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("400")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" y"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("400")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("h3",{attrs:{id:"netv-addlinks"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#netv-addlinks"}},[t._v("#")]),t._v(" "),s("code",[t._v("NetV.addLinks()")])]),t._v(" "),s("p",[s("code",[t._v("NetV.addLinks(")]),s("a",{attrs:{href:"#linkdata"}},[s("code",[t._v("LinkData")])]),s("code",[t._v("[] )")]),t._v(": add a list of new links with their data, no return value.")]),t._v(" "),s("div",{staticClass:"language-typescript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-typescript"}},[s("code",[t._v("netV"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("addLinks")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" source"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"4"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" target"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"5"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" source"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"4"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" target"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"6"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("h3",{attrs:{id:"netv-getnodebyid"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#netv-getnodebyid"}},[t._v("#")]),t._v(" "),s("code",[t._v("NetV.getNodeById()")])]),t._v(" "),s("p",[s("code",[t._v("NetV.getNodeById( string )")]),t._v(": get a node from its ID, return a "),s("a",{attrs:{href:"#node"}},[s("code",[t._v("Node")])]),t._v(" object.")]),t._v(" "),s("div",{staticClass:"language-typescript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-typescript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" nodeOne "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" netV"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getNodeById")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"1"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("h3",{attrs:{id:"netv-getlinkbyends"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#netv-getlinkbyends"}},[t._v("#")]),t._v(" "),s("code",[t._v("NetV.getLinkByEnds()")])]),t._v(" "),s("p",[s("code",[t._v("NetV.getLinkByEnds(endId1: stirng, endId2: string)")]),t._v(": get a link from its source node's ID and target node's ID, return a "),s("a",{attrs:{href:"#link"}},[s("code",[t._v("Link")])]),t._v(" object. The parameter is an array with two nodes' ID, and their order is no matter.")]),t._v(" "),s("div",{staticClass:"language-typescript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-typescript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" linkOneTwo "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" netV"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getLinkByEnds")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"1"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"2"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("h3",{attrs:{id:"netv-getelementbyposition"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#netv-getelementbyposition"}},[t._v("#")]),t._v(" "),s("code",[t._v("NetV.getElementByPosition()")])]),t._v(" "),s("p",[s("code",[t._v("NetV.getElementByPosition( {x: number, y: number} )")]),t._v(": get an element (node/link) by a 2D position. Two numerical parameters are the 2D position (x and y). Return an object includes the Id\nand the object of the element : "),s("code",[t._v("{type: string, element: Node/Link}")])]),t._v(" "),s("div",{staticClass:"language-typescript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-typescript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" obj "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" netV"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getElementByPosition")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" x"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" y"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("200")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// example return: {type: 'node', element: Node}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("obj"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// no node/link on this position")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("console")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Empyt canvas on this position"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"node"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" node "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" obj"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("element\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" link "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" obj"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("element\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h3",{attrs:{id:"netv-wipe"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#netv-wipe"}},[t._v("#")]),t._v(" "),s("code",[t._v("NetV.wipe()")])]),t._v(" "),s("p",[s("code",[t._v("NetV.wipe()")]),t._v(": empty all the data in the "),s("code",[t._v("NetV")]),t._v(" instance, no return value.")]),t._v(" "),s("h3",{attrs:{id:"netv-loaddataset"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#netv-loaddataset"}},[t._v("#")]),t._v(" "),s("code",[t._v("NetV.loadDataset()")])]),t._v(" "),s("p",[s("code",[t._v("NetV.loadDataset( string )")]),t._v(": get an integrated dataset in "),s("em",[t._v("NetV.js")]),t._v(", return a "),s("a",{attrs:{href:"#nodelinkdata"}},[s("code",[t._v("NodeLinkData")])]),t._v(" object. Several datasets are supported:")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("'miserables'")]),t._v(": it contains co-occurrences of characters in Victor Hugo's novel 'Les Misérables'. There are 77 nodes and 254 links.")])]),t._v(" "),s("div",{staticClass:"language-typescript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-typescript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" miserables "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" netV"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("loadDataset")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"miserables"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nnetV"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("data")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("miserables"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("h2",{attrs:{id:"interactions"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#interactions"}},[t._v("#")]),t._v(" Interactions")]),t._v(" "),s("h3",{attrs:{id:"netv-on"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#netv-on"}},[t._v("#")]),t._v(" "),s("code",[t._v("netv.on()")])]),t._v(" "),s("p",[t._v("Add event listener for NetV. Note that it's bound to whole canvas instead of single element.")]),t._v(" "),s("p",[s("code",[t._v("netv.on(eventName: string, callback: (e: Event) => void)")])]),t._v(" "),s("ul",[s("li",[s("code",[t._v("eventName")]),t._v(": event type, support "),s("code",[t._v("zoom")]),t._v(", "),s("code",[t._v("pan")]),t._v(", "),s("code",[t._v("mousedown")]),t._v(", "),s("code",[t._v("mouseup")]),t._v(", "),s("code",[t._v("click")])]),t._v(" "),s("li",[s("code",[t._v("callback")]),t._v(": function to call when trigger corresponding event.")])]),t._v(" "),s("h3",{attrs:{id:"netv-off"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#netv-off"}},[t._v("#")]),t._v(" "),s("code",[t._v("netv.off()")])]),t._v(" "),s("p",[t._v("Remove event listener for NetV. Note that it's bound to whole canvas instead of single element.")]),t._v(" "),s("p",[s("code",[t._v("netv.on(eventName: string, callback: (e: Event) => void)")])]),t._v(" "),s("ul",[s("li",[s("code",[t._v("eventName")]),t._v(": event type, support "),s("code",[t._v("zoom")]),t._v(", "),s("code",[t._v("pan")]),t._v(", "),s("code",[t._v("mousedown")]),t._v(", "),s("code",[t._v("mouseup")]),t._v(", "),s("code",[t._v("click")])]),t._v(" "),s("li",[s("code",[t._v("callback")]),t._v(": function to call when trigger corresponding event.")])]),t._v(" "),s("h3",{attrs:{id:"netv-panby"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#netv-panby"}},[t._v("#")]),t._v(" "),s("code",[t._v("netv.panBy()")])]),t._v(" "),s("p",[t._v("Manually pan NetV's canvas.")]),t._v(" "),s("p",[s("code",[t._v("netv.panBy(x: number, y: number)")]),t._v(": pan by (x, y) offset.")]),t._v(" "),s("h3",{attrs:{id:"netv-zoomby"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#netv-zoomby"}},[t._v("#")]),t._v(" "),s("code",[t._v("netv.zoomBy()")])]),t._v(" "),s("p",[t._v("Manually zoom NetV's canvas.")]),t._v(" "),s("p",[s("code",[t._v("netv.zoomBy(k: number, center?: Position)")]),t._v(": zoom by k with "),s("code",[t._v("center")]),t._v(" as the center. "),s("code",[t._v("center")]),t._v(" will be canvas middle position if not specified.")]),t._v(" "),s("h3",{attrs:{id:"netv-centeron"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#netv-centeron"}},[t._v("#")]),t._v(" "),s("code",[t._v("netv.centerOn()")])]),t._v(" "),s("p",[t._v("manually pan to move node to center.")]),t._v(" "),s("p",[s("code",[t._v("netv.centerOn(node: Node)")]),t._v(": pan whole canvas to get given node at center of canvas.")]),t._v(" "),s("h3",{attrs:{id:"netv-transform"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#netv-transform"}},[t._v("#")]),t._v(" "),s("code",[t._v("netv.transform()")])]),t._v(" "),s("p",[t._v("Get/Set NetV's transform. This can be used for programmatically set canvas's pan offset and zoom factor.")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("netv.transform()")]),t._v(": return NetV's canvas transform in "),s("a",{attrs:{href:"#transform"}},[t._v("Transform")]),t._v(".")]),t._v(" "),s("li",[s("code",[t._v("netv.transform(value)")]),t._v(": set NetV's transform.")])]),t._v(" "),s("h3",{attrs:{id:"netv-transition"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#netv-transition"}},[t._v("#")]),t._v(" "),s("code",[t._v("netv.transition()")])]),t._v(" "),s("p",[t._v("Easing from current transform to given transforms in array one by one.")]),t._v(" "),s("p",[s("code",[t._v("netv.transition(transforms: Transform[], durationMS: number[], callback?:({transform: Transform}) => void)")])]),t._v(" "),s("ul",[s("li",[s("code",[t._v("transforms")]),t._v(": transforms waiting for changing to, each element is a "),s("a",{attrs:{href:"#transform"}},[t._v("Transform")]),t._v(".")]),t._v(" "),s("li",[s("code",[t._v("durationMS")]),t._v(": duration for each easing.")]),t._v(" "),s("li",[s("code",[t._v("callback")]),t._v(": "),s("em",[t._v("optional")]),t._v(", function to call during each easing step. The callback function can get current transform as parameter: "),s("code",[t._v("{ transform: Transform}")])])]),t._v(" "),s("h2",{attrs:{id:"render"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#render"}},[t._v("#")]),t._v(" Render")]),t._v(" "),s("h3",{attrs:{id:"netv-draw"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#netv-draw"}},[t._v("#")]),t._v(" "),s("code",[t._v("NetV.draw()")])]),t._v(" "),s("p",[s("code",[t._v("NetV.draw()")]),t._v(": draw/refresh all graphs on the canvas. "),s("strong",[t._v("Note that")]),t._v(" the visualization result will only be refreshed after calling "),s("code",[t._v("NetV.draw()")])]),t._v(" "),s("h1",{attrs:{id:"node"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#node"}},[t._v("#")]),t._v(" Node")]),t._v(" "),s("p",[s("a",{attrs:{href:"#node"}},[s("code",[t._v("Node")])]),t._v(" is a basic element in "),s("em",[t._v("NetV.js")]),t._v(". It is visualized as a circle in default.")]),t._v(" "),s("h2",{attrs:{id:"manipulation-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#manipulation-2"}},[t._v("#")]),t._v(" Manipulation")]),t._v(" "),s("h3",{attrs:{id:"node-id"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#node-id"}},[t._v("#")]),t._v(" "),s("code",[t._v("Node.id()")])]),t._v(" "),s("p",[s("code",[t._v("Node.id()")]),t._v(": return the ID of the node (a string).")]),t._v(" "),s("h3",{attrs:{id:"node-x"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#node-x"}},[t._v("#")]),t._v(" "),s("code",[t._v("Node.x()")])]),t._v(" "),s("p",[t._v("Get the x position of the node or set it.")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("Node.x()")]),t._v(": return the x position (a number) of the node;")]),t._v(" "),s("li",[s("code",[t._v("Node.x( number )")]),t._v(": set the x position of the node;")])]),t._v(" "),s("h3",{attrs:{id:"node-y"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#node-y"}},[t._v("#")]),t._v(" "),s("code",[t._v("Node.y()")])]),t._v(" "),s("p",[t._v("Same to "),s("code",[t._v("Node.x()")])]),t._v(" "),s("h3",{attrs:{id:"node-position"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#node-position"}},[t._v("#")]),t._v(" "),s("code",[t._v("Node.position()")])]),t._v(" "),s("p",[t._v("Get the position (x and y) of the node or set it.")]),t._v(" "),s("ul",[s("li",[s("p",[s("code",[t._v("Node.position()")]),t._v(": return an object ("),s("code",[t._v("{x: number, y: number}")]),t._v(")")])]),t._v(" "),s("li",[s("p",[s("code",[t._v("Node.position( {x: number, y: number} )")]),t._v(": set the position of the node. Two numerical parameters are the 2D position (x and y). Return the position ("),s("code",[t._v("{x: number, y: number}")]),t._v(").")]),t._v(" "),s("div",{staticClass:"language-typescript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-typescript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" nodeOne "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" netV"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getNodeById")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"1"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nnodeOne"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("position")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// example return: {x: 100, y: 200}")]),t._v("\nnodeOne"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("position")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" x"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" y"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nnetV"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("draw")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// note that only after netV.draw(), the visualization will be refreshed")]),t._v("\n")])])])])]),t._v(" "),s("h2",{attrs:{id:"style"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#style"}},[t._v("#")]),t._v(" Style")]),t._v(" "),s("img",{attrs:{src:t.$withBase("/node-style.svg"),alt:"node-style"}}),t._v(" "),s("div",{staticClass:"language-typescript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-typescript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" node "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" netV"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getNodeById")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"1"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nnode"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("r")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nnode"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("strokeWidth")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nnode"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("fill")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" r"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.98")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" g"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.69")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" b"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.23")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" a"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nnode"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("strokeColor")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" r"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" g"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.44")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" b"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.74")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" a"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nnetV"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("draw")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("h3",{attrs:{id:"node-r"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#node-r"}},[t._v("#")]),t._v(" "),s("code",[t._v("Node.r()")])]),t._v(" "),s("p",[t._v("Get or set the radius of the node.")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("Node.r()")]),t._v(": return the radius of the node (a number).")]),t._v(" "),s("li",[s("code",[t._v("Node.r( number )")]),t._v(": set the radius of the node.")])]),t._v(" "),s("h3",{attrs:{id:"node-fiil"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#node-fiil"}},[t._v("#")]),t._v(" "),s("code",[t._v("Node.fiil()")])]),t._v(" "),s("p",[t._v("Get or set the fill color of the node.")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("Node.fill()")]),t._v(": return the fill color of the node (a "),s("a",{attrs:{href:"#color"}},[s("code",[t._v("Color")])]),t._v(" object)")]),t._v(" "),s("li",[s("code",[t._v("Node.fill(")]),s("a",{attrs:{href:"#color"}},[s("code",[t._v("Color")])]),s("code",[t._v(")")]),t._v(": set the the fill color of the node.")])]),t._v(" "),s("h3",{attrs:{id:"node-strokecolor"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#node-strokecolor"}},[t._v("#")]),t._v(" "),s("code",[t._v("Node.strokeColor()")])]),t._v(" "),s("p",[t._v("Get or set the border color of the node.")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("Node.strokeColor()")]),t._v(": return the border color of the node (a "),s("a",{attrs:{href:"#color"}},[s("code",[t._v("Color")])]),t._v(" object)")]),t._v(" "),s("li",[s("code",[t._v("Node.strokeColor(")]),s("a",{attrs:{href:"#color"}},[s("code",[t._v("Color")])]),s("code",[t._v(")")]),t._v(": set the the border color of the node.")])]),t._v(" "),s("h3",{attrs:{id:"node-strokewidth"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#node-strokewidth"}},[t._v("#")]),t._v(" "),s("code",[t._v("Node.strokeWidth()")])]),t._v(" "),s("p",[t._v("Get or set the border width of the node.")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("Node.strokeWidth()")]),t._v(": return the border width of the node (a number).")]),t._v(" "),s("li",[s("code",[t._v("Node.strokeWidth( number )")]),t._v(": set the border width of the node.")])]),t._v(" "),s("h1",{attrs:{id:"link"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#link"}},[t._v("#")]),t._v(" Link")]),t._v(" "),s("p",[s("a",{attrs:{href:"#link"}},[s("code",[t._v("Link")])]),t._v(" is a basic element in "),s("em",[t._v("NetV.js")]),t._v(". It is visualized as a straight line (without an arrow) in default.")]),t._v(" "),s("h2",{attrs:{id:"manipulation-3"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#manipulation-3"}},[t._v("#")]),t._v(" Manipulation")]),t._v(" "),s("h3",{attrs:{id:"link-source"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#link-source"}},[t._v("#")]),t._v(" "),s("code",[t._v("Link.source()")])]),t._v(" "),s("p",[t._v("Get or set the source node of the link.")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("Link.source()")]),t._v(": return the source node (a "),s("a",{attrs:{href:"#node"}},[s("code",[t._v("Node")])]),t._v(" object).")]),t._v(" "),s("li",[s("code",[t._v("Link.source(")]),s("a",{attrs:{href:"#node"}},[s("code",[t._v("Node")])]),s("code",[t._v(")")]),t._v(": set the source node of the link.")])]),t._v(" "),s("h3",{attrs:{id:"link-target"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#link-target"}},[t._v("#")]),t._v(" "),s("code",[t._v("Link.target()")])]),t._v(" "),s("p",[t._v("Same to "),s("code",[t._v("Link.source()")])]),t._v(" "),s("h3",{attrs:{id:"link-sourcetarget"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#link-sourcetarget"}},[t._v("#")]),t._v(" "),s("code",[t._v("Link.sourceTarget()")])]),t._v(" "),s("p",[t._v("Get or set both the source and the target nodes of the link.")]),t._v(" "),s("ul",[s("li",[s("p",[s("code",[t._v("Link.sourceTarget()")]),t._v(": return an object with the source and the target nodes ("),s("code",[t._v("{source: Node, target: Node}")]),t._v(").")])]),t._v(" "),s("li",[s("p",[s("code",[t._v("Link.sourceTarget( {source: Node, target: Node} )")]),t._v(": set the source and the target nodes of the link.")]),t._v(" "),s("div",{staticClass:"language-typescript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-typescript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" linkOneTwo "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" netV"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getLinkByEnds")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"1"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"2"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" nodeOne "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" netV"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getNodeById")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"1"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" nodeThree "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" netV"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getNodeById")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"3"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nlinkOneTwo"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sourceTarget")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    source"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" nodeOne"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    target"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" nodeThree"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// change linkOneTwo's target into nodeThree")]),t._v("\n")])])])])]),t._v(" "),s("h2",{attrs:{id:"style-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#style-2"}},[t._v("#")]),t._v(" Style")]),t._v(" "),s("img",{attrs:{src:t.$withBase("/link-style.svg"),alt:"link-style"}}),t._v(" "),s("div",{staticClass:"language-typescript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-typescript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" linkOneTwo "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" netV"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getLinkByEnds")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"1"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"2"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nlink"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("strokeWidth")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nlink"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("strokeColor")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" r"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" g"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.44")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" b"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.74")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" a"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nnetV"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("draw")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("h3",{attrs:{id:"link-strokecolor"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#link-strokecolor"}},[t._v("#")]),t._v(" "),s("code",[t._v("Link.strokeColor()")])]),t._v(" "),s("p",[t._v("Get or set the color of the link.")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("Link.strokeColor()")]),t._v(": return the color of the link (a "),s("a",{attrs:{href:"#color"}},[s("code",[t._v("Color")])]),t._v(" object ).")]),t._v(" "),s("li",[s("code",[t._v("Link.strokeColor(")]),s("a",{attrs:{href:"#color"}},[s("code",[t._v("Color")])]),s("code",[t._v(")")]),t._v(": set the color of the link.")])]),t._v(" "),s("h3",{attrs:{id:"link-strokewidth"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#link-strokewidth"}},[t._v("#")]),t._v(" "),s("code",[t._v("Link.strokeWidth()")])]),t._v(" "),s("p",[t._v("Get or set the width of the link")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("Link.strokeWidth()")]),t._v(": return the width of the link (a number).")]),t._v(" "),s("li",[s("code",[t._v("Link.strokeWidth( number )")]),t._v(": set the width of the link.")])]),t._v(" "),s("h1",{attrs:{id:"utils"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#utils"}},[t._v("#")]),t._v(" Utils")]),t._v(" "),s("p",[t._v("Some utilities are provided in "),s("em",[t._v("NetV.js")]),t._v(".")]),t._v(" "),s("h2",{attrs:{id:"utils-transformgraphposition"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#utils-transformgraphposition"}},[t._v("#")]),t._v(" "),s("code",[t._v("Utils.transformGraphPosition()")])]),t._v(" "),s("p",[s("code",[t._v("Utils.transformGraphPosition(")]),s("a",{attrs:{href:"#nodelinkdata"}},[s("code",[t._v("NodeLinkData")])]),s("code",[t._v(", number, number, number)")]),t._v(": transform the nodes' positions into a given square area. The first parameter is the data that will be imported into a "),s("code",[t._v("NetV")]),t._v(" instance. The second parameter defines the length of the square's side. The third and fourth parameters define the center position of the square.")]),t._v(" "),s("div",{staticClass:"language-typescript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-typescript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" data "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    nodes"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            id"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"1"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            x"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            y"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            id"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"2"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            x"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            y"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    links"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" source"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"1"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" target"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"2"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// transform the data into a square from (0, 0) to (1, 1)")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" dataAfterTransform "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" netV"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Utils"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("transformGraphPosition")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("data"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.5")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.5")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// node with id '1' will be located on (0.25, 0)")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// node with id '2' will be located on (0.75, 1)")]),t._v("\n")])])]),s("h1",{attrs:{id:"interfaces"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#interfaces"}},[t._v("#")]),t._v(" Interfaces")]),t._v(" "),s("h2",{attrs:{id:"initializationconfigurations"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#initializationconfigurations"}},[t._v("#")]),t._v(" "),s("code",[t._v("InitializationConfigurations")])]),t._v(" "),s("div",{staticClass:"language-typescript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-typescript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("interface")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("InitializationConfigurations")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    container"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" HTMLDivElement\n    node"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        r"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("number")]),t._v("\n        fill"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Color\n        strokeWidth"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("number")]),t._v("\n        strokeColor"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Color\n        "),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("clickCallback")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("node"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Node"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    link"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        strokeWidth"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("number")]),t._v("\n        strokeColor"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Color\n        "),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("clickCallback")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("link"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Link"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    width"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("number")]),t._v("\n    height"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("number")]),t._v("\n    backgroundColor"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Color\n    nodeLimit"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("number")]),t._v("\n    linkLimit"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("number")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("The "),s("a",{attrs:{href:"#initializationconfigurations"}},[t._v("initializationConfigurations")]),t._v(" is the interface of the "),s("code",[t._v("NetV")]),t._v(" initialization configurations.")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("container")]),t._v(" configures the container of the visualization. It is a "),s("code",[t._v("<div>")]),t._v(" element. Visualizations and interactions are supported within the container. It is "),s("strong",[t._v("required")]),t._v(".")]),t._v(" "),s("li",[s("code",[t._v("node")]),t._v(" configures the default node appearance and behaviors. The node is visualized as a circle in "),s("em",[t._v("NetV.js")]),t._v(".\n"),s("ul",[s("li",[s("code",[t._v("r")]),t._v(" is a number. It configures the radius of a node. Its default value is "),s("code",[t._v("5")]),t._v(".")]),t._v(" "),s("li",[s("code",[t._v("fill")]),t._v(" is a "),s("a",{attrs:{href:"#color"}},[t._v("Color")]),t._v(" object. It configures the fill color of a node. Its default value is "),s("code",[t._v("{r: 0.2, g: 0.6, b: 0.2, a: 0.8}")]),t._v(".")]),t._v(" "),s("li",[s("code",[t._v("strokeWidth")]),t._v(" is a number. It configures the border width of a node. Its default value is "),s("code",[t._v("2")]),t._v(".")]),t._v(" "),s("li",[s("code",[t._v("strokeColor")]),t._v(" is a "),s("a",{attrs:{href:"#color"}},[t._v("Color")]),t._v(" object. It configures the border color of a node. Its default value is "),s("code",[t._v("{ r: 0.9, g: 0.9, b: 0.9, a: 0.6 }")]),t._v(".")]),t._v(" "),s("li",[s("code",[t._v("clickCallback")]),t._v(" is a function. It is the callback function while the cursor clicks on a node. Its default value is a void function: "),s("code",[t._v("(node: Node)=>{}")]),t._v(".")])])]),t._v(" "),s("li",[s("code",[t._v("link")]),t._v(" configures the default link appearance and behaviors. The link is visualized as a straight line in "),s("em",[t._v("NetV.js")]),t._v(".\n"),s("ul",[s("li",[s("code",[t._v("strokeWidth")]),t._v(" is a number. It configures the width of a link. Its default value is "),s("code",[t._v("2")]),t._v(".")]),t._v(" "),s("li",[s("code",[t._v("strokeColor")]),t._v(" is a "),s("a",{attrs:{href:"#color"}},[t._v("Color")]),t._v(" object. It configures the color of a link. Its default value is "),s("code",[t._v("{ r: 0.4, g: 0.6, b: 0.8, a: 0.5 }")]),t._v(".")]),t._v(" "),s("li",[s("code",[t._v("clickCallback")]),t._v(" is a function. It is the callback function while the cursor clicks on a link. Its default value is a void function: "),s("code",[t._v("(link: Link)=>{}")]),t._v(".")])])]),t._v(" "),s("li",[s("code",[t._v("width")]),t._v(" is a number. It configures the default container width. Its default value is "),s("code",[t._v("800")]),t._v(".")]),t._v(" "),s("li",[s("code",[t._v("height")]),t._v(" is a number. It configures the default container height. Its default value is "),s("code",[t._v("600")]),t._v(".")]),t._v(" "),s("li",[s("code",[t._v("backgroundColor")]),t._v(" is a "),s("a",{attrs:{href:"#color"}},[t._v("Color")]),t._v(" object. It configures the default container background color. Its default value is "),s("code",[t._v("{ r: 1, g: 1, b: 1, a: 1 }")]),t._v(" (white).")]),t._v(" "),s("li",[s("code",[t._v("nodeLimit")]),t._v(" is a number. It is used to allocate a fixed space in WebGL for rendering nodes. It is recommended to set to be the upper limit of the number of nodes you need to load. Its default value is "),s("code",[t._v("100")]),t._v(". "),s("strong",[t._v("Note that")]),t._v(" you need to reset it if you want to load more than 100 nodes.")]),t._v(" "),s("li",[s("code",[t._v("linkLimit")]),t._v(" is a number. It is used to allocate a fixed space in WebGL for rendering links. It is recommended to set to be the upper limit of the number of links you need to load. Its default value is "),s("code",[t._v("1000")]),t._v(". "),s("strong",[t._v("Note that")]),t._v(" you need to reset it if you want to load more than 1000 links.")])]),t._v(" "),s("h2",{attrs:{id:"color"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#color"}},[t._v("#")]),t._v(" "),s("code",[t._v("Color")])]),t._v(" "),s("div",{staticClass:"language-typescript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-typescript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("interface")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Color")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    r"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("number")]),t._v("\n    g"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("number")]),t._v("\n    b"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("number")]),t._v("\n    a"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("number")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("ul",[s("li",[s("code",[t._v("r")]),t._v(", "),s("code",[t._v("g")]),t._v(", "),s("code",[t._v("b")]),t._v(", and "),s("code",[t._v("a")]),t._v(" are four channels of the RGBA color model. Their range is "),s("code",[t._v("[0, 1]")]),t._v(".")])]),t._v(" "),s("h2",{attrs:{id:"nodedata"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#nodedata"}},[t._v("#")]),t._v(" "),s("code",[t._v("NodeData")])]),t._v(" "),s("div",{staticClass:"language-typescript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-typescript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("interface")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("NodeData")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    id"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v("\n    x"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("number")]),t._v("\n    y"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("number")]),t._v("\n    r"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("number")]),t._v("\n    fill"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Color\n    strokeWidth"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("number")]),t._v("\n    strokeColor"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Color\n    clickCallback"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("node"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Node"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("The "),s("a",{attrs:{href:"#nodedata"}},[s("code",[t._v("NodeData")])]),t._v(" interface specifies the data format of the input node.")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("id")]),t._v(" is a string. It is the unique identifier of a node. It is required.")]),t._v(" "),s("li",[s("code",[t._v("x")]),t._v(" and "),s("code",[t._v("y")]),t._v(" are numbers. They specify the position of a node. They are optional.")]),t._v(" "),s("li",[s("code",[t._v("fill")]),t._v(" is a "),s("a",{attrs:{href:"#color"}},[t._v("Color")]),t._v(" object. It configures the fill color of a node. It is optional.")]),t._v(" "),s("li",[s("code",[t._v("strokeWidth")]),t._v(" is a number. It configures the border width of a node. It is optional.")]),t._v(" "),s("li",[s("code",[t._v("strokeColor")]),t._v(" is a "),s("a",{attrs:{href:"#color"}},[t._v("Color")]),t._v(" object. It configures the border color of a node. It is optional.")]),t._v(" "),s("li",[s("code",[t._v("clickCallback")]),t._v(" is a function. It is the callback function while the cursor clicks on a node. It is optional.")])]),t._v(" "),s("h2",{attrs:{id:"linkdata"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#linkdata"}},[t._v("#")]),t._v(" "),s("code",[t._v("LinkData")])]),t._v(" "),s("div",{staticClass:"language-typescript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-typescript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("interface")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("LinkData")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    source"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v("\n    target"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v("\n    strokeColor"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Color\n    strokeWidth"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("number")]),t._v("\n    clickCallback"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("link"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Link"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("The "),s("a",{attrs:{href:"#linkdata"}},[s("code",[t._v("LinkData")])]),t._v(" interface specifies the data format of the input link.")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("source")]),t._v(" and "),s("code",[t._v("target")]),t._v(" are strings. They are the "),s("code",[t._v("id")]),t._v(" of the source node and the target node of a link. They form the unique identifier of the link. They are both required.")]),t._v(" "),s("li",[s("code",[t._v("strokeWidth")]),t._v(" is a number. It configures the width of a link. It is optional.")]),t._v(" "),s("li",[s("code",[t._v("strokeColor")]),t._v(" is a "),s("a",{attrs:{href:"#color"}},[t._v("Color")]),t._v(" object. It configures the color of a link. It is optional.")]),t._v(" "),s("li",[s("code",[t._v("clickCallback")]),t._v(" is a function. It is the callback function while the cursor clicks on a link. It is optional.")])]),t._v(" "),s("h2",{attrs:{id:"nodelinkdata"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#nodelinkdata"}},[t._v("#")]),t._v(" "),s("code",[t._v("NodeLinkData")])]),t._v(" "),s("div",{staticClass:"language-typescript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-typescript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("interface")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("NodeLinkData")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    nodes"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" NodeData"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n    links"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" LinkData"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("The "),s("a",{attrs:{href:"#nodelinkdata"}},[t._v("NodeLinkData")]),t._v(" interface specifies the data format of the input data. It includes:")]),t._v(" "),s("ul",[s("li",[s("p",[s("code",[t._v("nodes")]),t._v(" is a list of "),s("a",{attrs:{href:"#nodedata"}},[s("code",[t._v("NodeData")])]),t._v(" objects.")])]),t._v(" "),s("li",[s("p",[s("code",[t._v("links")]),t._v(" is a list of "),s("a",{attrs:{href:"#linkdata"}},[s("code",[t._v("LinkData")])]),t._v(" objects. The "),s("code",[t._v("links")]),t._v(" can be an empty array so that only nodes will be rendered.")])])]),t._v(" "),s("h2",{attrs:{id:"transform"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#transform"}},[t._v("#")]),t._v(" "),s("code",[t._v("Transform")])]),t._v(" "),s("div",{staticClass:"language-typescript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-typescript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("interface")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Transform")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    x"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("number")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    y"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("number")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    k"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("number")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("The "),s("a",{attrs:{href:"#transform"}},[t._v("Transform")]),t._v(" specifies transformation applied on all positions. For example, a node with position "),s("code",[t._v("(px, py)")]),t._v(" will be shown on canvas at "),s("code",[t._v("(px * k + x, py * k + y)")])])])}),[],!1,null,null,null);a.default=n.exports}}]);